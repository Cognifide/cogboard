{"version":3,"sources":["assets/images/cogBoard-white.png","reducers/app/initialized.js","actions/types.js","reducers/app/dataFetching.js","reducers/app/isDataChanged.js","reducers/app/isDataSaving.js","reducers/app/loginErrorMessage.js","reducers/app/isAuthenticated.js","reducers/app/index.js","reducers/ui/currentBoard.js","reducers/ui/index.js","reducers/helpers.js","reducers/boards/boardsById.js","reducers/boards/allBoards.js","reducers/boards/index.js","reducers/widgets/widgetsById.js","reducers/widgets/allWidgets.js","reducers/widgets/index.js","reducers/index.js","actions/helpers.js","constants/index.js","actions/actionCreators.js","utils/auth.js","actions/thunks.js","theme.js","components/helpers/index.js","hooks/index.js","selectors/index.js","components/AppDialog.js","components/CancelButton.js","components/widgets/types/DefaultWidget.js","components/IframeEmbed.js","components/styled/index.js","components/widgets/types/ExampleWidget.js","components/widgets/types/JenkinsJobWidget.js","components/widgets/types/SonarQubeWidget.js","components/Loader/styled.js","components/Loader/index.js","components/widgets/types/ServiceCheckWidget.js","components/widgets/types/TextWidget/styled.js","components/widgets/types/TextWidget/index.js","components/widgets/types/BambooPlanWidget.js","components/widgets/types/WorldClockWidget/helpers.js","components/widgets/types/WorldClockWidget/styled.js","components/widgets/types/WorldClockWidget/index.js","components/widgets/types/CheckboxWidget/helpers.js","components/StatusIcon.js","components/widgets/types/CheckboxWidget/index.js","components/widgets/types/AemHealthcheckWidget/index.js","components/widgets/types/IframeEmbedWidget/helpers.js","components/widgets/index.js","components/widgets/types/IframeEmbedWidget/index.js","components/DropdownField.js","components/widgets/dialogFields/EndpointInput.js","components/widgets/dialogFields/NumberInput.js","components/widgets/dialogFields/TextInput.js","components/widgets/dialogFields/DisplayValueSelect.js","components/widgets/dialogFields/TextSizeInput.js","components/widgets/dialogFields/MultilineTextInput.js","components/widgets/dialogFields/CheckboxInput.js","components/widgets/dialogFields/index.js","components/widgets/dialogFields/SonarQubeMetricsInput.js","components/widgets/dialogFields/AemHealthcheckInput.js","components/WidgetTypeForm/index.js","components/WidgetTypeForm/helpers.js","components/TabPanel.js","components/WidgetForm/styled.js","components/WidgetForm/helpers.js","components/WidgetForm/index.js","components/AddWidget.js","components/Widget/styled.js","components/Widget/helpers.js","components/EditWidget.js","components/MoreMenu.js","components/WidgetContent.js","components/LastUpdate/styled.js","components/LastUpdate/index.js","components/ConfirmationDialog/styled.js","components/ConfirmationDialog/index.js","components/Widget/index.js","components/WidgetList.js","components/Board/styled.js","components/Board/helpers.js","components/Board/index.js","components/BoardIndex.js","components/BoardSwitcher/styled.js","components/BoardSwitcher/index.js","components/BoardSwitcher/hooks.js","components/BoardSwitcher/helpers.js","components/SnackbarVariantContent/styled.js","components/SnackbarVariantContent/helpers.js","components/IconVariant.js","components/SnackbarVariantContent/index.js","components/SnackbarWithVariant.js","components/UserLogin/helpers.js","components/UserLogin/index.js","components/NavBar.js","components/BoardForm/styled.js","components/BoardForm/index.js","components/AddBoard.js","components/EditBoard.js","components/BoardCard/styled.js","components/BoardCard/index.js","components/BoardList/styled.js","components/BoardList/index.js","components/Logo.js","components/MainTemplate/styled.js","components/MainTemplate/index.js","App.js","serviceWorker.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","initialized","state","arguments","length","undefined","type","dataFetching","isDataChanged","isDataSaving","loginErrorMessage","_ref","payload","isAuthenticated","app","combineReducers","currentBoard","action","boardId","ui","reorderItems","items","sourceId","targetIndex","withoutSource","filter","itemId","concat","Object","toConsumableArray","slice","boardsById","boards","objectSpread","receiveData","_ref2","entries","reduce","newState","_ref3","_ref4","slicedToArray","boardProps","initBoardProps","_ref5","id","defineProperty","addBoard","_ref6","other","objectWithoutProperties","board","editBoard","_ref7","rest","map","_toPropertyKey","deleteBoard","_ref8","widgets","addWidget","_ref9","widgetId","deleteWidget","_ref10","sortedWidgets","sortWidgets","allBoards","reorderBoards","widgetsById","widget","isUpdating","requestUpdate","content","prevContent","updateWidget","editWidget","widgetsById_toPropertyKey","allWidgets","widgetIds","includes","deleteMultipleWidgets","rootReducer","prefix","URL","ItemTypes","AEM_HEALTH_CHECKS","inactiveBundles","asyncIndexHealthCheck","codeCacheHealthCheck","DiskSpaceHealthCheck","logErrorHealthCheck","ObservationQueueLengthHealthCheck","resourceSearchPathErrorHealthCheck","requestsStatus","queriesStatus","queryTraversalLimitsBundle","securitychecks","slingJobs","slingDiscoveryOakSynchronizedClocks","systemchecks","ALL_SONARQUBE_METRICS","INITIAL_BOARD_PROPS","autoSwitch","switchInterval","loginSuccess","clearLoginErrorMessage","data","editData","saveDataSuccess","setCurrentBoard","getToken","localStorage","getItem","token","expTimestamp","decode","exp","Date","now","isTokenExpired","checkResponseStatus","response","status","statusText","Promise","resolve","reject","Error","fetchData","url","method","postConfig","body","JSON","stringify","headers","Content-Type","fetch","then","json","createWidgetId","allIds","intRegex","RegExp","_sort","sort","a","b","Number","match","lastId","intId","replace","mapFormValuesToWidgetData","values","columns","goNewLine","rows","config","withAuthentication","actionCallback","_len","args","Array","_key","dispatch","apply","logout","withDataChanged","_len2","_key2","fetchInitialData","console","error","login","credentials","setItem","setToken","message","removeItem","makeWidgetUpdaterThunk","beforeUpdateActionCreator","widgetDataCreator","getState","widgetData","_mapDataToState","title","disabled","generalData","forEach","prop","serverData","mapDataToState","addNewWidget","currentBoardId","saveWidget","removeWidget","reorderWidgets","reorderBoard","addNewBoard","v4","theme","saveBoard","deleteBoardWithWidgets","_getState2","firstBoardId","navigate","setWidgetState","saveData","_getState","createGradient","start","end","createMuiTheme","palette","background","default","paper","card","dragged","UNKNOWN","OK","IN_PROGRESS","UNSTABLE","ERROR_CONNECTION","ERROR_CONFIGURATION","ERROR","FAIL","variant","info","blue","success","green","warning","amber","red","shape","borderRadius","typography","h3","fontWeight","letterSpacing","setSize","factor","spacing","splitPropsGroupName","propName","split","sortByKey","obj","key","asc","keyA","keyB","localeCompare","newObj","value","useToggle","_useState","useState","_useState2","isOpened","setOpened","useFormData","_useState3","_useState4","setValues","handleChange","fieldName","event","_event$target","target","valueType","checkbox","checked","number","fieldValue","_splitPropsGroupName","_splitPropsGroupName2","groupName","groupValues","setFieldValue","getBoardsById","getIsAuthenticated","createSelector","getCurrentBoardId","getBoard","_","getBoardTitle","getSwitchInterval","getSwitcherBoards","StyledDialog","styled_base_browser_esm","props","react_default","createElement","Dialog","assign","classes","name","styles","StyledDialogContent","DialogContent","AppDialog","children","handleDialogClose","open","disableBackdropClick","stopEventPropagation","stopPropagation","onClick","onClose","onKeyDown","aria-labelledby","PaperProps","data-cy","DialogTitle","defaultProps","CancelButton","handleCancelClick","className","Button","color","DefaultWidget","IframeEmbed","iframe","StyledTypography","Typography","FullWidthButtonOutlined","fullWidth","WidgetButton","WidgetIconButton","IconButton","Caption","paragraph","StyledFieldset","FormControl","StyledIframe","components_IframeEmbed","frameBorder","allowFullScreen","height","StyledFormControlForDropdown","StyledTitle","StyledFormControl","ExampleWidget","serverTime","ts","toLocaleString","styled_Caption","JenkinsJobWidget","duration","displayName","timestamp","branch","dur","Fragment","href","SonarQubeWidget","metrics","version","date","errorMessage","parse","metric","val","StyledCircularProgress","CircularProgress","Loader","text","ServiceCheckWidget","statusCode","statusMessage","expectedStatusCode","statusCodeMessage","components_Loader","size","VerticalText","StyledPre","TextWidget","textSize","TextVariant","isVertical","BambooPlanWidget","lifeCycleState","getDateTime","timezone","format","moment","tz","GMT_TIMEZONES","allTimezones","names","duplicatedTimezones","gmtTimezones","parts","parseInt","display","c","splice","guess","getGmtTimezones","DATE_FORMATS","TIME_FORMATS","TimePre","DatePre","WorldClockWidget","timeZoneId","dateFormat","timeFormat","displayDate","displayTime","initTime","time","setTime","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","getNextStatus","statusArray","statusIndex","findIndex","element","nextStatusIndex","StatusIcon","iconComponents","Check","Close","IndeterminateCheckBoxOutlined","IconComponent","fontSize","CheckboxWidget","useSelector","useDispatch","aria-label","aria-checked","components_StatusIcon","AemHealthcheckWidget","healthChecks","Link","attachHttp","startsWith","widgetTypes","component","dialogFields","showUpdateTime","IframeEmbedWidget","styled_StyledIframe","core","DropdownField","onChange","label","dropdownItems","itemsUrl","initialLoaded","options","setOptions","loaded","setLoaded","init","Authorization","catch","InputLabel","shrink","htmlFor","Select","input","Input","inputProps","EndpointInput","components_DropdownField","endpoints","MenuItem","NumberInput","min","step","TextField","InputLabelProps","margin","TextInput","DisplayValueSelect","item","renderTextSize","textSizes","attr","TextSizeInput","MultilineTextInput","multiline","CheckboxInput","FormControlLabel","control","Checkbox","EndpointField","SchedulePeriod","initialValue","Path","UrlForContent","IdString","IdNumber","Key","SonarQubeMetricsInput","inputId","multiple","renderValue","ListItemText","primary","AemHealthcheckInput","StatusCode","TimeZoneId","DateFormat","TimeFormat","DisplayDate","DisplayTime","DateTimeSize","XXL","XL","L","M","S","XS","XXS","Text","TextSize","TextOrientation","WidgetTypeForm","widgetType","dialogFieldNames","WidgetTypeForm_StyledFieldset","_dialogFields$fieldNa","DialogField","_dialogFields$fieldNa2","dialogFieldProps","valueRef","createValueRef","TabPanel","index","role","hidden","StyledNumberField","StyledTabPanel","StyledTabs","Tabs","renderWidgetTypesMenu","WidgetForm","renderActions","initialFormValues","boardColumns","_useFormData","tabValue","setTabValue","hasDialogFields","newValue","Tab","Box","justifyContent","max","Switch","components_WidgetTypeForm","StyledCancelButton","AddWidget","closeDialog","handleAddClick","components_WidgetForm","StyledCard","forwardRef","ref","isLoggedIn","isDragging","isOver","Card","mapStatusToColor","hover","propTypes","isRequired","bool","string","object","StyledCardHeader","CardHeader","StyledCardContent","CardContent","EditWidget","widgetTypeData","handleSaveClick","EditWidget_StyledCancelButton","MoreMenu","anchorEl","setAnchorEl","handleMoreMenuClose","currentTarget","aria-controls","aria-haspopup","MoreVert","Menu","keepMounted","Boolean","MenuList","WidgetContent","WidgetType","LastUpdate","lastUpdateTime","styled_StyledTypography","align","gutterBottom","StyledButtonBox","ConfirmationDialog","handleOk","labelOk","handleCancel","labelCancel","components_AppDialog","autoFocus","styled_StyledCancelButton","Widget","shallowEqual","_widgetData$config","useTheme","_useToggle","_useToggle2","confirmationDialogOpened","openConfirmationDialog","closeConfirmationDialog","_useToggle3","_useToggle4","dialogOpened","openDialog","_useDrag","useDrag","canDrag","collect","monitor","_useDrag2","drag","_useDrop","useDrop","accept","sourceIndex","_ref$current$getBound","getBoundingClientRect","left","right","dropTargetMiddleX","dragSourceMouseX","getClientOffset","x","dropResult","getSourceClientOffset","_useDrop2","drop","handleEditClick","closeMenu","handleDeleteClick","titleTypographyProps","components_MoreMenu","components_WidgetContent","components_LastUpdate","components_EditWidget","components_ConfirmationDialog","WidgetList","components_Widget","StyledContainer","Board","components_WidgetList","IndexBoard","_useSelector","components_Board","StyledTimer","BoardSwitcher","_useBoardSwitching","switcherBoards","hasBoardsToSwitch","boardIndex","indexOf","isPlaying","setIsPlaying","timeElapsed","setTimeElapsed","_getPrevAndNextIndex","array","currentIndex","lastIndex","getPrevAndNextIndex","_getPrevAndNextIndex2","prevBoardIndex","nextBoardIndex","prevBoardTitle","nextBoardTitle","isDisable","switchBoard","useCallback","direction","currentBoardIndex","next","prev","interval","prevState","handleBoardsSwitch","handlePlayToggle","useBoardSwitching","timeLeft","timeInSec","seconds","minutes","Math","floor","leadingZero","formatTime","Tooltip","placement","edge","SkipPrevious","Pause","PlayArrow","SkipNext","SpanIcon","StyledSnackbarContent","SnackbarContent","mapVariantToColor","IconVariant","iconByVariant","CheckCircle","Warning","Info","Icon","SnackbarVariantContent","components_IconVariant","SnackbarWithVariant","handleClose","hideAfter","vertical","horizontal","Snackbar_default","anchorOrigin","autoHideDuration","components_SnackbarVariantContent","getCredentials","usernameField","document","getElementById","passwordField","username","password","UserLogin","errorMsg","loginSnackbarOpened","openLoginSnackbar","handleLoginSnackbarClose","_useToggle5","_useToggle6","logoutSnackbarOpened","openLogoutSnackbar","handleLogoutSnackbarClose","handleLoginButtonClick","handleLoginOnEnterPress","AccountCircle","PowerSettingsNew","onKeyPress","components_SnackbarWithVariant","StyledBoardSwitcher","StyledAppBar","AppBar","StyledToolbar","Toolbar","NavBar","handleDrawerToggle","position","Container","maxWidth","disableGutters","DashboardRounded","components_UserLogin","BoardForm","styled_StyledFieldset","AddBoard","handleAddActionClick","Add","components_BoardForm","AddBoard_StyledCancelButton","EditBoard","EditBoard_StyledCancelButton","StyledCardActions","CardActions","BoardCard","boardData","top","bottom","dropTargetMiddleY","dragSourceMouseY","y","styled_StyledCard","Edit","Delete","components_EditBoard","StyledBoardCard","BoardList","Logo","src","logo","alt","StyledActions","StyledSaveFab","Fab","StyledBoardList","StyledMain","StyledLogo","StyledDrawerContainer","MainTemplate","drawerOpened","setDrawerOpened","opened","components_NavBar","Drawer","components_AddBoard","router_es","BoardIndex","path","Save","components_AddWidget","App","appInitialized","socket","WebSocket","window","location","hostname","process","handleMessageReceive","dataJson","_JSON$parse","eventType","addEventListener","removeEventListener","ThemeProvider","esm","backend","HTML5Backend","CssBaseline","components_MainTemplate","store","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b20d72c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cogBoard-white.cd833032.png\";","import { RECEIVE_DATA } from '../../actions/types';\r\n\r\nconst initialized = (state = false, { type }) => {\r\n  return type === RECEIVE_DATA ? true : state;\r\n};\r\n\r\nexport default initialized;","export const INIT_BOARD_PROPS = 'INIT_BOARD_PROPS';\r\nexport const REQUEST_DATA = 'REQUEST_DATA';\r\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\r\nexport const REQUEST_UPDATE = 'REQUEST_UPDATE';\r\nexport const UPDATE_WIDGET = 'UPDATE_WIDGET';\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const EDIT_BOARD = 'EDIT_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const REORDER_BOARDS = 'REORDER_BOARDS';\r\nexport const SET_CURRENT_BOARD = 'SET_CURRENT_BOARD';\r\nexport const ADD_WIDGET = 'ADD_WIDGET';\r\nexport const EDIT_WIDGET = 'EDIT_WIDGET';\r\nexport const DELETE_WIDGET = 'DELETE_WIDGET';\r\nexport const DELETE_MULTIPLE_WIDGETS = 'DELETE_MULTIPLE_WIDGETS';\r\nexport const SORT_WIDGETS = 'SORT_WIDGETS';\r\nexport const DATA_CHANGED = 'DATA_CHANGED';\r\nexport const SAVE_DATA_START = 'SAVE_DATA_START';\r\nexport const SAVE_DATA_SUCCESS = 'SAVE_DATA_SUCCESS';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const CLEAR_LOGIN_ERROR_MESSAGE = 'CLEAR_LOGIN_ERROR_MESSAGE';\r\nexport const LOGOUT = 'LOGOUT';\r\n","import { REQUEST_DATA } from '../../actions/types';\r\n\r\nconst dataFetching = (state = false, { type }) => {\r\n  return type === REQUEST_DATA ? true : state;\r\n};\r\n\r\nexport default dataFetching;","import { DATA_CHANGED, SAVE_DATA_SUCCESS } from '../../actions/types';\r\n\r\nconst isDataChanged = (state = false, { type }) => {\r\n  switch (type) {\r\n    case DATA_CHANGED:\r\n      return true;\r\n    case SAVE_DATA_SUCCESS:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isDataChanged;","import { SAVE_DATA_START, SAVE_DATA_SUCCESS } from '../../actions/types';\r\n\r\nconst isDataSaving = (state = false, { type }) => {\r\n  switch (type) {\r\n    case SAVE_DATA_START:\r\n      return true;\r\n    case SAVE_DATA_SUCCESS:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isDataSaving;","import { LOGIN_FAILURE, LOGIN_SUCCESS, CLEAR_LOGIN_ERROR_MESSAGE, LOGOUT } from '../../actions/types';\r\n\r\nconst loginErrorMessage = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case LOGIN_FAILURE:\r\n      return payload;\r\n    case LOGIN_SUCCESS:\r\n    case CLEAR_LOGIN_ERROR_MESSAGE:\r\n    case LOGOUT:\r\n      return '';\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginErrorMessage;","import { LOGIN_SUCCESS, LOGOUT } from '../../actions/types';\r\n\r\nconst isAuthenticated = (state = false, { type }) => {\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return true;\r\n    case LOGOUT:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isAuthenticated;","import { combineReducers } from 'redux';\r\n\r\nimport initialized from './initialized';\r\nimport dataFetching from './dataFetching';\r\nimport isDataChanged from './isDataChanged';\r\nimport isDataSaving from './isDataSaving';\r\nimport loginErrorMessage from './loginErrorMessage';\r\nimport isAuthenticated from './isAuthenticated';\r\n\r\nconst app = combineReducers({\r\n  initialized,\r\n  dataFetching,\r\n  isDataChanged,\r\n  isDataSaving,\r\n  loginErrorMessage,\r\n  isAuthenticated\r\n});\r\n\r\nexport default app;","import { SET_CURRENT_BOARD } from '../../actions/types';\r\n\r\nconst currentBoard = (state = null, action) => {\r\n  const { type, payload: boardId } = action;\r\n\r\n  switch (type) {\r\n    case SET_CURRENT_BOARD:\r\n      return boardId;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentBoard;","import { combineReducers } from 'redux';\r\n\r\nimport currentBoard from './currentBoard';\r\n\r\nconst ui = combineReducers({\r\n  currentBoard\r\n});\r\n\r\nexport default ui;","export const reorderItems = (items, sourceId, targetIndex) => {\r\n    const withoutSource = items.filter(itemId => itemId !== sourceId);\r\n    const sortedItems = [\r\n      ...withoutSource.slice(0, targetIndex),\r\n      sourceId,\r\n      ...withoutSource.slice(targetIndex)\r\n    ];\r\n\r\n    return sortedItems\r\n}","import {\r\n  RECEIVE_DATA,\r\n  ADD_BOARD,\r\n  EDIT_BOARD,\r\n  DELETE_BOARD,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET,\r\n  SORT_WIDGETS,\r\n  INIT_BOARD_PROPS\r\n} from '../../actions/types';\r\n\r\nimport { reorderItems } from '../helpers';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const { boards: { boardsById } } = payload;\r\n\r\n  return { ...state, ...boardsById };\r\n};\r\n\r\nconst initBoardProps = (state, { payload }) => {\r\n  return Object.entries(state)\r\n    .reduce((newState, [boardId, boardProps]) => {\r\n      newState[boardId] = { ...payload, ...boardProps };\r\n\r\n      return newState;\r\n    }, {});\r\n};\r\n\r\nconst addBoard = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return { ...state, [id]: payload };\r\n};\r\n\r\nconst editBoard = (state, { payload }) => {\r\n  const { id, ...other } = payload;\r\n  const board = state[id];\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { ...board, ...other }\r\n  }\r\n};\r\n\r\nconst deleteBoard = (state, { payload: id }) => {\r\n  const { [id]: deletedBoard, ...rest } = state;\r\n\r\n  return { ...rest };\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: [...widgets, id]\r\n    }\r\n  };\r\n};\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: widgets.filter(widgetId => widgetId !== id)\r\n    }\r\n  };\r\n};\r\n\r\nconst sortWidgets = (state, { payload }) => {\r\n  const { sourceId, targetIndex, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n  const sortedWidgets = reorderItems(widgets, sourceId, targetIndex);\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: sortedWidgets\r\n    }\r\n  };\r\n};\r\n\r\nconst boardsById = (state = {}, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case INIT_BOARD_PROPS:\r\n      return initBoardProps(state, action);\r\n    case ADD_BOARD:\r\n      return addBoard(state, action);\r\n    case EDIT_BOARD:\r\n      return editBoard(state, action);\r\n    case DELETE_BOARD:\r\n      return deleteBoard(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    case SORT_WIDGETS:\r\n      return sortWidgets(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardsById;","import { RECEIVE_DATA, DELETE_BOARD, ADD_BOARD, REORDER_BOARDS } from '../../actions/types';\r\nimport { reorderItems } from '../helpers';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const { boards: { allBoards } } = payload;\r\n\r\n  return [...state, ...allBoards];\r\n};\r\n\r\nconst addBoard = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return [...state, id];\r\n};\r\n\r\nconst deleteBoard = (state, { payload: id }) =>\r\n  state.filter(boardId => boardId !== id);\r\n\r\nconst reorderBoards = (state, { payload }) => {\r\n  const { sourceId, targetIndex } = payload;\r\n  const boards = [...state];\r\n  const sortedBoards = reorderItems(boards, sourceId, targetIndex);\r\n\r\n  return sortedBoards\r\n};\r\n\r\nconst allBoards = (state = [], action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case ADD_BOARD:\r\n      return addBoard(state, action);\r\n    case DELETE_BOARD:\r\n      return deleteBoard(state, action);\r\n    case REORDER_BOARDS:\r\n      return reorderBoards(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allBoards;","import { combineReducers } from 'redux';\r\n\r\nimport boardsById from './boardsById';\r\nimport allBoards from './allBoards';\r\n\r\nconst boards = combineReducers({\r\n  boardsById,\r\n  allBoards\r\n});\r\n\r\nexport default boards;","import { RECEIVE_DATA, REQUEST_UPDATE, UPDATE_WIDGET, EDIT_WIDGET, ADD_WIDGET, DELETE_WIDGET } from '../../actions/types';\r\n\r\nconst requestUpdate = (state, { payload: id }) => {\r\n  const widget = state[id];\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { ...widget, isUpdating: true }\r\n  };\r\n};\r\n\r\nconst receiveData = (state, action) => {\r\n  const { payload } = action;\r\n  const { widgets: { widgetsById } } = payload;\r\n\r\n  return { ...state, ...widgetsById };\r\n};\r\n\r\nconst updateWidget = (state, { payload }) => {\r\n  const { id, content, ...other } = payload;\r\n  const widget = state[id];\r\n  const prevContent = widget.content;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: {\r\n      ...widget,\r\n      ...other,\r\n      content: { ...prevContent, ...content },\r\n      isUpdating: false\r\n    }\r\n  };\r\n};\r\n\r\nconst editWidget = (state, { payload }) => {\r\n  const { id, content, ...other } = payload;\r\n  const widget = state[id];\r\n  const prevContent = widget.content;\r\n\r\n\r\n  return {\r\n    ...state,\r\n    [id]: {\r\n      ...widget,\r\n      ...other,\r\n      content: { ...prevContent, ...content }\r\n    }\r\n  };\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id, boardId, ...other } = payload;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { id, ...other }\r\n  };\r\n}\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n  const { [id]: widgetId, ...rest } = state;\r\n\r\n  return rest;\r\n};\r\n\r\nconst widgetsById = (state = {}, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case REQUEST_UPDATE:\r\n      return requestUpdate(state, action);\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case UPDATE_WIDGET:\r\n      return updateWidget(state, action);\r\n    case EDIT_WIDGET:\r\n      return editWidget(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default widgetsById;","import { RECEIVE_DATA, ADD_WIDGET, DELETE_WIDGET, DELETE_MULTIPLE_WIDGETS } from '../../actions/types';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const { widgets: { allWidgets } } = payload;\r\n\r\n  return [...state, ...allWidgets];\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return [...state, id];\r\n};\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return state.filter(widgetId => widgetId !== id);\r\n};\r\n\r\nconst deleteMultipleWidgets = (state, { payload }) => {\r\n  const { widgetIds } = payload;\r\n\r\n  return state.filter(widgetId => !widgetIds.includes(widgetId));\r\n};\r\n\r\nconst allWidgets = (state = [], action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    case DELETE_MULTIPLE_WIDGETS:\r\n      return deleteMultipleWidgets(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allWidgets;","import { combineReducers } from 'redux';\n\nimport widgetsById from './widgetsById';\nimport allWidgets from './allWidgets';\n\nconst widgets = combineReducers({\n  widgetsById,\n  allWidgets\n});\n\nexport default widgets;\n","import { combineReducers } from 'redux';\r\n\r\nimport app from './app';\r\nimport ui from './ui';\r\nimport boards from './boards';\r\nimport widgets from './widgets';\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n  ui,\r\n  boards,\r\n  widgets\r\n});\r\n\r\nexport default rootReducer;","import { dataChanged } from './actionCreators';\r\nimport { logout } from './thunks';\r\nimport { isAuthenticated } from '../utils/auth';\r\n\r\nconst checkResponseStatus = response => {\r\n  const { status, statusText } = response;\r\n\r\n  if (status >= 200 && status < 300) {\r\n    return Promise.resolve(response);\r\n  } else {\r\n    return Promise.reject(new Error(statusText));\r\n  }\r\n};\r\n\r\nexport const fetchData = (url, method = 'GET', data = {}, token = '') => {\r\n  const postConfig = {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  if (token) {\r\n    postConfig.headers['Authorization'] = token;\r\n  }\r\n  const init = method !== 'GET' ? postConfig : {};\r\n\r\n  return fetch(url, init)\r\n    .then(checkResponseStatus)\r\n    .then(response => response.json());\r\n};\r\n\r\nconst makeIdCreator = (prefix) => (allIds) => {\r\n  const intRegex = new RegExp(/[0-9]\\d*$/, 'g');\r\n  const [lastId] = [...allIds].sort((a, b) => Number(b.match(intRegex)) - Number(a.match(intRegex)));\r\n\r\n  if (lastId) {\r\n    const intId = Number(lastId.match(intRegex));\r\n\r\n    return lastId.replace(intRegex, intId + 1);\r\n  } else {\r\n    return `${prefix}1`;\r\n  }\r\n};\r\n\r\nconst createWidgetId = makeIdCreator('widget');\r\n\r\nconst mapFormValuesToWidgetData = values => {\r\n  const {\r\n    columns,\r\n    goNewLine,\r\n    rows,\r\n    ...other\r\n  } = values;\r\n\r\n  return {\r\n    ...other,\r\n    config: {\r\n      columns,\r\n      goNewLine,\r\n      rows\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNewWidgetData = ({ values, allWidgets, currentBoardId }) => ({\r\n  boardId: currentBoardId,\r\n  id: createWidgetId(allWidgets),\r\n  status: 'UNKNOWN',\r\n  ...mapFormValuesToWidgetData(values)\r\n});\r\n\r\nexport const createEditWidgetData = ({ id, values }) => ({ id, ...mapFormValuesToWidgetData(values) });\r\n\r\nexport const mapDataToState = (data) => {\r\n  const {\r\n    id,\r\n    title,\r\n    content,\r\n    type,\r\n    disabled,\r\n    config,\r\n    ...other\r\n  } = data;\r\n\r\n  const newWidgetProps = ['status', 'boardId'];\r\n  const generalData = { id, title, config, type, disabled, content };\r\n\r\n  newWidgetProps.forEach(prop => {\r\n    if (data[prop]) {\r\n      generalData[prop] = data[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    generalData,\r\n    serverData: { id, type, ...other }\r\n  };\r\n};\r\n\r\nexport const withAuthentication = (actionCallback) => (...args) =>\r\n  dispatch => {\r\n    if (!isAuthenticated()) {\r\n      dispatch(logout());\r\n\r\n      return;\r\n    }\r\n\r\n    dispatch(actionCallback.apply(null, args));\r\n  };\r\n\r\nexport const withDataChanged = (actionCallback) => (...args) =>\r\n  dispatch => {\r\n    dispatch(actionCallback.apply(null, args));\r\n    dispatch(dataChanged());\r\n  };","export const URL = {\r\n  LOAD_DATA: '/api/config',\r\n  SAVE_DATA: '/api/config/save',\r\n  UPDATE_WIDGET: '/api/widget/update',\r\n  DELETE_WIDGET: '/api/widget/delete',\r\n  LOGIN: '/api/login'\r\n};\r\nexport const COLUMNS_MIN = 1;\r\nexport const COLUMNS_MAX = 20;\r\n\r\nexport const ROWS_MIN = 1;\r\nexport const ItemTypes = {\r\n  WIDGET: 'widget',\r\n  BOARD: 'board'\r\n};\r\n\r\nexport const AEM_HEALTH_CHECKS = {\r\n  inactiveBundles: 'Active Bundles',\r\n  asyncIndexHealthCheck: 'Async Index Health Check',\r\n  codeCacheHealthCheck: 'Code Cache Health Check',\r\n  DiskSpaceHealthCheck: 'Disk Space',\r\n  logErrorHealthCheck: 'Log Errors',\r\n  ObservationQueueLengthHealthCheck: 'Observation Queue Length',\r\n  resourceSearchPathErrorHealthCheck: 'Resource Search Path Errors',\r\n  requestsStatus: 'Request Performance',\r\n  queriesStatus: 'Query Performance',\r\n  queryTraversalLimitsBundle: 'Query Traversal Limits',\r\n  securitychecks: 'Security Checks',\r\n  slingJobs: 'Sling Jobs',\r\n  slingDiscoveryOakSynchronizedClocks: 'Synchronized Clocks',\r\n  systemchecks: 'System Maintenance',\r\n};\r\n\r\nexport const ALL_SONARQUBE_METRICS = [\r\n  \"blocker_violations\",\r\n  \"critical_violations\",\r\n  \"major_violations\",\r\n  \"minor_violations\",\r\n  \"info_violations\",\r\n  \"bugs\",\r\n  \"code_smells\",\r\n  \"vulnerabilities\"\r\n];\r\n\r\n// props will be added to old configs on app init\r\n\r\nexport const INITIAL_BOARD_PROPS = {\r\n  autoSwitch: false,\r\n  switchInterval: 0\r\n};\r\n","import { v4 } from 'uuid';\r\nimport {\r\n  REQUEST_DATA,\r\n  RECEIVE_DATA,\r\n  REQUEST_UPDATE,\r\n  ADD_BOARD,\r\n  EDIT_BOARD,\r\n  DELETE_BOARD,\r\n  SET_CURRENT_BOARD,\r\n  UPDATE_WIDGET,\r\n  EDIT_WIDGET,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET,\r\n  DELETE_MULTIPLE_WIDGETS,\r\n  SORT_WIDGETS,\r\n  REORDER_BOARDS,\r\n  DATA_CHANGED,\r\n  SAVE_DATA_START,\r\n  SAVE_DATA_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  CLEAR_LOGIN_ERROR_MESSAGE,\r\n  LOGOUT,\r\n  INIT_BOARD_PROPS\r\n} from './types';\r\nimport { INITIAL_BOARD_PROPS } from '../constants';\r\n\r\nexport const requestData = () => ({\r\n  type: REQUEST_DATA\r\n});\r\n\r\nexport const loginSuccess = () => ({\r\n  type: LOGIN_SUCCESS,\r\n});\r\n\r\nexport const loginFailure = (data) => ({\r\n  type: LOGIN_FAILURE,\r\n  payload: data\r\n});\r\n\r\nexport const clearLoginErrorMessage = () => ({\r\n  type: CLEAR_LOGIN_ERROR_MESSAGE,\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT\r\n});\r\n\r\nexport const receiveData = state => ({\r\n  type: RECEIVE_DATA,\r\n  payload: state\r\n});\r\n\r\nexport const requestUpdate = (id) => ({\r\n  type: REQUEST_UPDATE,\r\n  payload: id\r\n});\r\n\r\nexport const updateWidget = (data) => ({\r\n  type: UPDATE_WIDGET,\r\n  payload: data\r\n});\r\n\r\nexport const addBoard = (data) => ({\r\n  type: ADD_BOARD,\r\n  payload: {\r\n    id: `board-${v4()}`,\r\n    theme: 'default',\r\n    widgets: [],\r\n    ...data\r\n  }\r\n});\r\n\r\nexport const deleteBoard = (id) => ({\r\n  type: DELETE_BOARD,\r\n  payload: id\r\n});\r\n\r\nexport const editBoard = (editData) => ({\r\n  type: EDIT_BOARD,\r\n  payload: editData\r\n});\r\n\r\nexport const reorderBoards = (sourceId, targetIndex) => ({\r\n  type: REORDER_BOARDS,\r\n  payload: { sourceId, targetIndex }\r\n});\r\n\r\nexport const editWidget = (editData) => ({\r\n  type: EDIT_WIDGET,\r\n  payload: editData\r\n});\r\n\r\nexport const addWidget = (widgetData) => ({\r\n  type: ADD_WIDGET,\r\n  payload: widgetData\r\n});\r\n\r\nexport const deleteWidget = (id, boardId) => ({\r\n  type: DELETE_WIDGET,\r\n  payload: { id, boardId }\r\n});\r\n\r\nexport const deleteMultipleWidgets = (widgetIds, boardId = '') => ({\r\n  type: DELETE_MULTIPLE_WIDGETS,\r\n  payload: { widgetIds, boardId }\r\n});\r\n\r\nexport const sortWidgets = (payload) => ({\r\n  type: SORT_WIDGETS,\r\n  payload\r\n});\r\n\r\nexport const dataChanged = () => ({\r\n  type: DATA_CHANGED,\r\n});\r\n\r\nexport const saveDataStart = () => ({\r\n  type: SAVE_DATA_START,\r\n});\r\n\r\nexport const saveDataSuccess = () => ({\r\n  type: SAVE_DATA_SUCCESS,\r\n});\r\n\r\nexport const setCurrentBoard = (id) => ({\r\n  type: SET_CURRENT_BOARD,\r\n  payload: id\r\n});\r\n\r\nexport const initBoardProps = () => ({\r\n  type: INIT_BOARD_PROPS,\r\n  payload: { ...INITIAL_BOARD_PROPS }\r\n});","import decode from 'jwt-decode';\r\n\r\nconst tokenName = 'token';\r\n\r\nconst isTokenExpired = token => {\r\n  const expTimestamp = decode(token).exp * 1000;\r\n\r\n  return Date.now() > expTimestamp;\r\n};\r\n\r\nexport const getToken = () => localStorage.getItem(tokenName);\r\n\r\nexport const setToken = token => localStorage.setItem(tokenName, token);\r\n\r\nexport const removeToken = () => localStorage.removeItem(tokenName);\r\n\r\nexport const isAuthenticated = () => !!getToken() && !isTokenExpired(getToken());","import { navigate } from '@reach/router';\r\n\r\nimport {\r\n  requestData,\r\n  receiveData,\r\n  requestUpdate,\r\n  addBoard,\r\n  editBoard,\r\n  deleteBoard,\r\n  reorderBoards,\r\n  setCurrentBoard,\r\n  updateWidget,\r\n  addWidget,\r\n  editWidget,\r\n  deleteMultipleWidgets,\r\n  sortWidgets,\r\n  dataChanged,\r\n  saveDataStart,\r\n  deleteWidget,\r\n  loginSuccess,\r\n  loginFailure,\r\n  logout as logoutUser,\r\n  initBoardProps\r\n} from './actionCreators';\r\nimport {\r\n  fetchData,\r\n  createNewWidgetData,\r\n  createEditWidgetData,\r\n  mapDataToState,\r\n  withAuthentication,\r\n  withDataChanged\r\n} from './helpers';\r\nimport { URL } from '../constants';\r\nimport { setToken, removeToken, getToken } from '../utils/auth';\r\n\r\nexport const fetchInitialData = () =>\r\n  (dispatch) => {\r\n    dispatch(requestData());\r\n\r\n    return fetchData(URL.LOAD_DATA)\r\n      .then(\r\n        data => {\r\n          dispatch(receiveData(data));\r\n          dispatch(initBoardProps());\r\n        },\r\n        console.error\r\n      );\r\n  };\r\n\r\nexport const saveDataThunk = () =>\r\n  (dispatch, getState) => {\r\n    const { boards, widgets } = getState();\r\n    const data = { boards, widgets };\r\n    const token = getToken();\r\n\r\n    return fetchData(URL.SAVE_DATA, 'POST', data, token)\r\n      .then(\r\n        () => dispatch(saveDataStart()),\r\n        console.error\r\n      );\r\n  };\r\n\r\nexport const login = (credentials) =>\r\n  (dispatch) => {\r\n    return fetchData(URL.LOGIN, 'POST', credentials)\r\n      .then(\r\n        ({ token }) => {\r\n          setToken(token);\r\n          dispatch(loginSuccess());\r\n        },\r\n        ({ message }) => dispatch(loginFailure(message)))\r\n  };\r\n\r\nexport const logout = () =>\r\n  (dispatch) => {\r\n    removeToken();\r\n    dispatch(logoutUser());\r\n  };\r\n\r\nconst deleteBoardWithWidgetsThunk = (id) =>\r\n  (dispatch, getState) => {\r\n    const { ui, boards } = getState();\r\n    const { widgets } = boards.boardsById[id];\r\n    const { currentBoard } = ui;\r\n\r\n    dispatch(deleteBoard(id));\r\n\r\n    const [firstBoardId] = getState().boards.allBoards;\r\n\r\n    if (id === currentBoard) {\r\n      dispatch(setCurrentBoard(firstBoardId || null));\r\n      navigate(firstBoardId || '/');\r\n    }\r\n\r\n    dispatch(deleteMultipleWidgets(widgets));\r\n  };\r\n\r\nconst makeWidgetUpdaterThunk = (beforeUpdateActionCreator, widgetDataCreator) => data =>\r\n  (dispatch, getState) => {\r\n    const allWidgets = getState().widgets.allWidgets;\r\n    const token = getToken();\r\n    const widgetData = widgetDataCreator({...data, allWidgets});\r\n    const { id } = widgetData;\r\n    const { generalData, serverData } = mapDataToState(widgetData);\r\n\r\n    dispatch(beforeUpdateActionCreator(generalData));\r\n    dispatch(dataChanged());\r\n    dispatch(requestUpdate(id));\r\n\r\n    return fetchData(URL.UPDATE_WIDGET, 'POST', serverData, token)\r\n      .then(\r\n        () => dispatch(updateWidget(serverData)),\r\n        console.error\r\n      );\r\n  };\r\n\r\nconst removeWidgetThunk = (id) =>\r\n  (dispatch, getState) => {\r\n    const { currentBoard: boardId } = getState().ui;\r\n    const token = getToken();\r\n\r\n    return fetchData(URL.DELETE_WIDGET, 'POST', { id }, token)\r\n      .then(\r\n        () => dispatch(deleteWidget(id, boardId)),\r\n        console.error\r\n      );\r\n  };\r\n\r\nconst reorderWidgetsThunk = (sourceId, targetIndex) =>\r\n  (dispatch, getState) => {\r\n    const { currentBoard: boardId } = getState().ui;\r\n\r\n    dispatch(sortWidgets({ sourceId, targetIndex, boardId }));\r\n  };\r\n\r\nexport const addNewWidget = withAuthentication(makeWidgetUpdaterThunk(addWidget, createNewWidgetData));\r\nexport const saveWidget = withAuthentication(makeWidgetUpdaterThunk(editWidget, createEditWidgetData));\r\nexport const removeWidget = withAuthentication(withDataChanged(removeWidgetThunk));\r\nexport const reorderWidgets = withDataChanged(reorderWidgetsThunk);\r\nexport const reorderBoard = withDataChanged(reorderBoards);\r\nexport const addNewBoard = withDataChanged(addBoard);\r\nexport const saveBoard = withDataChanged(editBoard);\r\nexport const deleteBoardWithWidgets = withDataChanged(deleteBoardWithWidgetsThunk);\r\nexport const setWidgetState = withDataChanged(editWidget);\r\nexport const saveData = withAuthentication(saveDataThunk);","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { amber, blue, green, red } from \"@material-ui/core/colors/index\";\r\n\r\nconst gradientAngle = 45;\r\n\r\nconst createGradient = (start, end) => `linear-gradient(${gradientAngle}deg, ${start}, ${end})`;\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    background: {\r\n      default: '#211F39',\r\n      paper: '#26243E',\r\n      board: {\r\n        card: '#5c6bc0', \r\n        dragged: '#353b61'\r\n      }\r\n    },\r\n    status: {\r\n      UNKNOWN: '#26243E',\r\n      OK: createGradient('#519657', '#81c784'),\r\n      IN_PROGRESS: createGradient('#009faf', '#4dd0e1'),\r\n      UNSTABLE: createGradient('#c75b39', '#ff8a65'),\r\n      ERROR_CONNECTION: createGradient('#af4448', '#e57373'),\r\n      ERROR_CONFIGURATION: createGradient('#af4448', '#e57373'),\r\n      ERROR: createGradient('#af4448', '#e57373'),\r\n      FAIL: createGradient('#af4448', '#e57373')\r\n    },\r\n    variant : {\r\n      info: blue[100],\r\n      success: green[300],\r\n      warning: amber[700],\r\n      error: red[800]\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 10\r\n  },\r\n  typography: {\r\n    h3: {\r\n      fontWeight: 500,\r\n      letterSpacing: 2\r\n    }\r\n  }\r\n});","export const setSize = factor => ({ theme }) => `${theme.spacing(factor)}px`;\r\n\r\nexport const splitPropsGroupName = (propName) => {\r\n  return propName.includes('.') ? propName.split('.') : [undefined, propName];\r\n};\r\n\r\nexport const sortByKey = (obj, key, asc = true) => Object.entries(obj)\r\n  .sort(([, { [key]: keyA }], [, { [key]: keyB }]) => (\r\n    asc ? keyA.localeCompare(keyB) : keyB.localeCompare(keyA)))\r\n  .reduce((newObj, [key, value]) => {\r\n    newObj[key] = value;\r\n\r\n    return newObj;\r\n  }, {});\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nimport { splitPropsGroupName } from '../components/helpers';\r\n\r\nexport const useToggle = () => {\r\n  const [isOpened, setOpened] = useState(false);\r\n\r\n  const handleOpen = () => setOpened(true);\r\n  const handleClose = () => setOpened(false);\r\n\r\n  return [isOpened, handleOpen, handleClose];\r\n};\r\n\r\nexport const useFormData = (data) => {\r\n  const [values, setValues] = useState(data);\r\n\r\n  const setFieldValue = (fieldName, fieldValue) => {\r\n    const [groupName, propName] = splitPropsGroupName(fieldName);\r\n\r\n    if (groupName) {\r\n      const groupValues = values[groupName];\r\n\r\n      setValues({\r\n        ...values,\r\n        [groupName]: { ...groupValues, [propName]: fieldValue }\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    setValues({ ...values, [propName]: fieldValue});\r\n  };\r\n\r\n  const handleChange = fieldName => event => {\r\n    const { target: { type, value, checked } } = event;\r\n    const valueType = {\r\n      checkbox: checked,\r\n      number: Number(value),\r\n    };\r\n    const fieldValue = valueType[type] !== undefined ? valueType[type] : value;\r\n\r\n    setFieldValue(fieldName, fieldValue);\r\n  };\r\n\r\n  return { values, handleChange };\r\n};\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getApp = ({ app }) => app;\r\n\r\nconst getUi = ({ ui }) => ui;\r\n\r\nconst getBoardsById = ({ boards }) => boards.boardsById;\r\n\r\nconst getAllBoards = ({ boards }) => boards.allBoards;\r\n\r\nconst getBoardId = (_, boardId) => boardId;\r\n\r\nexport const getIsAuthenticated = createSelector(\r\n  [getApp],\r\n  ({ isAuthenticated }) => isAuthenticated\r\n)\r\n\r\nexport const getCurrentBoardId = createSelector(\r\n  [getUi],\r\n  ({ currentBoard }) => currentBoard\r\n);\r\n\r\nconst getBoard = createSelector(\r\n  [getBoardsById, getBoardId],\r\n  (boardsById, boardId) => boardsById[boardId]\r\n);\r\n\r\nexport const getBoardTitle = createSelector(\r\n  [getBoard],\r\n  (board) => board && board.title\r\n);\r\n\r\nexport const getSwitchInterval = createSelector(\r\n  [getBoard],\r\n  (board) => board && board.switchInterval\r\n);\r\n\r\nexport const getSwitcherBoards = createSelector(\r\n  [getAllBoards, getBoardsById],\r\n  (allBoards, boardsById) => allBoards.filter(boardId => boardsById[boardId].autoSwitch)\r\n);","import React from 'react';\r\nimport { bool, element, func, string } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\r\n\r\nconst StyledDialog = styled(props => <Dialog classes={{ paper: 'paper' }} {...props} />)`\r\n  .paper {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst StyledDialogContent = styled(DialogContent)`\r\n  padding-bottom: 16px;\r\n`;\r\n\r\nconst AppDialog = props => {\r\n  const { children, handleDialogClose, open, title, disableBackdropClick } = props;\r\n\r\n  const stopEventPropagation = (event) => event.stopPropagation();\r\n\r\n  return (\r\n    <StyledDialog\r\n      disableBackdropClick={disableBackdropClick}\r\n      onClick={stopEventPropagation}\r\n      onClose={handleDialogClose}\r\n      onKeyDown={stopEventPropagation}\r\n      aria-labelledby=\"app-dialog-title\"\r\n      open={open}\r\n      PaperProps={{'data-cy': props['data-cy']}}\r\n    >\r\n      <DialogTitle id=\"app-dialog-title\" data-cy=\"app-dialog-title\">{title}</DialogTitle>\r\n      <StyledDialogContent data-cy=\"app-dialog-content\">\r\n        {children}\r\n      </StyledDialogContent>\r\n    </StyledDialog>\r\n  );\r\n};\r\n\r\nAppDialog.propTypes = {\r\n  handleDialogClose: func.isRequired,\r\n  children: element.isRequired,\r\n  open: bool.isRequired,\r\n  title: string\r\n}\r\n\r\nAppDialog.defaultProps = {\r\n  title: ''\r\n};\r\n\r\nexport default AppDialog;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst CancelButton = ({ handleCancelClick, className, ...other }) => (\r\n  <Button\r\n    onClick={handleCancelClick}\r\n    className={className}\r\n    variant=\"contained\"\r\n    color=\"secondary\"\r\n    { ...other }\r\n  >\r\n    Cancel\r\n  </Button>\r\n);\r\n\r\nexport default CancelButton;","const DefaultWidget = () => {\r\n  return null;\r\n};\r\n\r\nexport default DefaultWidget;","import React from 'react';\r\nimport Iframe from 'react-iframe'\r\nimport {string} from \"prop-types\";\r\n\r\nconst IframeEmbed = (props) => {\r\n    const {url} = props;\r\n\r\n    return (\r\n        <Iframe\r\n            {...props}\r\n            url={url}\r\n        />\r\n    );\r\n};\r\n\r\nIframeEmbed.propTypes = {\r\n    url: string.isRequired\r\n};\r\n\r\nexport default IframeEmbed;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { Button, FormControl, Typography, IconButton } from '@material-ui/core';\r\n\r\nimport IframeEmbed from \"../IframeEmbed\";\r\nimport { setSize } from \"../helpers\";\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst FullWidthButtonOutlined = (props) => <Button {...props} fullWidth variant=\"outlined\" target=\"_blank\" />;\r\n\r\nexport const WidgetButton = styled(FullWidthButtonOutlined)`\r\n  margin-top: auto;\r\n`;\r\n\r\nexport const WidgetIconButton = styled(IconButton)`\r\n  border-radius: 0;\r\n  height: 100%;\r\n  left: 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 100%;\r\n`;\r\n\r\nexport const Caption = (props) => <StyledTypography {...props} variant=\"caption\" paragraph />;\r\n\r\nexport const StyledFieldset = styled(FormControl)`\r\n  display: flex;\r\n  margin-bottom: 32px;\r\n  min-width: 300px;\r\n`;\r\n\r\nexport const StyledIframe = (props) => <IframeEmbed {...props} frameBorder={0} allowFullScreen height=\"100%\"/>;\r\n\r\nexport const StyledFormControlForDropdown = styled(FormControl)`\r\n      display: flex;\r\n      margin-bottom: 12px;\r\n      min-width: 300px;\r\n    `;\r\n\r\nexport const StyledTitle = styled(Typography)`\r\n  align-self: center;\r\n  flex-grow: 1;\r\n  font-size: 2rem;\r\n  margin-left: 1rem;\r\n  margin-top: 1rem;\r\n  overflow: hidden;\r\n  padding-right: 2rem;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n\r\n  &::after {\r\n    background-color: #ff8a65;\r\n    content: '';\r\n    display: block;\r\n    height: 2px;\r\n    margin-top: ${setSize(2)};\r\n    margin-left: 3px;\r\n    width: ${setSize(10)};\r\n  }\r\n`;\r\n\r\nexport const StyledFormControl = styled(FormControl)`\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      maxWidth: 300,\r\n  `;","import React from 'react';\r\n\r\nimport { Caption } from \"../../styled\";\r\n\r\nconst ExampleWidget = ({ serverTime }) => {\r\n  const ts = serverTime ? new Date(serverTime).toLocaleString() : '';\r\n\r\n  return (\r\n    <Caption>\r\n      {ts}\r\n    </Caption>\r\n  );\r\n};\r\n\r\nexport default ExampleWidget;","import React from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Caption, WidgetButton } from \"../../styled\";\r\n\r\nconst JenkinsJobWidget = props => {\r\n  const { duration, displayName, url, timestamp, branch } = props;\r\n  const ts = timestamp ? new Date(timestamp).toLocaleString() : '';\r\n  const dur = duration ? `${duration / 1000} [s]` : '';\r\n\r\n  return (\r\n    <>\r\n      <Caption>\r\n        {ts}\r\n      </Caption>\r\n      <Caption>\r\n        Duration: {dur}\r\n      </Caption>\r\n      <Caption>\r\n          {branch}\r\n      </Caption>\r\n      <WidgetButton href={url}>\r\n        {displayName}\r\n      </WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nJenkinsJobWidget.propTypes = {\r\n  duration: number.isRequired,\r\n  displayName: string.isRequired,\r\n  url: string.isRequired,\r\n  timestamp: number.isRequired,\r\n  branch: string\r\n};\r\n\r\nJenkinsJobWidget.defaultProps = {\r\n  branch: 'unknown'\r\n};\r\n\r\nexport default JenkinsJobWidget;","import React from 'react';\r\nimport { number, string, object } from \"prop-types\";\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport { Caption, WidgetButton } from \"../../styled\";\r\n\r\nconst SonarQubeWidget = props => {\r\n  const { metrics, id, url, version, date, errorMessage } = props;\r\n  const ts = date ? new Date(Date.parse(date)).toLocaleString() : '';\r\n\r\n  if (errorMessage) {\r\n    return (\r\n      <Typography variant=\"h5\">\r\n        {errorMessage}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Caption>\r\n        {ts}\r\n      </Caption>\r\n      <Caption>\r\n        Version: {version}\r\n      </Caption>\r\n        {Object.entries(metrics).map(([metric, val]) =>\r\n          <Caption key={metric}>{metric.replace('_', ' ')}: {val}</Caption>\r\n        )}\r\n      <WidgetButton href={url}>\r\n        #{id}\r\n      </WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nSonarQubeWidget.propTypes = {\r\n  metrics: object,\r\n  id: number.isRequired,\r\n  url: string.isRequired,\r\n  version: string,\r\n  date: string,\r\n  errorMessage: string\r\n};\r\n\r\nSonarQubeWidget.defaultProps = {\r\n  metrics: {},\r\n  version: '-',\r\n  date: '',\r\n  errorMessage: ''\r\n};\r\n\r\nexport default SonarQubeWidget;","import styled from '@emotion/styled/macro';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport const StyledCircularProgress = styled(CircularProgress)`\r\n  margin-left: 8px;\r\n`;","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { StyledCircularProgress } from './styled';\n\nconst Loader = ({ text, ...other }) => (\n  <>\n    <Typography variant=\"caption\">{text}</Typography>\n    <StyledCircularProgress {...other} />\n  </>\n);\n\nexport default Loader;\n","import React from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { Caption, WidgetButton } from \"../../styled\";\r\nimport Loader from '../../Loader';\r\n\r\nconst ServiceCheckWidget = props => {\r\n  const { statusCode, statusMessage, expectedStatusCode, url, errorMessage } = props;\r\n  const error = expectedStatusCode !== statusCode;\r\n  const statusCodeMessage = error ? `${expectedStatusCode} expected, got ${statusCode}` : statusCode;\r\n\r\n  if (errorMessage) {\r\n    return (\r\n      <Typography variant=\"h5\">\r\n        {errorMessage}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {error &&\r\n        <Caption>\r\n          {statusMessage}\r\n        </Caption>\r\n      }\r\n      <WidgetButton href={url}>\r\n        {!statusCode ? <Loader text='Pending update' size={20} /> : statusCodeMessage}\r\n      </WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nServiceCheckWidget.propTypes = {\r\n  statusCode: number,\r\n  statusMessage: string,\r\n  timestamp: number,\r\n  expectedStatusCode: number,\r\n  errorMessage: string\r\n};\r\n\r\nServiceCheckWidget.defaultProps = {\r\n  statusCode: 0,\r\n  statusMessage: '',\r\n  errorMessage: '',\r\n  expectedStatusCode: 200,\r\n  timestamp: 0,\r\n};\r\n\r\nexport default ServiceCheckWidget;","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const VerticalText = styled(Typography)`\r\n  margin-top: auto;\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nexport const StyledPre = styled.pre`\r\n  font-family: inherit;\r\n`;","import React from 'react';\r\nimport { bool, string } from 'prop-types';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport { StyledPre, VerticalText } from './styled';\r\n\r\nconst TextWidget = ({ text, textSize, isVertical }) => {\r\n  const TextVariant = isVertical ? VerticalText : Typography;\r\n\r\n  return (\r\n      <TextVariant variant={textSize}>\r\n          <StyledPre>{text}</StyledPre>\r\n      </TextVariant>\r\n  );\r\n};\r\n\r\nTextWidget.propTypes = {\r\n  text: string.isRequired,\r\n  textSize: string.isRequired,\r\n  isVertical: bool.isRequired\r\n};\r\n\r\nexport default TextWidget;","import React from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Caption, WidgetButton } from \"../../styled\";\r\n\r\nconst BambooPlanWidget = props => {\r\n  const { url, number, lifeCycleState } = props;\r\n\r\n  return (\r\n    <>\r\n      <Caption>\r\n        State: {lifeCycleState}\r\n      </Caption>\r\n      <WidgetButton href={url}>\r\n        #{number}\r\n      </WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nBambooPlanWidget.propTypes = {\r\n  url: string.isRequired,\r\n  number: number.isRequired,\r\n  lifeCycleState: string.isRequired\r\n};\r\n\r\nexport default BambooPlanWidget;","import moment from 'moment-timezone'\r\n\r\nexport const getDateTime = (timezone, format) => {\r\n  return moment.tz(new Date(), timezone).format(format);\r\n};\r\n\r\nconst getGmtTimezones = () => {\r\n  const allTimezones = moment.tz.names();\r\n  const duplicatedTimezones = ['Etc/GMT', 'Etc/GMT+0', 'Etc/GMT0'];\r\n\r\n  const gmtSort = (a, b) => {\r\n    const parts = {\r\n      a: a.split('T'),\r\n      b: b.split('T')\r\n    };\r\n    return parseInt(parts.b[1]) - parseInt(parts.a[1]);\r\n  };\r\n\r\n  const gmtTimezones = allTimezones\r\n    .filter(timezone => timezone.includes(\"Etc/GMT\") && !duplicatedTimezones.includes(timezone))\r\n    .sort(gmtSort)\r\n    .map(timezone => {\r\n      const displayName = timezone\r\n        .replace('Etc/', '')\r\n        .replace(/[+-]/g, c => c === '+' ? '-' : '+'); //swap '+' sign with '-' sign to preserve correct time\r\n      return {\r\n        display: displayName,\r\n        value: timezone\r\n      };\r\n    });\r\n\r\n  gmtTimezones.splice(0, 0, {\r\n    display: \"Current time zone\",\r\n    value: moment.tz.guess()\r\n  });\r\n\r\n  return gmtTimezones;\r\n};\r\n\r\nexport const GMT_TIMEZONES = getGmtTimezones();\r\n\r\nexport const DATE_FORMATS = [\r\n  {\r\n    display: '29/08/2019',\r\n    value: 'DD/MM/YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29/08/2019',\r\n    value: 'dddd, DD/MM/YYYY'\r\n  },\r\n  {\r\n    display: '29 Aug 2019',\r\n    value: 'DD MMM YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29 Aug 2019',\r\n    value: 'dddd, DD MMM YYYY'\r\n  },\r\n  {\r\n    display: '29th August 2019',\r\n    value: 'Do MMMM YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29th August 2019',\r\n    value: 'dddd, Do MMMM YYYY'\r\n  }\r\n];\r\n\r\nexport const TIME_FORMATS = [\r\n  {\r\n    display: '12-hour (AM/PM)',\r\n    value: 'h:mm:ss a'\r\n  },\r\n  {\r\n    display: '24-hour',\r\n    value: 'HH:mm:ss'\r\n  }\r\n];","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const TimePre = styled.pre`\r\n  font-weight: bold;\r\n  font-family: inherit;\r\n  font-size: 180%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const DatePre = styled.pre`\r\n  font-family: inherit;\r\n  margin: 0.25em 0 auto;\r\n`;","import React, {useState} from 'react';\r\nimport {string} from \"prop-types\";\r\n\r\nimport {useInterval} from '../../../../hooks'\r\nimport {getDateTime} from \"./helpers\";\r\n\r\nimport {Typography} from \"@material-ui/core\";\r\nimport { DatePre, TimePre } from \"./styled\";\r\n\r\nconst WorldClockWidget = props => {\r\n  const { timeZoneId, dateFormat, timeFormat, displayDate, displayTime, textSize } = props;\r\n\r\n  const date = getDateTime(timeZoneId, dateFormat);\r\n\r\n  const initTime = getDateTime(timeZoneId, timeFormat);\r\n  const [time, setTime] = useState(initTime);\r\n\r\n  useInterval(() => {\r\n    setTime(getDateTime(timeZoneId, timeFormat));\r\n  }, 1000);\r\n\r\n  return (\r\n    <Typography variant={textSize}>\r\n      {displayTime && <TimePre>{time}</TimePre>}\r\n      {displayDate && <DatePre>{date}</DatePre>}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nWorldClockWidget.propTypes = {\r\n  timeZoneId: string.isRequired,\r\n  dateFormat: string.isRequired,\r\n  timeFormat: string.isRequired,\r\n  textSize: string\r\n};\r\n\r\nWorldClockWidget.defaultProps = {\r\n  textSize: 'h5'\r\n};\r\n\r\nexport default WorldClockWidget;\r\n","const getNextStatus = (status) => {\r\n  const statusArray = ['OK', 'FAIL', 'UNKNOWN'];\r\n  const statusIndex = statusArray.findIndex(element => element === status);\r\n\r\n  let nextStatusIndex = 0;\r\n\r\n  if (statusIndex !== -1) {\r\n    nextStatusIndex = statusIndex < statusArray.length - 1 ? statusIndex + 1 : 0;\r\n  } else {\r\n    nextStatusIndex = statusArray.findIndex(element => element === 'UNKNOWN');\r\n  }\r\n\r\n  return statusArray[nextStatusIndex];\r\n};\r\n\r\nexport default getNextStatus;","import React from \"react\";\r\nimport { Check, Close, IndeterminateCheckBoxOutlined } from \"@material-ui/icons\";\r\n\r\nconst StatusIcon = ({ status, size }) => {\r\n  const iconComponents = {\r\n    OK: Check,\r\n    FAIL: Close,\r\n    UNKNOWN: IndeterminateCheckBoxOutlined\r\n  };\r\n\r\n  const IconComponent = status in iconComponents ? iconComponents[status] : iconComponents['UNKNOWN'];\r\n\r\n  return <IconComponent fontSize={size} />;\r\n};\r\n\r\nexport default StatusIcon;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setWidgetState } from '../../../../actions/thunks';\r\nimport getNextStatus from './helpers';\r\n\r\nimport { WidgetIconButton } from \"../../../styled\";\r\nimport StatusIcon from '../../../StatusIcon';\r\n\r\nconst CheckboxWidget = props => {\r\n  const { id } = props;\r\n  const { status } = useSelector(({ widgets }) => widgets.widgetsById[id]);\r\n  const dispatch = useDispatch();\r\n\r\n  const ariaCheckedStatusMap = {\r\n    OK: true,\r\n    FAIL: false,\r\n    UNKNOWN: 'mixed'\r\n  };\r\n\r\n  const handleChangeStatus = () => {\r\n    dispatch(setWidgetState({\r\n      id,\r\n      status: getNextStatus(status)\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <WidgetIconButton \r\n      aria-label=\"Toggle status\"\r\n      aria-checked={ariaCheckedStatusMap[status]}\r\n      data-cy=\"checkbox\"\r\n      onClick={handleChangeStatus}\r\n    >\r\n      <StatusIcon size=\"large\" status={status} />\r\n    </WidgetIconButton>\r\n  );\r\n};\r\n\r\nexport default CheckboxWidget;","import React from 'react';\r\nimport { string, object } from \"prop-types\";\r\n\r\nimport { Link, Typography } from '@material-ui/core';\r\nimport { Caption } from \"../../../styled\";\r\n\r\nimport { AEM_HEALTH_CHECKS } from '../../../../constants';\r\n\r\nconst AemHealthcheckWidget = props => {\r\n  const { healthChecks, errorMessage } = props;\r\n\r\n  if (errorMessage) {\r\n    return (\r\n      <Typography variant=\"h5\">\r\n        {errorMessage}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {Object.entries(healthChecks).map(([name, data]) =>\r\n        <Link href={data['url']} target=\"_blank\">\r\n         <Caption key={name}>{AEM_HEALTH_CHECKS[name]}: {data['status']}</Caption>\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nAemHealthcheckWidget.propTypes = {\r\n  healthChecks: object,\r\n  errorMessage: string\r\n};\r\n\r\nAemHealthcheckWidget.defaultProps = {\r\n  healthChecks: {},\r\n  errorMessage: ''\r\n};\r\n\r\nexport default AemHealthcheckWidget;","const HTTP = \"http://\";\r\nconst WWW = \"www\";\r\n\r\nexport const attachHttp = url => {\r\n  if (url.startsWith(WWW)) {\r\n    return HTTP + url;\r\n  }\r\n  return url;\r\n};\r\n","import DefaultWidget from './types/DefaultWidget';\r\nimport ExampleWidget from './types/ExampleWidget';\r\nimport JenkinsJobWidget from \"./types/JenkinsJobWidget\";\r\nimport SonarQubeWidget from \"./types/SonarQubeWidget\";\r\nimport ServiceCheckWidget from \"./types/ServiceCheckWidget\";\r\nimport TextWidget from \"./types/TextWidget\";\r\nimport BambooPlanWidget from \"./types/BambooPlanWidget\";\r\nimport WorldClockWidget from \"./types/WorldClockWidget\";\r\nimport CheckboxWidget from './types/CheckboxWidget';\r\nimport AemHealthcheckWidget from \"./types/AemHealthcheckWidget\";\r\nimport IframeEmbedWidget from \"./types/IframeEmbedWidget\";\r\n\r\nconst widgetTypes = {\r\n  DefaultWidget: {\r\n    name: 'Default',\r\n    component: DefaultWidget\r\n  },\r\n  ExampleWidget: {\r\n    name: 'Example widget',\r\n    component: ExampleWidget,\r\n    dialogFields: ['SchedulePeriod'],\r\n    showUpdateTime : true\r\n  },\r\n  JenkinsJobWidget: {\r\n    name: 'Jenkins Job widget',\r\n    component: JenkinsJobWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'Path'],\r\n    showUpdateTime : true\r\n  },\r\n  SonarQubeWidget: {\r\n    name: 'SonarQube widget',\r\n    component: SonarQubeWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'Key', 'IdNumber', 'SonarQubeMetricsInput'],\r\n    showUpdateTime : true\r\n  },\r\n  ServiceCheckWidget: {\r\n    name: 'Service Check widget',\r\n    component: ServiceCheckWidget,\r\n    dialogFields: ['SchedulePeriod', 'URL', 'StatusCode'],\r\n    showUpdateTime : true\r\n  },\r\n  TextWidget: {\r\n    name: 'Text Widget',\r\n    component: TextWidget,\r\n    dialogFields: ['Text', 'TextSize', 'TextOrientation']\r\n  },\r\n  BambooPlanWidget: {\r\n    name: 'Bamboo Plan widget',\r\n    component: BambooPlanWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'IdString'],\r\n    showUpdateTime : true\r\n  },\r\n  WorldClockWidget: {\r\n    name: 'World Clock widget',\r\n    component: WorldClockWidget,\r\n    dialogFields: ['TimeZoneId', 'DateFormat', 'TimeFormat', 'DisplayDate', 'DisplayTime', 'DateTimeSize']\r\n  },\r\n  IframeEmbedWidget: {\r\n    name: 'Iframe Embed widget',\r\n    component: IframeEmbedWidget,\r\n    dialogFields: ['UrlForContent']\r\n  },\r\n  CheckboxWidget: {\r\n    name: 'Checkbox widget',\r\n    component: CheckboxWidget,\r\n    showUpdateTime : true\r\n  },\r\n  AemHealthcheckWidget: {\r\n    name: 'AEM Healthcheck widget',\r\n    component: AemHealthcheckWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'AemHealthcheckInput'],\r\n    showUpdateTime : true\r\n  }\r\n};\r\n\r\nexport default widgetTypes;","import React from 'react';\r\nimport {StyledIframe} from \"../../../styled\";\r\nimport {string} from \"prop-types\";\r\nimport {Typography} from \"@material-ui/core/index\";\r\nimport {attachHttp} from \"./helpers\";\r\n\r\nconst IframeEmbedWidget = ({ url }) => {\r\n  if (url) {\r\n    return (\r\n      <StyledIframe\r\n        url={attachHttp(url)}\r\n      />\r\n    );\r\n  } else {\r\n    return (\r\n      <Typography variant=\"h5\">\r\n        URL is blank\r\n      </Typography>\r\n    );\r\n  }\r\n};\r\n\r\nIframeEmbedWidget.propTypes = {\r\n  url: string.isRequired\r\n};\r\n\r\nexport default IframeEmbedWidget;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { FormControl, InputLabel, Input, Select } from '@material-ui/core';\r\nimport { getToken } from '../utils/auth';\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nconst DropdownField = props => {\r\n  const {\r\n    onChange,\r\n    id,\r\n    label,\r\n    value,\r\n    name,\r\n    children,\r\n    dropdownItems,\r\n    itemsUrl,\r\n    ...other\r\n  } = props;\r\n  const initialLoaded = !itemsUrl;\r\n  const [options, setOptions] = useState(dropdownItems);\r\n  const [loaded, setLoaded] = useState(initialLoaded);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  useEffect(() => {\r\n    if (itemsUrl) {\r\n      const init = isAuthenticated ? {\r\n        headers: {\r\n          'Authorization': getToken()\r\n        }\r\n      } : undefined;\r\n\r\n      fetch(itemsUrl, init)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setOptions(data);\r\n          setLoaded(true);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  }, [itemsUrl, isAuthenticated]);\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel\r\n        shrink\r\n        htmlFor={id}\r\n      >\r\n        {label}\r\n      </InputLabel>\r\n      <Select\r\n        onChange={onChange}\r\n        value={value}\r\n        input={<Input name={name} id={id} />}\r\n        name={name}\r\n        inputProps={other}\r\n      >\r\n        {loaded && children(options)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nDropdownField.defaultProps = {\r\n  value: ''\r\n};\r\n\r\nexport default DropdownField;","import React from 'react';\r\nimport { string } from 'prop-types';\r\n\r\nimport { MenuItem } from '@material-ui/core';\r\nimport DropdownField from '../../DropdownField';\r\n\r\nconst EndpointInput = props => {\r\n  return (\r\n    <DropdownField {...props}>\r\n      {endpoints => endpoints.map(({ id, label }) =>\r\n        <MenuItem key={id} value={id}>{label}</MenuItem>\r\n      )}\r\n    </DropdownField>\r\n  );\r\n};\r\n\r\nEndpointInput.propTypes = {\r\n  value: string.isRequired\r\n};\r\n\r\nexport default EndpointInput;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst NumberInput = (props) => {\r\n  const { min, step, ...other } = props;\r\n\r\n  return (\r\n    <TextField\r\n      type=\"number\"\r\n      inputProps={{ min, step }}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      margin=\"normal\"\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NumberInput;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst TextInput = props => {\r\n  return (\r\n    <TextField\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      margin=\"normal\"\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;","import React from 'react';\r\nimport {MenuItem} from '@material-ui/core';\r\n\r\nimport DropdownField from '../../DropdownField';\r\nimport {StyledFormControlForDropdown} from \"../../styled\";\r\n\r\n/**\r\n * Displays dropdown field using passed array of objects with the following properties: display, value.\r\n * Example: [\r\n *  {\r\n *      display: \"name1\"\r\n *      value: \"value1\"\r\n *  },\r\n *  {\r\n *      display: \"name2\"\r\n *      value: \"value2\"\r\n *  }\r\n * ]\r\n */\r\nconst DisplayValueSelect = props => {\r\n    return (\r\n        <StyledFormControlForDropdown>\r\n            <DropdownField {...props}>\r\n                {items => items.map(item=>\r\n                    <MenuItem key={item.value} value={item.value}>{item.display}</MenuItem>\r\n                )}\r\n            </DropdownField>\r\n        </StyledFormControlForDropdown>\r\n    );\r\n};\r\n\r\nexport default DisplayValueSelect;","import React from 'react';\r\n\r\nimport { MenuItem } from '@material-ui/core';\r\nimport DropdownField from '../../DropdownField';\r\n\r\nconst renderTextSize = (textSizes) =>\r\n  Object.entries(textSizes).map(([size, attr]) => (\r\n    <MenuItem key={size} value={attr}>{size}</MenuItem>\r\n  ));\r\n\r\nconst TextSizeInput = props => {\r\n  return (\r\n      <DropdownField {...props}>\r\n        {renderTextSize}\r\n      </DropdownField>\r\n  );\r\n};\r\n\r\nexport default TextSizeInput;","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst MultilineTextInput = props => {\r\n  return (\r\n    <TextField\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      margin=\"normal\"\r\n      multiline={true}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MultilineTextInput;","import React from 'react';\r\n\r\nimport {Checkbox, FormControlLabel} from \"@material-ui/core\";\r\n\r\nconst CheckboxInput = ({ value, onChange,  ...other }) => (\r\n  <FormControlLabel\r\n    control={\r\n      <Checkbox\r\n          checked={value}\r\n          onChange={onChange}\r\n      />\r\n    }\r\n    {...other}\r\n  />\r\n);\r\n\r\nexport default CheckboxInput;","import { DATE_FORMATS, GMT_TIMEZONES, TIME_FORMATS } from \"../types/WorldClockWidget/helpers\";\r\n\r\nimport EndpointInput from './EndpointInput';\r\nimport NumberInput from './NumberInput';\r\nimport TextInput from './TextInput';\r\nimport SonarQubeMetricsInput from './SonarQubeMetricsInput';\r\nimport DisplayValueSelect from \"./DisplayValueSelect\";\r\nimport TextSizeInput from \"./TextSizeInput\";\r\nimport MultilineTextInput from \"./MultilineTextInput\";\r\nimport CheckboxInput from \"./CheckboxInput\";\r\nimport AemHealthcheckInput from \"./AemHealthcheckInput\";\r\n\r\nconst dialogFields = {\r\n  EndpointField: {\r\n    component: EndpointInput,\r\n    name: 'endpoint',\r\n    label: 'Endpoint',\r\n    itemsUrl: '/api/endpoints'\r\n  },\r\n  SchedulePeriod: {\r\n    component: NumberInput,\r\n    name: 'schedulePeriod',\r\n    label: 'Schedule Period [seconds]',\r\n    min: 1,\r\n    step: 10,\r\n    initialValue: 120\r\n  },\r\n  Path: {\r\n    component: TextInput,\r\n    name: 'path',\r\n    label: 'Path'\r\n  },\r\n  URL: {\r\n    component: TextInput,\r\n    name: 'url',\r\n    label: 'URL'\r\n  },\r\n  UrlForContent: {\r\n    component: TextInput,\r\n    name: 'content.url',\r\n    label: 'URL'\r\n  },\r\n  IdString: {\r\n    component: TextInput,\r\n    name: 'idString',\r\n    label: 'ID'\r\n  },\r\n  IdNumber: {\r\n    component: NumberInput,\r\n    name: 'idNumber',\r\n    label: 'ID',\r\n    step: 1\r\n  },\r\n  Key: {\r\n    component: TextInput,\r\n    name: 'keyString',\r\n    label: 'Key'\r\n  },\r\n  SonarQubeMetricsInput: {\r\n    component: SonarQubeMetricsInput,\r\n    name: 'selectedMetrics',\r\n    initialValue: ['blocker_violations', 'critical_violations', 'major_violations', 'minor_violations']\r\n  },\r\n  AemHealthcheckInput: {\r\n    component: AemHealthcheckInput,\r\n    name: 'selectedHealthChecks',\r\n    initialValue: ['slingJobs', 'systemchecks', 'inactiveBundles', 'DiskSpaceHealthCheck']\r\n  },\r\n  StatusCode: {\r\n    component: NumberInput,\r\n    name: 'expectedStatusCode',\r\n    label: 'Expected Status Code',\r\n    min: 0,\r\n    step: 1,\r\n    initialValue: 200\r\n  },\r\n  TimeZoneId: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.timeZoneId',\r\n    label: 'Timezone',\r\n    dropdownItems: GMT_TIMEZONES,\r\n    initialValue: GMT_TIMEZONES[0].value\r\n  },\r\n  DateFormat: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.dateFormat',\r\n    label: 'Date Format',\r\n    dropdownItems: DATE_FORMATS,\r\n    initialValue: DATE_FORMATS[1].value\r\n  },\r\n  TimeFormat: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.timeFormat',\r\n    label: 'Time Format',\r\n    dropdownItems: TIME_FORMATS,\r\n    initialValue: TIME_FORMATS[1].value\r\n  },\r\n  DisplayDate: {\r\n    component: CheckboxInput,\r\n    name: 'content.displayDate',\r\n    label: 'Display date',\r\n    initialValue: true\r\n  },\r\n  DisplayTime: {\r\n    component: CheckboxInput,\r\n    name: 'content.displayTime',\r\n    label: 'Display time',\r\n    initialValue: true\r\n  },\r\n  DateTimeSize: {\r\n    component: TextSizeInput,\r\n    name: 'content.textSize',\r\n    label: 'Text Size',\r\n    dropdownItems: {\r\n      XXL: 'h2',\r\n      XL: 'h3',\r\n      L: 'h4',\r\n      M: 'h5',\r\n      S: 'h6',\r\n      XS: 'subtitle1',\r\n      XXS: 'subtitle2'\r\n    },\r\n    initialValue: 'h5'\r\n  },\r\n  Text: {\r\n    component: MultilineTextInput,\r\n    name: 'content.text',\r\n    label: 'Text'\r\n  },\r\n  TextSize: {\r\n    component: TextSizeInput,\r\n    name: 'content.textSize',\r\n    label: 'Text Size',\r\n    dropdownItems: {\r\n      XXL: 'h1',\r\n      XL: 'h2',\r\n      L: 'h3',\r\n      M: 'h4',\r\n      S: 'h5',\r\n      XS: 'h6'\r\n    },\r\n    initialValue: 'h4'\r\n  },\r\n  TextOrientation: {\r\n    component: CheckboxInput,\r\n    name: 'content.isVertical',\r\n    label: 'Vertical Text',\r\n    initialValue: false\r\n  }\r\n};\r\n\r\nexport default dialogFields;","import React from 'react';\r\n\r\nimport { Input, InputLabel, Checkbox, MenuItem, ListItemText, Select } from '@material-ui/core';\r\n\r\nimport { StyledFormControl } from './../../styled';\r\nimport {ALL_SONARQUBE_METRICS} from \"../../../constants\";\r\n\r\nconst SonarQubeMetricsInput = props => {\r\n  const { onChange, value } = props;\r\n  const inputId = 'sonarqube-metrics-input';\r\n\r\n  return (\r\n    <StyledFormControl>\r\n      <InputLabel htmlFor={inputId}>Metrics</InputLabel>\r\n      <Select\r\n        multiple\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input id={inputId}/>}\r\n        renderValue={value => `${value.length} selected`}\r\n      >\r\n        {ALL_SONARQUBE_METRICS.map(name => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={value.includes(name)}/>\r\n            <ListItemText primary={name}/>\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </StyledFormControl>\r\n  );\r\n};\r\n\r\nexport default SonarQubeMetricsInput;\r\n\r\n","import React from 'react';\r\n\r\nimport { Input, InputLabel, Checkbox, MenuItem, ListItemText, Select } from '@material-ui/core';\r\n\r\nimport { StyledFormControl } from './../../styled';\r\nimport { AEM_HEALTH_CHECKS } from '../../../constants';\r\n\r\nconst AemHealthcheckInput = props => {\r\n  const { onChange, value } = props;\r\n  const inputId = 'aemhealthcheck-metrics-input';\r\n\r\n  return (\r\n    <StyledFormControl>\r\n      <InputLabel htmlFor={inputId}>Health Checks</InputLabel>\r\n      <Select\r\n        multiple\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input id={inputId}/>}\r\n        renderValue={value => `${value.length} selected`}\r\n      >\r\n        {Object.entries(AEM_HEALTH_CHECKS).map(([name, label]) =>\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={value.includes(name)}/>\r\n            <ListItemText primary={label}/>\r\n          </MenuItem>\r\n        )}\r\n      </Select>\r\n    </StyledFormControl>\r\n  );\r\n};\r\n\r\nexport default AemHealthcheckInput;\r\n\r\n","import React from 'react';\r\nimport { func, object, string } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { createValueRef } from './helpers';\r\nimport widgetTypes from '../widgets';\r\nimport dialogFields from '../widgets/dialogFields';\r\n\r\nimport { FormControl } from '@material-ui/core';\r\n\r\nconst StyledFieldset = styled(FormControl)`\r\n  display: flex;\r\n  margin-bottom: 32px;\r\n  min-width: 300px;\r\n`;\r\n\r\nconst WidgetTypeForm = ({ values, type, handleChange }) => {\r\n  const widgetType = widgetTypes[type];\r\n  const dialogFieldNames = (widgetType && widgetType.dialogFields) ? widgetType.dialogFields : [];\r\n  const hasDialogFields = dialogFieldNames.length !== 0;\r\n\r\n  return hasDialogFields && (\r\n    <>\r\n      <StyledFieldset component=\"fieldset\">\r\n        {dialogFieldNames.map(fieldName => {\r\n          const {\r\n            component: DialogField,\r\n            initialValue = '',\r\n            ...dialogFieldProps\r\n          } = dialogFields[fieldName];\r\n\r\n          const { name } = dialogFieldProps;\r\n          const valueRef = createValueRef(values, initialValue, name);\r\n\r\n          return (\r\n            <DialogField\r\n              key={name}\r\n              value={valueRef}\r\n              onChange={handleChange(name)}\r\n              {...dialogFieldProps}\r\n            />\r\n          );\r\n        })}\r\n      </StyledFieldset>\r\n    </>\r\n  );\r\n};\r\n\r\nWidgetTypeForm.propTypes = {\r\n  handleChange: func.isRequired,\r\n  type: string.isRequired,\r\n  values: object.isRequired\r\n};\r\n\r\nexport default WidgetTypeForm;","import { splitPropsGroupName } from '../helpers';\r\n\r\nexport const createValueRef = (values, initialValue, name) => {\r\n  const [groupName, propName] = splitPropsGroupName(name);\r\n\r\n  if (groupName) {\r\n    if (!values[groupName]) {\r\n      values[groupName] = {};\r\n    }\r\n\r\n    if(values[groupName][propName] === undefined) {\r\n      values[groupName][propName] = initialValue;\r\n    }\r\n\r\n    return values[groupName][propName];\r\n  }\r\n\r\n  if (values[propName] === undefined) {\r\n    values[propName] = initialValue;\r\n  }\r\n\r\n  return values[propName];\r\n};","import React from 'react';\r\nimport { node, any } from 'prop-types';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      {...other}\r\n    >\r\n        {children}\r\n    </Typography>\r\n  )\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: node,\r\n  index: any.isRequired,\r\n  value: any.isRequired,\r\n};\r\n\r\nexport default TabPanel;","import styled from '@emotion/styled/macro';\r\nimport { TextField, Tabs } from '@material-ui/core';\r\nimport TabPanel from '../TabPanel';\r\n\r\nexport const StyledNumberField = styled(TextField)`\r\n  flex-basis: calc(50% - 18px);\r\n`;\r\n\r\nexport const StyledTabPanel = styled(TabPanel)`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const StyledTabs = styled(Tabs)`\r\n  margin-bottom: 12px;\r\n`","import React from 'react';\r\n\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nexport const renderWidgetTypesMenu = (widgetTypes) =>\r\n  Object.entries(widgetTypes).map(([type, { name }]) => (\r\n    <MenuItem key={type} value={type}>{name}</MenuItem>\r\n  ));","import React, { useState } from 'react';\r\nimport { string, number, bool } from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport widgetTypes from '../widgets';\r\nimport { useFormData } from '../../hooks';\r\nimport { sortByKey } from \"../helpers\";\r\nimport { COLUMNS_MIN, ROWS_MIN } from '../../constants';\r\n\r\nimport { Box, FormControlLabel, FormControl, TextField, Switch, Tab } from '@material-ui/core';\r\nimport DropdownField from '../DropdownField';\r\nimport WidgetTypeForm from '../WidgetTypeForm';\r\nimport { StyledNumberField, StyledTabPanel, StyledTabs } from './styled';\r\nimport { renderWidgetTypesMenu } from './helpers';\r\nimport { StyledFieldset } from '../styled';\r\n\r\nconst WidgetForm = ({ renderActions, ...initialFormValues }) => {\r\n  const boardColumns = useSelector(\r\n    ({ ui, boards }) => boards.boardsById[ui.currentBoard].columns\r\n  );\r\n  const { values, handleChange } = useFormData(initialFormValues);\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const widgetType = widgetTypes[values.type];\r\n  const dialogFieldNames = (widgetType && widgetType.dialogFields) ? widgetType.dialogFields : [];\r\n  const hasDialogFields = dialogFieldNames.length !== 0;\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledTabs \r\n        value={tabValue} \r\n        onChange={handleTabChange}\r\n        variant=\"fullWidth\"\r\n      >\r\n        <Tab label=\"General\"/>\r\n        {hasDialogFields && <Tab label={widgetType.name}/>}\r\n      </StyledTabs>\r\n      <StyledTabPanel value={tabValue} index={0}>\r\n        <StyledFieldset component=\"fieldset\">\r\n          <DropdownField\r\n            onChange={handleChange(\"type\")}\r\n            label=\"Type\"\r\n            id=\"widget-type\"\r\n            name=\"type\"\r\n            value={values.type}\r\n            dropdownItems={sortByKey(widgetTypes, 'name')}\r\n            data-cy=\"widget-form-type-select\"\r\n          >\r\n            {renderWidgetTypesMenu}\r\n          </DropdownField>\r\n          <TextField\r\n            onChange={handleChange('title')}\r\n            id=\"title\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            label=\"Title\"\r\n            margin=\"normal\"\r\n            value={values.title}\r\n            inputProps={{'data-cy': 'widget-form-title-input'}}\r\n          />\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <StyledNumberField\r\n              onChange={handleChange('columns')}\r\n              id=\"columns\"\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              inputProps={{\r\n                min: COLUMNS_MIN,\r\n                max: boardColumns,\r\n                'data-cy': 'widget-form-columns-input'\r\n              }}\r\n              label=\"Columns\"\r\n              margin=\"normal\"\r\n              value={values.columns}\r\n              type=\"number\"\r\n            />\r\n            <StyledNumberField\r\n              onChange={handleChange('rows')}\r\n              id=\"rows\"\r\n              InputLabelProps={{\r\n                shrink: true\r\n              }}\r\n              inputProps={{\r\n                min: ROWS_MIN,\r\n                max: 4,\r\n                'data-cy': 'widget-form-rows-input'\r\n              }}\r\n              label=\"Rows\"\r\n              margin=\"normal\"\r\n              value={values.rows}\r\n              type=\"number\"\r\n            />\r\n          </Box>\r\n          <FormControl margin=\"normal\">\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  onChange={handleChange('goNewLine')}\r\n                  checked={values.goNewLine}\r\n                  color=\"primary\"\r\n                  value=\"goNewLine\"\r\n                  inputProps={{'data-cy': 'widget-form-go-new-line-checkbox'}}\r\n                />\r\n              }\r\n              label=\"Go to new line\"\r\n            />\r\n          </FormControl>\r\n          <FormControl margin=\"normal\">\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  onChange={handleChange('disabled')}\r\n                  checked={values.disabled}\r\n                  color=\"primary\"\r\n                  value=\"disabled\"\r\n                  inputProps={{'data-cy': 'widget-form-disable-checkbox'}}\r\n                />\r\n              }\r\n              label=\"Disable\"\r\n            />\r\n          </FormControl>\r\n        </StyledFieldset>\r\n      </StyledTabPanel>\r\n      {hasDialogFields && \r\n        <StyledTabPanel value={tabValue} index={1}>\r\n          <WidgetTypeForm\r\n            type={values.type}\r\n            values={values}\r\n            handleChange={handleChange}\r\n          />\r\n        </StyledTabPanel>\r\n      }\r\n      {renderActions(values)}\r\n    </>\r\n  );\r\n};\r\n\r\nWidgetForm.propTypes = {\r\n  disabled: bool,\r\n  columns: number,\r\n  goNewLine: bool,\r\n  rows: number,\r\n  title: string,\r\n  type: string\r\n};\r\n\r\nWidgetForm.defaultProps = {\r\n  disabled: false,\r\n  columns: 1,\r\n  goNewLine: false,\r\n  rows: 1,\r\n  title: 'Default Widget',\r\n  type: 'DefaultWidget'\r\n};\r\n\r\nexport default WidgetForm;","import React from 'react';\r\nimport { func } from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { addNewWidget } from '../actions/thunks';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CancelButton from './CancelButton';\r\nimport WidgetForm from './WidgetForm';\r\n\r\nconst StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst AddWidget = ({ closeDialog }) => {\r\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddClick = (values) => () => {\r\n    dispatch(addNewWidget({ currentBoardId, values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <WidgetForm\r\n      renderActions={values =>\r\n        <>\r\n          <Button\r\n            onClick={handleAddClick(values)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            data-cy=\"widget-form-submit-button\"\r\n          >\r\n            Add\r\n          </Button>\r\n          <StyledCancelButton \r\n            handleCancelClick={closeDialog} \r\n            data-cy=\"widget-form-cancel-button\"\r\n          />\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nAddWidget.propTypes = {\r\n  closeDialog: func.isRequired,\r\n};\r\n\r\nexport default AddWidget;","import React, { forwardRef } from 'react';\r\nimport { bool, number, object, string } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { mapStatusToColor } from './helpers';\r\n\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nexport const StyledCard = styled(forwardRef(({\r\n  status,\r\n  columns,\r\n  goNewLine,\r\n  isLoggedIn,\r\n  isDragging,\r\n  isOver,\r\n  rows,\r\n  theme,\r\n  ...other\r\n}, ref) => <Card {...other} ref={ref} />))`\r\n  background: ${({ isDragging, status, theme }) => !isDragging ? mapStatusToColor(status, theme) : theme.palette.background.paper};\r\n  box-shadow: none;\r\n  cursor: ${({ isLoggedIn }) => isLoggedIn ? 'move' : 'default'};\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-column-start: ${({ goNewLine }) => goNewLine === true && 1};\r\n  grid-column-end: span ${({ columns }) => columns};\r\n  grid-row-end: span ${({ rows }) => rows};\r\n  position: relative;\r\n\r\n  ${({ isDragging, isOver, theme }) => isDragging && `\r\n    &::before {\r\n      background: ${theme.palette.background.paper};\r\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\r\n      border-radius: inherit;\r\n      content: '';\r\n      display: block;\r\n      height: 100%;\r\n      position: absolute;\r\n      z-index: 2;\r\n      opacity: ${isDragging ? 1 : 0};\r\n      width: 100%;\r\n    }\r\n  `}\r\n`;\r\n\r\nStyledCard.propTypes = {\r\n  columns: number.isRequired,\r\n  goNewLine: bool.isRequired,\r\n  rows: number.isRequired,\r\n  status: string.isRequired,\r\n  theme: object.isRequired\r\n};\r\n\r\nexport const StyledCardHeader = styled(CardHeader)`\r\n  z-index: 1;\r\n`;\r\n\r\nexport const StyledCardContent = styled(CardContent)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;","export const mapStatusToColor = (status, theme) => theme.palette.status[status];\r\n","import React from 'react';\r\nimport { func, object, string, bool, number } from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { saveWidget } from '../actions/thunks';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CancelButton from './CancelButton';\r\nimport WidgetForm from './WidgetForm';\r\n\r\nconst StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst EditWidget = ({ closeDialog, id, widgetTypeData, ...widgetData }) => {\r\n  const initialFormValues = { ...widgetData, ...widgetTypeData };\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSaveClick = (values) => () => {\r\n    dispatch(saveWidget({ id, values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <WidgetForm\r\n      {...initialFormValues}\r\n      renderActions={values =>\r\n        <>\r\n          <Button\r\n            onClick={handleSaveClick(values)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            data-cy=\"widget-form-submit-button\"\r\n          >\r\n            Save\r\n          </Button>\r\n          <StyledCancelButton \r\n            handleCancelClick={closeDialog} \r\n            data-cy=\"widget-form-cancel-button\"\r\n          />\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nEditWidget.propTypes = {\r\n  closeDialog: func.isRequired,\r\n  disabled: bool.isRequired,\r\n  columns: number.isRequired,\r\n  goNewLine: bool.isRequired,\r\n  id: string.isRequired,\r\n  rows: number.isRequired,\r\n  title: string.isRequired,\r\n  type: string.isRequired,\r\n  widgetTypeData: object.isRequired\r\n};\r\n\r\nexport default EditWidget;","import React, { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { func } from 'prop-types';\r\n\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport { Menu, MenuList, IconButton } from '@material-ui/core';\r\nimport { MoreVert } from '@material-ui/icons';\r\n\r\nconst MoreMenu = ({ children }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const handleMoreButtonClick = ({ currentTarget }) => setAnchorEl(currentTarget);\r\n\r\n  const handleMoreMenuClose = () => setAnchorEl(null);\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={handleMoreButtonClick}\r\n        aria-label=\"More\"\r\n        aria-controls=\"more-menu\"\r\n        aria-haspopup=\"true\"\r\n        data-cy=\"more-menu-button\"\r\n      >\r\n        <MoreVert />\r\n      </IconButton>\r\n      <Menu\r\n        onClose={handleMoreMenuClose}\r\n        anchorEl={anchorEl}\r\n        id=\"more-menu\"\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n      >\r\n        <MenuList>\r\n          {children(handleMoreMenuClose)}\r\n        </MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nMoreMenu.propTypes = {\r\n  children: func.isRequired\r\n};\r\n\r\nexport default MoreMenu;","import React from 'react'\r\nimport { object, string } from 'prop-types';\r\n\r\nimport widgetTypes from './widgets';\r\n\r\nconst WidgetContent = ({id, type, content }) =>  {\r\n  const notFoundMessage = 'Widget type not found';\r\n  const WidgetType = widgetTypes[type] ? widgetTypes[type].component : () => notFoundMessage;\r\n\r\n  return <WidgetType id={id} {...content} />;\r\n};\r\n\r\nWidgetContent.propTypes = {\r\n  content: object,\r\n  type: string.isRequired\r\n};\r\n\r\nexport default WidgetContent;","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const StyledTypography = styled(Typography)`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: flex-end;\r\n`;","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { StyledTypography } from './styled';\r\n\r\nconst LastUpdate = ({ lastUpdateTime }) => {\r\n  return (\r\n    <StyledTypography align='left' color='textSecondary' variant='caption' gutterBottom={false}>\r\n      Last update: {lastUpdateTime}\r\n    </StyledTypography>\r\n  );\r\n};\r\n\r\nexport default LastUpdate;","import styled from \"@emotion/styled/macro\";\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nexport const StyledCancelButton = styled(Button)`\r\n  margin-left: 1em;\r\n`;\r\n\r\nexport const StyledButtonBox = styled(Box)`\r\n  margin-top: 1em;\r\n`;\r\n","import React from 'react';\r\nimport { func, string } from 'prop-types';\r\n\r\nimport { Button, Typography } from \"@material-ui/core/index\";\r\nimport AppDialog from \"../AppDialog\";\r\nimport { StyledButtonBox, StyledCancelButton } from \"./styled\";\r\n\r\nconst ConfirmationDialog = props => {\r\n  const { open, title, content, handleOk, labelOk, handleCancel, labelCancel } = props;\r\n\r\n  return (\r\n    <AppDialog\r\n      handleDialogClose={handleCancel}\r\n      open={open}\r\n      title={title}\r\n      data-cy=\"confirmation-dialog\"\r\n    >\r\n      <>\r\n        <Typography id=\"confirmation-dialog-content\">\r\n          {content}\r\n        </Typography>\r\n        <StyledButtonBox display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button onClick={handleOk} variant=\"contained\" color=\"primary\" autoFocus data-cy=\"confirmation-dialog-ok\">\r\n            {labelOk}\r\n          </Button>\r\n          {handleCancel &&\r\n          <StyledCancelButton onClick={handleCancel} variant=\"outlined\" color=\"primary\" data-cy=\"confirmation-dialog-cancel\">\r\n            {labelCancel}\r\n          </StyledCancelButton>}\r\n        </StyledButtonBox>\r\n      </>\r\n    </AppDialog>\r\n  );\r\n};\r\n\r\nConfirmationDialog.propTypes = {\r\n  handleOk: func.isRequired,\r\n  content: string,\r\n  labelOk: string,\r\n  labelCancel: string\r\n};\r\n\r\nConfirmationDialog.defaultProps = {\r\n  content: '',\r\n  labelOk: 'OK',\r\n  labelCancel: 'Cancel'\r\n};\r\n\r\nexport default ConfirmationDialog;","import React, { useRef } from 'react';\r\nimport { string } from 'prop-types';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { removeWidget, reorderWidgets } from '../../actions/thunks';\r\nimport widgetTypes from \"../widgets\";\r\nimport { ItemTypes } from '../../constants';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { StyledCard, StyledCardHeader, StyledCardContent } from './styled';\r\nimport AppDialog from '../AppDialog';\r\nimport EditWidget from '../EditWidget';\r\nimport MoreMenu from '../MoreMenu';\r\nimport WidgetContent from '../WidgetContent';\r\nimport LastUpdate from \"../LastUpdate\";\r\nimport ConfirmationDialog from \"../ConfirmationDialog\";\r\n\r\nconst Widget = ({ id, index }) => {\r\n  const widgetData = useSelector(\r\n    state => state.widgets.widgetsById[id],\r\n    shallowEqual\r\n  );\r\n  const {\r\n    id: widgetId,\r\n    isUpdating,\r\n    disabled,\r\n    type,\r\n    status,\r\n    title,\r\n    content,\r\n    config: {\r\n      columns,\r\n      goNewLine,\r\n      rows\r\n    },\r\n    ...widgetTypeData\r\n  } = widgetData;\r\n  const showUpdateTime = widgetTypes[type] ? widgetTypes[type].showUpdateTime : false;\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const [confirmationDialogOpened, openConfirmationDialog, closeConfirmationDialog] = useToggle();\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const ref = useRef(null);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.WIDGET, id, index },\r\n    canDrag: isAuthenticated,\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.WIDGET,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const { id: sourceId, index: sourceIndex } = item;\r\n      const targetIndex = index;\r\n\r\n      if (sourceIndex === targetIndex) {\r\n        return;\r\n      }\r\n\r\n      const { left, right } = ref.current.getBoundingClientRect();\r\n      const dropTargetMiddleX = right - (right - left) / 2;\r\n      const { x: dragSourceMouseX } = monitor.getClientOffset();\r\n\r\n      if (\r\n        (sourceIndex < targetIndex && dragSourceMouseX < dropTargetMiddleX) ||\r\n        (sourceIndex > targetIndex && dragSourceMouseX > dropTargetMiddleX)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      dispatch(reorderWidgets(sourceId, targetIndex));\r\n      item.index = targetIndex;\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      dropResult: monitor.getSourceClientOffset()\r\n    })\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  const handleEditClick = (closeMenu) => () => {\r\n    openDialog();\r\n    closeMenu();\r\n  };\r\n\r\n  const handleDeleteClick = (closeMenu) => () => {\r\n    openConfirmationDialog();\r\n    closeMenu();\r\n  };\r\n\r\n  const deleteWidget = () => {\r\n    dispatch(removeWidget(id));\r\n    closeConfirmationDialog();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledCard\r\n        status={status}\r\n        columns={columns}\r\n        goNewLine={goNewLine}\r\n        rows={rows}\r\n        theme={theme}\r\n        isLoggedIn={isAuthenticated}\r\n        isDragging={isDragging}\r\n        isOver={isOver}\r\n        ref={ref}\r\n      >\r\n        <StyledCardHeader\r\n          title={title}\r\n          titleTypographyProps={\r\n            {\r\n              component: 'h3',\r\n              variant: 'subtitle2',\r\n              color: 'textPrimary'\r\n            }\r\n          }\r\n          action={\r\n            <MoreMenu>\r\n              {closeMenu =>\r\n                <>\r\n                  <MenuItem onClick={handleEditClick(closeMenu)} data-cy=\"widget-edit\">Edit</MenuItem>\r\n                  <MenuItem onClick={handleDeleteClick(closeMenu)} data-cy=\"widget-delete\">Delete</MenuItem>\r\n                </>\r\n              }\r\n            </MoreMenu>\r\n          }\r\n        />\r\n        <StyledCardContent>\r\n          {!disabled ? <WidgetContent id={id} type={type} content={content} /> : 'Disabled'}\r\n          {showUpdateTime && <LastUpdate lastUpdateTime={new Date().toLocaleString()} />}\r\n        </StyledCardContent>\r\n      </StyledCard>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title={`Edit ${title}`}\r\n        data-cy=\"widget-edit-dialog\"\r\n      >\r\n        <EditWidget\r\n          closeDialog={handleDialogClose}\r\n          content={content}\r\n          id={id}\r\n          title={title}\r\n          disabled={disabled}\r\n          type={type}\r\n          columns={columns}\r\n          goNewLine={goNewLine}\r\n          rows={rows}\r\n          widgetTypeData={widgetTypeData}\r\n        />\r\n      </AppDialog>\r\n      <ConfirmationDialog\r\n        open={confirmationDialogOpened}\r\n        title={`Delete ${title}`}\r\n        content={`Are you sure you want to delete ${title}?`}\r\n        handleOk={deleteWidget}\r\n        labelOk=\"Delete\"\r\n        handleCancel={closeConfirmationDialog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nWidget.propTypes = {\r\n  id: string.isRequired\r\n};\r\n\r\nexport default Widget;","import React from 'react';\r\nimport { array } from 'prop-types';\r\n\r\nimport Widget from './Widget';\r\n\r\nconst WidgetList = ({ widgets: widgetIds }) => {\r\n  return (\r\n    widgetIds.map((widgetId, index) =>\r\n      <Widget\r\n        key={widgetId}\r\n        id={widgetId}\r\n        index={index}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nWidgetList.propTypes = {\r\n  widgets: array.isRequired\r\n};\r\n\r\nexport default WidgetList;","import styled from '@emotion/styled/macro';\r\nimport { getColumns } from './helpers';\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  grid-template-columns: repeat(${getColumns}, 1fr);\r\n  grid-auto-rows: 1fr;\r\n`;","export const getColumns = props => props.columns;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { setCurrentBoard } from \"../../actions/actionCreators\";\r\n\r\nimport WidgetList from \"../WidgetList\";\r\nimport { StyledContainer } from \"./styled\";\r\n\r\nconst Board = ({ boardId, className }) => {\r\n  const currentBoard = useSelector(({ boards }) => boards.boardsById[boardId]);\r\n  const { columns, widgets } = currentBoard || {};\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    boardId && dispatch(setCurrentBoard(boardId));\r\n  }, [dispatch, boardId]);\r\n\r\n  if (!currentBoard) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <StyledContainer\r\n      className={className}\r\n      columns={columns}\r\n    >\r\n      <WidgetList widgets={widgets}/>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Board;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Board from './Board';\r\n\r\nconst IndexBoard = () => {\r\n  const [firstBoardId] = useSelector(({ boards }) => boards.allBoards);\r\n\r\n  return <Board boardId={firstBoardId} />;\r\n};\r\n\r\nexport default IndexBoard;","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const StyledTimer = styled(Typography)`\r\n  margin-right: 20px;\r\n`;","import React from 'react';\r\n\r\nimport { useBoardSwitching } from './hooks';\r\nimport { formatTime } from './helpers';\r\n\r\nimport { IconButton, Tooltip } from '@material-ui/core';\r\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from '@material-ui/icons';\r\nimport { StyledTimer } from './styled';\r\n\r\nconst BoardSwitcher = ({ className }) => {\r\n  const {\r\n    handleBoardsSwitch,\r\n    handlePlayToggle,\r\n    hasBoardsToSwitch,\r\n    isPlaying,\r\n    isDisable,\r\n    nextBoardTitle,\r\n    prevBoardTitle,\r\n    switchInterval,\r\n    timeElapsed\r\n  } = useBoardSwitching();\r\n  const timeLeft = switchInterval - timeElapsed;\r\n\r\n  if (!hasBoardsToSwitch || isDisable) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <StyledTimer>{formatTime(timeLeft)}</StyledTimer>\r\n      <Tooltip\r\n        title={prevBoardTitle}\r\n        placement=\"bottom-end\"\r\n      >\r\n        <IconButton\r\n          onClick={handleBoardsSwitch('prev')}\r\n          color=\"inherit\"\r\n          aria-label=\"Next board\"\r\n          edge=\"start\"\r\n        >\r\n          <SkipPrevious />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <IconButton\r\n        onClick={handlePlayToggle}\r\n        color=\"inherit\"\r\n        aria-label=\"Auto switch boards\"\r\n        edge=\"start\"\r\n      >\r\n        {isPlaying ? <Pause /> : <PlayArrow />}\r\n      </IconButton>\r\n      <Tooltip\r\n        title={nextBoardTitle}\r\n        placement=\"bottom-end\"\r\n      >\r\n        <IconButton\r\n          onClick={handleBoardsSwitch('next')}\r\n          color=\"inherit\"\r\n          aria-label=\"Next board\"\r\n          edge=\"start\"\r\n        >\r\n          <SkipNext />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardSwitcher;","import { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport { getSwitcherBoards, getSwitchInterval, getBoardTitle, getCurrentBoardId } from '../../selectors';\r\nimport { getPrevAndNextIndex } from './helpers';\r\n\r\nexport const useBoardSwitching = () => {\r\n  const switcherBoards = useSelector(getSwitcherBoards);\r\n  const currentBoardId = useSelector(getCurrentBoardId);\r\n  const hasBoardsToSwitch = switcherBoards.length > 1;\r\n  const boardIndex = switcherBoards.includes(currentBoardId) ? switcherBoards.indexOf(currentBoardId) : 0;\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [prevBoardIndex, nextBoardIndex] = getPrevAndNextIndex(switcherBoards, boardIndex);\r\n  const switchInterval = useSelector(state => getSwitchInterval(state, switcherBoards[boardIndex]));\r\n  const prevBoardTitle = useSelector(state => getBoardTitle(state, switcherBoards[prevBoardIndex]));\r\n  const nextBoardTitle = useSelector(state => getBoardTitle(state, switcherBoards[nextBoardIndex]));\r\n  const isDisable = !switcherBoards.includes(currentBoardId);\r\n\r\n  const switchBoard = useCallback(\r\n    (direction) => {\r\n      const switchDirection = {\r\n        next: nextBoardIndex,\r\n        prev: prevBoardIndex\r\n      };\r\n      const currentBoardIndex = switchDirection[direction];\r\n\r\n      navigate(switcherBoards[currentBoardIndex] || switcherBoards[0]);\r\n    },\r\n    [nextBoardIndex, prevBoardIndex, switcherBoards]\r\n  );\r\n\r\n  const handleBoardsSwitch = (direction) => () => {\r\n    if (!hasBoardsToSwitch) {\r\n      return;\r\n    }\r\n\r\n    switchBoard(direction);\r\n    setTimeElapsed(0);\r\n  };\r\n\r\n  const handlePlayToggle = () => {\r\n    setIsPlaying(prevState => !prevState);\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (isPlaying) {\r\n        const interval = setInterval(() => {\r\n          setTimeElapsed(prevState => prevState + 1);\r\n\r\n          if (timeElapsed >= switchInterval) {\r\n            switchBoard('next');\r\n            setTimeElapsed(0);\r\n          }\r\n        }, 1000);\r\n\r\n        return () => clearInterval(interval);\r\n      }\r\n    },\r\n    [isPlaying, timeElapsed, switchInterval, switchBoard]\r\n  );\r\n\r\n  return {\r\n    handleBoardsSwitch,\r\n    handlePlayToggle,\r\n    hasBoardsToSwitch,\r\n    isPlaying,\r\n    isDisable,\r\n    nextBoardTitle,\r\n    prevBoardTitle,\r\n    switchInterval,\r\n    timeElapsed\r\n  };\r\n};","export const formatTime = timeInSec => {\r\n  const seconds = timeInSec % 60;\r\n  const minutes = Math.floor(timeInSec / 60);\r\n  const leadingZero = seconds < 10 ? 0 : '';\r\n\r\n  return `${minutes}:${leadingZero}${seconds}`;\r\n};\r\n\r\nexport const getPrevAndNextIndex = (array, currentIndex) => {\r\n  const lastIndex = array.length - 1;\r\n  const nextIndex = currentIndex < lastIndex ? currentIndex + 1 : 0;\r\n  const prevIndex = currentIndex > 0 ? currentIndex - 1 : lastIndex;\r\n\r\n  return [prevIndex, nextIndex];\r\n};","import React from \"react\";\r\nimport styled from \"@emotion/styled/macro\";\r\nimport {SnackbarContent} from \"@material-ui/core\";\r\n\r\nimport {mapVariantToColor} from \"./helpers\";\r\n\r\nexport const SpanIcon = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledSnackbarContent = styled(({ theme, variant, ...other }) => <SnackbarContent {...other} />)`\r\n  background: ${({ theme, variant }) => mapVariantToColor(theme, variant)};\r\n`;\r\n","export const mapVariantToColor = (theme, variant) => theme.palette.variant[variant];","import React from \"react\";\r\nimport { CheckCircle, Error, Info, Warning } from \"@material-ui/icons\";\r\n\r\nconst IconVariant = ({ variant }) => {\r\n  const iconByVariant = {\r\n    success: CheckCircle,\r\n    warning: Warning,\r\n    error: Error,\r\n    info: Info,\r\n  };\r\n\r\n  const Icon = variant in iconByVariant ? iconByVariant[variant] : iconByVariant['info'];\r\n\r\n  return <Icon />;\r\n};\r\n\r\nexport default IconVariant;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { SpanIcon, StyledSnackbarContent } from \"./styled\";\r\nimport IconVariant from \"../IconVariant\";\r\n\r\nconst SnackbarVariantContent = props => {\r\n  const { message, variant } = props;\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledSnackbarContent\r\n      theme={theme}\r\n      variant={variant}\r\n      message={\r\n        <SpanIcon>\r\n          <IconVariant variant={variant}/>\r\n          {message}\r\n        </SpanIcon>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nSnackbarVariantContent.propTypes = {\r\n  variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n  message: PropTypes.string,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default SnackbarVariantContent;\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar/index';\r\n\r\nimport SnackbarVariantContent from \"./SnackbarVariantContent\";\r\n\r\nconst SnackbarWithVariant = props => {\r\n  const {open, handleClose, hideAfter, message, vertical, horizontal, variant} = props;\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: vertical,\r\n        horizontal: horizontal\r\n      }}\r\n      open={open}\r\n      autoHideDuration={hideAfter}\r\n      onClose={handleClose}\r\n    >\r\n      <SnackbarVariantContent\r\n        variant={variant}\r\n        message={message}\r\n      />\r\n    </Snackbar>\r\n  );\r\n};\r\n\r\nexport default SnackbarWithVariant;","export const getCredentials = () => {\r\n  const usernameField = document.getElementById(\"username\");\r\n  const passwordField = document.getElementById(\"password\");\r\n  return {\r\n    username: usernameField ? usernameField.value : \"\",\r\n    password: passwordField ? passwordField.value : \"\",\r\n  };\r\n};\r\n","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { login, logout } from '../../actions/thunks';\r\nimport { clearLoginErrorMessage } from \"../../actions/actionCreators\";\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { Button, IconButton, TextField, Typography } from '@material-ui/core';\r\nimport { AccountCircle, PowerSettingsNew } from '@material-ui/icons';\r\nimport AppDialog from './../AppDialog';\r\nimport SnackbarWithVariant from \"../SnackbarWithVariant\";\r\nimport { StyledFieldset } from '../styled';\r\nimport { getCredentials } from \"./helpers\";\r\n\r\nconst UserLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const errorMsg = useSelector(({app}) => app.loginErrorMessage);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const [loginSnackbarOpened, openLoginSnackbar, handleLoginSnackbarClose] = useToggle();\r\n  const [logoutSnackbarOpened, openLogoutSnackbar, handleLogoutSnackbarClose] = useToggle();\r\n\r\n  useEffect(() => {\r\n    if(isAuthenticated) {\r\n      handleDialogClose();\r\n      openLoginSnackbar();\r\n    }\r\n  }, [isAuthenticated, handleDialogClose, openLoginSnackbar]);\r\n\r\n  const handleLoginButtonClick = () => {\r\n    const credentials = getCredentials();\r\n    dispatch(login(credentials))\r\n  };\r\n\r\n  const handleLoginOnEnterPress = event => {\r\n    if (event.key === 'Enter') {\r\n      handleLoginButtonClick();\r\n    }\r\n  };\r\n\r\n  const handleLoginDialogOpen = () => {\r\n    openDialog(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    openLogoutSnackbar();\r\n  };\r\n\r\n  function closeDialog() {\r\n    handleDialogClose();\r\n    dispatch(clearLoginErrorMessage());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isAuthenticated &&\r\n        <IconButton\r\n          onClick={handleLoginDialogOpen}\r\n          aria-label=\"Login\"\r\n          color=\"inherit\"\r\n          edge=\"start\"\r\n          data-cy=\"user-login-login-icon\"\r\n        >\r\n          <AccountCircle/>\r\n        </IconButton>\r\n      }\r\n      {isAuthenticated &&\r\n        <IconButton\r\n          onClick={handleLogout}\r\n          aria-label=\"Logout\"\r\n          color=\"inherit\"\r\n          edge=\"start\"\r\n          data-cy=\"user-login-logout-icon\"\r\n        >\r\n          <PowerSettingsNew/>\r\n        </IconButton>\r\n      }\r\n      <AppDialog\r\n        handleDialogClose={closeDialog}\r\n        open={dialogOpened}\r\n        title='User Login'>\r\n        <StyledFieldset component=\"fieldset\">\r\n          {errorMsg &&\r\n          <Typography color=\"error\">\r\n            {errorMsg}\r\n          </Typography>}\r\n          <TextField\r\n            autoFocus\r\n            id=\"username\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            label=\"Username\"\r\n            margin=\"normal\"\r\n            onKeyPress={handleLoginOnEnterPress}\r\n            inputProps={{'data-cy': 'user-login-username-input'}}\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            onKeyPress={handleLoginOnEnterPress}\r\n            inputProps={{'data-cy': 'user-login-password-input'}}\r\n          />\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleLoginButtonClick}\r\n            variant=\"contained\"\r\n            data-cy='user-login-submit-button'>\r\n            Login\r\n          </Button>\r\n        </StyledFieldset>\r\n      </AppDialog>\r\n      <SnackbarWithVariant\r\n        open={loginSnackbarOpened}\r\n        handleClose={handleLoginSnackbarClose}\r\n        hideAfter={3000}\r\n        message={`Logged in as ${getCredentials().username}`}\r\n        vertical=\"top\"\r\n        horizontal=\"center\"\r\n        variant=\"success\"\r\n      />\r\n      <SnackbarWithVariant\r\n        open={logoutSnackbarOpened}\r\n        handleClose={handleLogoutSnackbarClose}\r\n        hideAfter={3000}\r\n        message={`Logged out successfully`}\r\n        vertical=\"top\"\r\n        horizontal=\"center\"\r\n        variant=\"info\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { func } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { setSize } from './helpers';\r\n\r\nimport { AppBar, Container, Toolbar, IconButton } from '@material-ui/core';\r\nimport { DashboardRounded } from '@material-ui/icons';\r\nimport { StyledTitle } from \"./styled\";\r\n\r\nimport BoardSwitcher from './BoardSwitcher';\r\nimport UserLogin from \"./UserLogin\";\r\n\r\nconst StyledBoardSwitcher = styled(BoardSwitcher)`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  background-color: #211f39;\r\n  box-shadow: none;\r\n`;\r\n\r\nconst StyledToolbar = styled(Toolbar)`\r\n  min-height: ${setSize(10)};\r\n`;\r\n\r\nconst NavBar = ({ handleDrawerToggle }) => {\r\n  const theme = useTheme();\r\n  const title = useSelector(({ ui, boards }) => ui.currentBoard ? boards.boardsById[ui.currentBoard].title : '');\r\n\r\n  return (\r\n    <StyledAppBar position=\"fixed\">\r\n      <Container maxWidth=\"xl\">\r\n        <StyledToolbar\r\n          disableGutters\r\n          theme={theme}\r\n        >\r\n          <IconButton\r\n            onClick={handleDrawerToggle(true)}\r\n            aria-label=\"Open boards drawer\"\r\n            color=\"inherit\"\r\n            edge=\"start\"\r\n            data-cy=\"navbar-show-drawer-button\"\r\n          >\r\n            <DashboardRounded />\r\n          </IconButton>\r\n          <UserLogin/>\r\n          <StyledTitle\r\n            component=\"h2\"\r\n            variant=\"h3\"\r\n            theme={theme}\r\n            data-cy=\"navbar-title-header\"\r\n          >\r\n            {title}\r\n          </StyledTitle>\r\n          <StyledBoardSwitcher />\r\n        </StyledToolbar>\r\n      </Container>\r\n    </StyledAppBar>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  handleDrawerToggle: func.isRequired\r\n};\r\n\r\nexport default NavBar;","import styled from '@emotion/styled/macro';\r\n\r\nimport { FormControl } from '@material-ui/core';\r\n\r\nexport const StyledFieldset = styled(FormControl)`\r\n  display: flex;\r\n  margin-bottom: 32px;\r\n  min-width: 300px;\r\n`;","import React from 'react';\r\nimport { string, number, bool } from 'prop-types';\r\n\r\nimport { useFormData } from '../../hooks';\r\nimport { COLUMNS_MAX, COLUMNS_MIN } from '../../constants';\r\n\r\nimport { FormControl, FormControlLabel, Switch, TextField } from '@material-ui/core';\r\nimport { StyledFieldset } from './styled';\r\n\r\nconst BoardForm = ({ renderActions, ...initialFormValues }) => {\r\n  const { values, handleChange } = useFormData(initialFormValues);\r\n  const { autoSwitch } = values;\r\n\r\n  return (\r\n    <>\r\n      <StyledFieldset component=\"fieldset\">\r\n        <TextField\r\n          onChange={handleChange('title')}\r\n          id=\"title\"\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          label=\"Title\"\r\n          margin=\"normal\"\r\n          value={values.title}\r\n          inputProps={{'data-cy': 'board-form-title-input'}}\r\n        />\r\n        <TextField\r\n          onChange={handleChange('columns')}\r\n          id=\"columns\"\r\n          InputLabelProps={{\r\n            shrink: true\r\n          }}\r\n          inputProps={{\r\n            min: COLUMNS_MIN,\r\n            max: COLUMNS_MAX,\r\n            'data-cy': 'board-form-columns-input'\r\n          }}\r\n          label=\"Columns\"\r\n          margin=\"normal\"\r\n          value={values.columns}\r\n          type=\"number\"\r\n        />\r\n        <FormControl margin=\"normal\">\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                onChange={handleChange('autoSwitch')}\r\n                checked={values.autoSwitch}\r\n                color=\"primary\"\r\n                value=\"autoSwitch\"\r\n                inputProps={{'data-cy': 'board-form-auto-switch-checkbox'}}\r\n              />\r\n            }\r\n            label=\"Auto switch\"\r\n          />\r\n        </FormControl>\r\n        {autoSwitch &&\r\n          <TextField\r\n            onChange={handleChange('switchInterval')}\r\n            id=\"switchInterval\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            label=\"Switch interval [s]\"\r\n            margin=\"normal\"\r\n            value={values.switchInterval}\r\n            type=\"number\"\r\n            inputProps={{'data-cy': 'board-form-switch-interval-input'}}\r\n          />\r\n        }\r\n      </StyledFieldset>\r\n      {renderActions(values)}\r\n    </>\r\n  );\r\n};\r\n\r\nBoardForm.propTypes = {\r\n  autoSwitch: bool,\r\n  columns: number,\r\n  switchInterval: number,\r\n  title: string,\r\n};\r\n\r\nBoardForm.defaultProps = {\r\n  autoSwitch: true,\r\n  columns: 8,\r\n  switchInterval: 60,\r\n  title: 'Board',\r\n};\r\n\r\nexport default BoardForm;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { useToggle } from '../hooks';\r\nimport { addNewBoard } from '../actions/thunks';\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport { Button, IconButton } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport AppDialog from './AppDialog';\r\nimport CancelButton from './CancelButton';\r\nimport BoardForm from './BoardForm';\r\n\r\nconst StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst AddBoard = () => {\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const handleAddBoardClick = (event) => {\r\n    event.stopPropagation();\r\n    openDialog();\r\n  };\r\n\r\n  const handleAddActionClick = values => () => {\r\n    dispatch(addNewBoard(values));\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={handleAddBoardClick}\r\n        color=\"primary\"\r\n        data-cy=\"add-board-add-button\">\r\n        <Add />\r\n      </IconButton>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title=\"Add new board\"\r\n      >\r\n        <BoardForm renderActions={values => (\r\n            <>\r\n              <Button\r\n                onClick={handleAddActionClick(values)}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                data-cy=\"board-form-submit-button\"\r\n              >\r\n                Add\r\n              </Button>\r\n              <StyledCancelButton\r\n                handleCancelClick={handleDialogClose}\r\n                data-cy=\"board-form-cancel-button\"\r\n              />\r\n            </>\r\n          )}\r\n        />\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddBoard;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { saveBoard } from '../actions/thunks';\r\n\r\nimport { Button } from '@material-ui/core'\r\nimport BoardForm from './BoardForm';\r\nimport CancelButton from './CancelButton';\r\n\r\nconst StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n\r\nconst EditBoard = ({ closeDialog, id, ...initialFormValues }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSaveClick = (values) => () => {\r\n    dispatch(saveBoard({ id, ...values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <BoardForm\r\n      {...initialFormValues}\r\n      renderActions={values =>\r\n        <>\r\n          <Button\r\n            onClick={handleSaveClick(values)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            data-cy=\"board-form-submit-button\"\r\n          >\r\n            Save\r\n          </Button>\r\n          <StyledCancelButton \r\n            handleCancelClick={closeDialog} \r\n            data-cy=\"board-form-cancel-button\"\r\n          />\r\n        </>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditBoard;","import React, { forwardRef } from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { Card, CardActions } from '@material-ui/core';\r\n\r\nexport const StyledCard = styled(forwardRef(({\r\n  isLoggedIn,\r\n  isDragging,\r\n  isOver,\r\n  theme,\r\n  ...other\r\n}, ref) => <Card {...other} ref={ref} />))`\r\n  background-color: ${({ theme }) => theme.palette.background.board.card}};\r\n  box-shadow: none;\r\n  cursor: ${({ isLoggedIn }) => isLoggedIn ? 'move': 'default'};\r\n  position: relative;\r\n\r\n  ${({ isDragging, isOver, theme }) => isDragging && `\r\n    &::before {\r\n      background-color: ${theme.palette.background.board.dragged};\r\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\r\n      border-radius: inherit;\r\n      content: '';\r\n      display: block;\r\n      height: 100%;\r\n      position: absolute;\r\n      z-index: 2;\r\n      opacity: ${isDragging ? 1 : 0};\r\n      width: 100%;\r\n    }\r\n  `}\r\n`\r\n\r\nexport const StyledCardActions = styled(CardActions)`\r\n  justify-content: flex-end;\r\n  z-index: 1;\r\n`;","import React, { useRef } from 'react';\r\nimport { object } from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { deleteBoardWithWidgets } from '../../actions/thunks';\r\nimport { reorderBoard } from '../../actions/thunks';\r\nimport { ItemTypes } from '../../constants';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport { Delete, Edit } from '@material-ui/icons'\r\nimport AppDialog from '../AppDialog';\r\nimport EditBoard from '../EditBoard';\r\nimport { StyledCard, StyledCardActions } from './styled';\r\n\r\nconst BoardCard = ({ boardData, index, className }) => {\r\n  const {\r\n    autoSwitch,\r\n    columns,\r\n    id,\r\n    switchInterval,\r\n    title\r\n  } = boardData;\r\n  const [open, openDialog, handleDialogClose] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const ref = useRef(null);\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.BOARD, id, index },\r\n    canDrag: isAuthenticated,\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.BOARD,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const { id: sourceId, index: sourceIndex } = item;\r\n      const targetIndex = index;\r\n\r\n      if (sourceIndex === targetIndex) {\r\n        return\r\n      }\r\n\r\n      const { top, bottom } = ref.current.getBoundingClientRect();\r\n      const dropTargetMiddleY = bottom - (bottom - top) / 2;\r\n      const { y: dragSourceMouseY } = monitor.getClientOffset();\r\n\r\n      const hasPointerPassedMiddle = (sourceIndex < targetIndex && dragSourceMouseY >= dropTargetMiddleY) ||\r\n        (sourceIndex > targetIndex && dragSourceMouseY <= dropTargetMiddleY)\r\n\r\n      if (!hasPointerPassedMiddle) {\r\n        return;\r\n      }\r\n\r\n      dispatch(reorderBoard(sourceId, targetIndex));\r\n      item.index = targetIndex;\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      dropResult: monitor.getSourceClientOffset()\r\n    })\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  const handleBoardClick = (boardId) => () => {\r\n    navigate(boardId);\r\n  };\r\n\r\n  const handleEditClick = (event) => {\r\n    event.stopPropagation();\r\n    openDialog();\r\n  };\r\n\r\n  const handleDeleteClick = (event) => {\r\n    event.stopPropagation();\r\n    dispatch(deleteBoardWithWidgets(id));\r\n  };\r\n\r\n  return (\r\n    <div className={className} data-cy=\"board-card\">\r\n      <StyledCard\r\n        onClick={handleBoardClick(id)}\r\n        theme={theme}\r\n        isLoggedIn={isAuthenticated}\r\n        isDragging={isDragging}\r\n        isOver={isOver}\r\n        ref={ref}\r\n      >\r\n        <CardHeader\r\n          title={title}\r\n          titleTypographyProps={\r\n            {\r\n              component: 'h3',\r\n              variant: 'subtitle2',\r\n              color: 'textPrimary'\r\n            }\r\n          }\r\n          data-cy=\"board-card-header\"\r\n        />\r\n        <CardContent>\r\n        </CardContent>\r\n        {isAuthenticated &&\r\n          <StyledCardActions>\r\n            <IconButton\r\n              onClick={handleEditClick}\r\n              aria-label=\"edit\"\r\n              size=\"small\"\r\n              data-cy=\"board-card-edit-button\"\r\n            >\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleDeleteClick}\r\n              aria-label=\"delete\"\r\n              size=\"small\"\r\n              data-cy=\"board-card-delete-button\"\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </StyledCardActions>\r\n        }\r\n      </StyledCard>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={open}\r\n        title={`Edit ${title}`}\r\n        data-cy=\"board-card-edit-dialog\"\r\n      >\r\n        <EditBoard\r\n          closeDialog={handleDialogClose}\r\n          autoSwitch={autoSwitch}\r\n          columns={columns}\r\n          id={id}\r\n          switchInterval={switchInterval}\r\n          title={title}\r\n        />\r\n      </AppDialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nBoardCard.propTypes = {\r\n  boardData: object.isRequired\r\n};\r\n\r\nexport default BoardCard;","import styled from '@emotion/styled/macro';\r\n\r\nimport BoardCard from '../BoardCard';\r\n\r\nexport const StyledBoardCard = styled(BoardCard)`\r\n  margin-bottom: 32px;\r\n`;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport { StyledBoardCard } from './styled';\r\n\r\nconst BoardList = ({ className }) => {\r\n  const boards = useSelector(\r\n    ({ boards }) => {\r\n      const { boardsById, allBoards } = boards;\r\n\r\n      return allBoards.map(boardId => boardsById[boardId]);\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Box className={className}>\r\n      {boards.map((boardData, index) => (\r\n        <StyledBoardCard\r\n          boardData={boardData}\r\n          key={boardData.id}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BoardList;","import React from 'react';\r\n\r\nimport logo from '../assets/images/cogBoard-white.png';\r\n\r\nconst Logo = ({ className }) => <img className={className} src={logo} alt=\"Cogboard logo\" />;\r\n\r\nexport default Logo;","import styled from '@emotion/styled/macro';\r\n\r\nimport { Box, Fab } from '@material-ui/core';\r\nimport BoardList from '../BoardList';\r\nimport Logo from '../Logo';\r\n\r\nexport const StyledActions = styled(Box)`\r\n  bottom: 50px;\r\n  position: fixed;\r\n  right: 50px;\r\n  z-index: 10000;\r\n`;\r\n\r\nexport const StyledSaveFab = styled(Fab)`\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport const StyledBoardList = styled(BoardList)`\r\n  padding: 32px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledMain = styled.main`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 110px;\r\n`;\r\n\r\nexport const StyledLogo = styled(Logo)`\r\n  width: 40%;\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nexport const StyledDrawerContainer = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 32px;\r\n  width: 250px;\r\n`;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Router } from \"@reach/router\";\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { saveData } from '../../actions/thunks';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { Container, Drawer, Fab } from '@material-ui/core';\r\nimport { Add, Save } from '@material-ui/icons';\r\nimport AppDialog from '../AppDialog';\r\nimport AddWidget from '../AddWidget';\r\nimport BoardIndex from '../BoardIndex';\r\nimport Board from '../Board';\r\nimport NavBar from '../NavBar';\r\nimport AddBoard from '../AddBoard';\r\nimport { StyledActions,\r\n  StyledBoardList,\r\n  StyledDrawerContainer,\r\n  StyledLogo,\r\n  StyledMain,\r\n  StyledSaveFab\r\n} from './styled';\r\n\r\nconst MainTemplate = () => {\r\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\r\n  const isDataChanged = useSelector(({ app }) => app.isDataChanged);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [drawerOpened, setDrawerOpened] = useState(false);\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSaveDataClick = () => {\r\n    dispatch(saveData());\r\n  };\r\n\r\n  const handleAddWidgetClick = () => {\r\n    openDialog(true);\r\n  };\r\n\r\n  const handleDrawerToggle = opened => event => {\r\n    const { type, key } = event;\r\n\r\n    if (type === 'keydown' && (key === 'Tab' || key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setDrawerOpened(opened);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar handleDrawerToggle={handleDrawerToggle} />\r\n      <Drawer\r\n        onClose={handleDrawerToggle(false)}\r\n        open={drawerOpened}\r\n      >\r\n        <StyledDrawerContainer\r\n          onClick={handleDrawerToggle(false)}\r\n          onKeyDown={handleDrawerToggle(false)}\r\n          role=\"presentation\"\r\n        >\r\n          <StyledLogo />\r\n          <AddBoard />\r\n          <StyledBoardList />\r\n        </StyledDrawerContainer>\r\n      </Drawer>\r\n      <StyledMain>\r\n        <Container maxWidth=\"xl\">\r\n          <Router>\r\n            <BoardIndex path=\"/\" />\r\n            <Board path=\"/:boardId\" />\r\n          </Router>\r\n          <StyledActions>\r\n            {isAuthenticated && isDataChanged &&\r\n              <StyledSaveFab\r\n                onClick={handleSaveDataClick}\r\n                aria-label=\"Save Data\"\r\n                color=\"secondary\"\r\n                data-cy=\"main-template-save-data-button\"\r\n              >\r\n                <Save />\r\n              </StyledSaveFab>\r\n            }\r\n            {isAuthenticated && currentBoardId &&\r\n              <Fab\r\n                onClick={handleAddWidgetClick}\r\n                aria-label=\"Add Widget\"\r\n                color=\"primary\"\r\n                data-cy=\"main-template-add-widget-button\"\r\n              >\r\n                <Add />\r\n              </Fab>\r\n            }\r\n          </StyledActions>\r\n        </Container>\r\n      </StyledMain>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title=\"Add new widget\"\r\n        data-cy=\"main-template-add-widget-dialog\"\r\n      >\r\n        <AddWidget\r\n          closeDialog={handleDialogClose}\r\n        />\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\n\r\nimport { fetchInitialData } from \"./actions/thunks\";\r\nimport { updateWidget, saveDataSuccess, loginSuccess } from './actions/actionCreators';\r\nimport { theme } from './theme';\r\n\r\nimport MainTemplate from './components/MainTemplate';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { isAuthenticated } from './utils/auth';\r\n\r\nfunction App() {\r\n  const appInitialized = useSelector(\r\n    ({ app }) => app.initialized\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      dispatch(loginSuccess());\r\n    }\r\n\r\n    dispatch(fetchInitialData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (appInitialized) {\r\n      const socket = new WebSocket(`ws://${window.location.hostname}:${process.env.REACT_APP_WS_PORT}`);\r\n      const handleMessageReceive = ({ data: dataJson }) => {\r\n        const { eventType, ...data } = JSON.parse(dataJson);\r\n\r\n        if (eventType === 'widget-update') {\r\n          dispatch(updateWidget(data));\r\n        } else if (eventType === 'notification-config-save') {\r\n          dispatch(saveDataSuccess());\r\n        }\r\n      };\r\n\r\n      socket.addEventListener('message', handleMessageReceive);\r\n\r\n      return () => {\r\n        socket.removeEventListener('message', handleMessageReceive);\r\n      };\r\n    }\r\n  }, [appInitialized, dispatch]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <CssBaseline />\r\n        {appInitialized &&\r\n          <MainTemplate />\r\n        }\r\n      </DndProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore() {\r\n  const middlewares = [thunkMiddleware];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewareEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n\r\n  const store = createStore(rootReducer, composedEnhancers);\r\n\r\n  return store;\r\n};\r\n"],"sourceRoot":""}