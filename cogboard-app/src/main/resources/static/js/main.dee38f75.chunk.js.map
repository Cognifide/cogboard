{"version":3,"sources":["assets/images/cogBoard-white.png","reducers/app/initialized.js","actions/types.js","reducers/app/dataFetching.js","reducers/app/isDataChanged.js","reducers/app/isDataSaving.js","reducers/app/loginErrorMessage.js","reducers/app/isAuthenticated.js","reducers/app/index.js","reducers/ui/currentBoard.js","reducers/ui/index.js","reducers/helpers.js","reducers/boards/boardsById.js","reducers/boards/allBoards.js","reducers/boards/index.js","reducers/widgets/widgetsById.js","reducers/widgets/allWidgets.js","reducers/widgets/index.js","reducers/notifications/notificationsById.js","reducers/notifications/allNotifications.js","reducers/notifications/index.js","reducers/index.js","actions/helpers.js","helpers/index.js","constants/index.js","actions/actionCreators.js","utils/auth.js","actions/thunks.js","theme.js","hooks/index.js","selectors/index.js","components/AppDialog.js","components/CancelButton.js","components/widgets/types/DefaultWidget.js","components/IframeEmbed.js","components/styled/index.js","components/widgets/types/ExampleWidget.js","components/widgets/types/JenkinsJobWidget.js","components/widgets/types/SonarQubeWidget.js","components/Loader/styled.js","components/Loader/index.js","components/widgets/types/ServiceCheckWidget.js","components/widgets/types/TextWidget/styled.js","components/widgets/types/TextWidget/index.js","components/widgets/types/BambooPlanWidget.js","components/widgets/types/WorldClockWidget/helpers.js","components/widgets/types/WorldClockWidget/styled.js","components/widgets/types/WorldClockWidget/index.js","components/widgets/types/CheckboxWidget/helpers.js","components/StatusIcon.js","components/widgets/types/CheckboxWidget/index.js","components/widgets/types/AemHealthcheckWidget/index.js","components/widgets/types/IframeEmbedWidget/helpers.js","components/widgets/index.js","components/widgets/types/IframeEmbedWidget/index.js","components/DropdownField.js","components/widgets/dialogFields/EndpointInput.js","components/widgets/dialogFields/NumberInput.js","components/widgets/dialogFields/TextInput.js","components/widgets/dialogFields/DisplayValueSelect.js","components/widgets/dialogFields/MultilineTextInput.js","components/widgets/dialogFields/CheckboxInput.js","components/widgets/dialogFields/index.js","components/widgets/dialogFields/SonarQubeMetricsInput.js","components/widgets/dialogFields/AemHealthcheckInput.js","components/WidgetTypeForm/index.js","components/WidgetTypeForm/helpers.js","components/TabPanel.js","components/WidgetForm/styled.js","components/WidgetForm/helpers.js","components/WidgetForm/index.js","components/AddWidget.js","components/Widget/styled.js","components/ErrorMessage.js","components/WidgetContent.js","components/LastUpdate/styled.js","components/LastUpdate/index.js","components/Widget/helpers.js","components/EditWidget.js","components/MoreMenu.js","components/ConfirmationDialog/styled.js","components/ConfirmationDialog/index.js","components/Widget/index.js","components/WidgetList.js","components/ErrorPage/styled.js","components/ErrorPage/index.js","components/NotFound.js","components/Board/styled.js","components/Board/helpers.js","components/Board/index.js","components/BoardIndex.js","components/BoardSwitcher/styled.js","components/BoardSwitcher/index.js","components/BoardSwitcher/hooks.js","components/BoardSwitcher/helpers.js","components/UserLogin/index.js","components/UserLogin/helpers.js","components/NavBar.js","components/ValidationMessages.js","components/BoardForm/styled.js","components/BoardForm/validators.js","components/BoardForm/index.js","components/AddBoard.js","components/IconVariant.js","components/SnackbarVariantContent/styled.js","components/SnackbarVariantContent/helpers.js","components/SnackbarVariantContent/index.js","components/SnackbarWithVariant.js","components/Notifications/index.js","components/EditBoard.js","components/BoardCard/styled.js","components/BoardCard/index.js","components/BoardList/styled.js","components/BoardList/index.js","components/Logo.js","components/MainTemplate/styled.js","components/MainTemplate/index.js","components/ServerErrorPage.js","App.js","serviceWorker.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","initialized","state","arguments","length","undefined","type","dataFetching","isDataChanged","isDataSaving","loginErrorMessage","_ref","payload","isAuthenticated","app","combineReducers","currentBoard","action","boardId","ui","reorderItems","items","sourceId","targetIndex","withoutSource","filter","itemId","concat","Object","toConsumableArray","slice","boardsById","boards","objectSpread","receiveData","_ref2","entries","reduce","newState","_ref3","_ref4","slicedToArray","boardProps","initBoardProps","_ref5","id","defineProperty","addBoard","_ref6","other","objectWithoutProperties","board","editBoard","_ref7","rest","map","_toPropertyKey","deleteBoard","_ref8","widgets","addWidget","_ref9","widgetId","deleteWidget","_ref10","sortedWidgets","sortWidgets","allBoards","reorderBoards","widgetsById","widget","isUpdating","requestUpdate","content","prevContent","updateWidget","editWidget","widgetsById_toPropertyKey","allWidgets","widgetIds","includes","deleteMultipleWidgets","notificationsById","assoc","pushNotification","dissoc","deleteNotification","allNotifications","append","without","notifications","rootReducer","prefix","setSize","factor","theme","spacing","splitPropsGroupName","propName","split","sortByKey","obj","key","asc","sort","keyA","keyB","localeCompare","newObj","value","capitalize","toArray","firstLetter","toUpperCase","join","parseYupErrors","errors","result","inner","forEach","error","path","message","push","URL","TEXT_SIZES","display","REQUEST_METHODS","ItemTypes","AEM_HEALTH_CHECKS","inactiveBundles","asyncIndexHealthCheck","codeCacheHealthCheck","DiskSpaceHealthCheck","logErrorHealthCheck","ObservationQueueLengthHealthCheck","resourceSearchPathErrorHealthCheck","requestsStatus","queriesStatus","queryTraversalLimitsBundle","securitychecks","slingJobs","slingDiscoveryOakSynchronizedClocks","systemchecks","ALL_SONARQUBE_METRICS","INITIAL_BOARD_PROPS","autoSwitch","switchInterval","NOTIFICATIONS","userRole","duration","loginSuccess","clearLoginErrorMessage","data","editData","saveDataSuccess","setCurrentBoard","notification","v4","hasToken","getToken","getUserRole","decode","name","localStorage","getItem","token","expTimestamp","exp","Date","now","isTokenExpired","checkResponseStatus","response","status","statusText","Promise","resolve","navigate","reject","Error","fetchData","url","method","postConfig","body","JSON","stringify","headers","Content-Type","fetch","then","json","createWidgetId","allIds","intRegex","RegExp","_sort","a","b","Number","match","lastId","intId","replace","mapFormValuesToWidgetData","values","columns","goNewLine","rows","config","withAuthentication","actionCallback","_len","args","Array","_key","dispatch","apply","logout","withDataChanged","_len2","_key2","fetchInitialData","console","login","credentials","setItem","setToken","removeItem","makeWidgetUpdaterThunk","beforeUpdateActionCreator","widgetDataCreator","getState","widgetData","_mapDataToState","title","disabled","generalData","prop","serverData","mapDataToState","addNewWidget","currentBoardId","saveWidget","removeWidget","reorderWidgets","reorderBoard","addNewBoard","saveBoard","deleteBoardWithWidgets","_getState2","firstBoardId","setWidgetState","saveData","_getState","createGradient","start","end","createMuiTheme","palette","background","default","paper","card","dragged","UNKNOWN","OK","IN_PROGRESS","UNSTABLE","ERROR_CONNECTION","ERROR_CONFIGURATION","ERROR","FAIL","snackbarVariant","info","blue","success","green","warning","amber","red","shape","borderRadius","typography","h3","fontWeight","letterSpacing","useToggle","initialState","_useState","useState","_useState2","isOpened","setOpened","useFormData","validationSchema","onChange","_useState3","_useState4","setValues","_useState5","submited","_useState6","setStatus","_useState7","_useState8","setErrors","validateField","fieldName","fieldsValues","validateAt","abortEarly","errorsTmp","catch","handleChange","event","_event$target","target","valueType","checkbox","checked","number","fieldValue","newValues","_splitPropsGroupName","_splitPropsGroupName2","groupName","groupValues","setFieldValue","handleSubmit","func","preventDefault","validate","getNotifications","getBoardsById","getNotificationId","_","notificationId","getIsAuthenticated","createSelector","getCurrentBoardId","getBoard","getBoardTitle","getSwitchInterval","getSwitcherBoards","getNotificationsById","createGetNotification","getAllNotifications","getBoards","StyledDialog","styled_base_browser_esm","props","react_default","createElement","Dialog","assign","classes","styles","StyledDialogContent","DialogContent","AppDialog","children","handleDialogClose","open","disableBackdropClick","stopEventPropagation","stopPropagation","onClick","onClose","onKeyDown","aria-labelledby","PaperProps","data-cy","DialogTitle","defaultProps","CancelButton","handleCancelClick","className","Button","variant","color","DefaultWidget","IframeEmbed","iframe","StyledTypography","Typography","FullWidthButtonOutlined","fullWidth","WidgetButton","WidgetIconButton","IconButton","Caption","paragraph","CaptionWithPointer","StyledFieldset","FormControl","StyledIframe","components_IframeEmbed","frameBorder","allowFullScreen","height","StyledFormControlForDropdown","StyledTitle","StyledFormControl","StyledPopoverText","ExampleWidget","serverTime","ts","toLocaleString","styled_Caption","JenkinsJobWidget","displayName","timestamp","branch","dur","Fragment","href","SonarQubeWidget","metrics","version","date","parse","metric","val","StyledCircularProgress","CircularProgress","Loader","text","ServiceCheckWidget","statusCode","statusMessage","expectedStatusCode","expectedResponseBody","anchorEl","setAnchorEl","errorStatus","statusCodeMessage","bodyMessage","popoverOpen","Boolean","components_Loader","size","currentTarget","Popover","anchorOrigin","vertical","horizontal","VerticalText","StyledPre","TextWidget","textSize","TextVariant","isVertical","BambooPlanWidget","lifeCycleState","getDateTime","timezone","format","moment","tz","GMT_TIMEZONES","allTimezones","names","duplicatedTimezones","gmtTimezones","parts","parseInt","c","splice","guess","getGmtTimezones","DATE_FORMATS","TIME_FORMATS","TimePre","DatePre","WorldClockWidget","timeZoneId","dateFormat","timeFormat","displayDate","displayTime","initTime","time","setTime","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","getNextStatus","statusArray","statusIndex","findIndex","element","nextStatusIndex","StatusIcon","iconComponents","Check","Close","IndeterminateCheckBoxOutlined","IconComponent","fontSize","CheckboxWidget","useSelector","useDispatch","aria-label","aria-checked","components_StatusIcon","AemHealthcheckWidget","healthChecks","Link","attachHttp","startsWith","widgetTypes","component","dialogFields","showUpdateTime","IframeEmbedWidget","styled_StyledIframe","DropdownField","label","dropdownItems","itemsUrl","initialLoaded","options","setOptions","loaded","setLoaded","init","Authorization","InputLabel","shrink","htmlFor","Select","input","Input","SelectDisplayProps","EndpointInput","components_DropdownField","endpoints","MenuItem","NumberInput","min","step","TextField","inputProps","InputLabelProps","margin","TextInput","DisplayValueSelect","item","MultilineTextInput","multiline","CheckboxInput","FormControlLabel","control","Checkbox","EndpointField","SchedulePeriod","initialValue","Path","UrlForContent","IdString","IdNumber","Key","SonarQubeMetricsInput","useTheme","inputId","multiple","renderValue","ListItemText","primary","AemHealthcheckInput","StatusCode","TimeZoneId","DateFormat","TimeFormat","DisplayDate","DisplayTime","Text","RequestBody","ResponseBody","TextSize","RequestMethod","TextOrientation","WidgetTypeForm","widgetType","dialogFieldNames","WidgetTypeForm_StyledFieldset","_dialogFields$fieldNa","DialogField","_dialogFields$fieldNa2","dialogFieldProps","valueRef","createValueRef","TabPanel","index","role","hidden","StyledNumberField","StyledTabPanel","StyledTabs","Tabs","renderWidgetTypesMenu","WidgetForm","renderActions","initialFormValues","boardColumns","_useFormData","tabValue","setTabValue","hasDialogFields","newValue","Tab","Box","justifyContent","max","Switch","components_WidgetTypeForm","StyledCancelButton","AddWidget","closeDialog","handleAddClick","components_WidgetForm","StyledCard","forwardRef","ref","isLoggedIn","isDragging","isOver","Card","mapStatusToColor","hover","propTypes","isRequired","bool","string","object","StyledCardHeader","CardHeader","StyledCardContent","CardContent","ErrorMessage","errorMessage","errorCause","WidgetContent","WidgetType","LastUpdate","lastUpdateTime","styled_StyledTypography","align","gutterBottom","EditWidget","widgetTypeData","handleSaveClick","EditWidget_StyledCancelButton","MoreMenu","handleMoreMenuClose","aria-controls","aria-haspopup","MoreVert","Menu","keepMounted","MenuList","StyledButtonBox","ConfirmationDialog","handleOk","labelOk","handleCancel","labelCancel","components_AppDialog","core","autoFocus","styled_StyledCancelButton","Widget","shallowEqual","_widgetData$config","_useToggle","_useToggle2","confirmationDialogOpened","openConfirmationDialog","closeConfirmationDialog","_useToggle3","_useToggle4","dialogOpened","openDialog","_useDrag","useDrag","canDrag","collect","monitor","_useDrag2","drag","_useDrop","useDrop","accept","sourceIndex","_ref$current$getBound","getBoundingClientRect","left","right","dropTargetMiddleX","dragSourceMouseX","getClientOffset","x","dropResult","getSourceClientOffset","_useDrop2","drop","handleEditClick","closeMenu","handleDeleteClick","avatar","Warning_default","titleTypographyProps","components_MoreMenu","components_ErrorMessage","components_WidgetContent","components_LastUpdate","renderCardContent","components_EditWidget","components_ConfirmationDialog","WidgetList","components_Widget","StyledLink","ErrorPage","tip","homeLink","to","NotFound","components_ErrorPage","StyledContainer","StyledNotFound","Board","components_WidgetList","IndexBoard","_useSelector","components_Board","StyledTimer","BoardSwitcher","_useBoardSwitching","switcherBoards","hasBoardsToSwitch","boardIndex","indexOf","isPlaying","setIsPlaying","timeElapsed","setTimeElapsed","_getPrevAndNextIndex","array","currentIndex","lastIndex","getPrevAndNextIndex","_getPrevAndNextIndex2","prevBoardIndex","nextBoardIndex","prevBoardTitle","nextBoardTitle","isDisable","switchBoard","useCallback","direction","currentBoardIndex","next","prev","interval","prevState","handleBoardsSwitch","handlePlayToggle","handleResetTimeElapsed","useBoardSwitching","timeLeft","previousSwitchInterval","usePrevious","timeInSec","seconds","minutes","Math","floor","leadingZero","formatTime","Tooltip","placement","edge","SkipPrevious","Pause","PlayArrow","SkipNext","UserLogin","errorMsg","handleLoginButtonClick","usernameField","document","getElementById","passwordField","username","password","getCredentials","handleLoginOnEnterPress","AccountCircle","PowerSettingsNew","onKeyPress","StyledBoardSwitcher","StyledAppBar","AppBar","StyledToolbar","Toolbar","NavBar","handleDrawerToggle","position","Container","maxWidth","disableGutters","DashboardRounded","components_UserLogin","ValidationMessages","messages","others","StyledValidationMessages","MAX_TITLE_LENGTH","COLUMNS_NUMBER","MIN_SWITCH_INTERVAL","uniqueTitleTestCreator","params","exclusive","test","every","BoardForm","onSubmit","trim","required","boolean","when","is","otherwise","notRequired","createValidationSchema","handleNumberInput","String","noValidate","styled_StyledFieldset","helperText","dialogFields_NumberInput","onInput","FormHelperTextProps","AddBoard","Add","components_BoardForm","AddBoard_StyledCancelButton","IconVariant","iconByVariant","CheckCircle","Warning","Info","Icon","StyledSnackbarContent","SnackbarContent","mapVariantToColor","SnackbarVariantContent","alignItems","components_IconVariant","marginLeft","SnackbarWithVariant","React","memo","dataCy","getNotification","useMemo","closeSnackbar","Snackbar_default","reason","onExited","autoHideDuration","disableWindowBlurListener","components_SnackbarVariantContent","Notifications","components_SnackbarWithVariant","EditBoard","EditBoard_StyledCancelButton","StyledCardActions","CardActions","BoardCard","boardData","top","bottom","dropTargetMiddleY","dragSourceMouseY","y","styled_StyledCard","Edit","Delete","components_EditBoard","StyledBoardCard","BoardList","Logo","src","logo","alt","StyledActions","StyledSaveFab","Fab","StyledBoardList","StyledMain","StyledLogo","StyledDrawerContainer","MainTemplate","drawerOpened","setDrawerOpened","opened","components_NavBar","Drawer","components_AddBoard","router_es","BoardIndex","Save","components_Notifications","components_AddWidget","ServerErrorPage","App","appInitialized","socket","WebSocket","window","location","hostname","process","handleMessageReceive","dataJson","_JSON$parse","eventType","addEventListener","removeEventListener","ThemeProvider","esm","backend","HTML5Backend","CssBaseline","components_ServerErrorPage","components_MainTemplate","store","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dee38f75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cogBoard-white.cd833032.png\";","import { RECEIVE_DATA } from '../../actions/types';\n\nconst initialized = (state = false, { type }) => {\n  return type === RECEIVE_DATA ? true : state;\n};\n\nexport default initialized;\n","export const INIT_BOARD_PROPS = 'INIT_BOARD_PROPS';\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\nexport const REQUEST_UPDATE = 'REQUEST_UPDATE';\nexport const UPDATE_WIDGET = 'UPDATE_WIDGET';\nexport const ADD_BOARD = 'ADD_BOARD';\nexport const EDIT_BOARD = 'EDIT_BOARD';\nexport const DELETE_BOARD = 'DELETE_BOARD';\nexport const REORDER_BOARDS = 'REORDER_BOARDS';\nexport const SET_CURRENT_BOARD = 'SET_CURRENT_BOARD';\nexport const ADD_WIDGET = 'ADD_WIDGET';\nexport const EDIT_WIDGET = 'EDIT_WIDGET';\nexport const DELETE_WIDGET = 'DELETE_WIDGET';\nexport const DELETE_MULTIPLE_WIDGETS = 'DELETE_MULTIPLE_WIDGETS';\nexport const SORT_WIDGETS = 'SORT_WIDGETS';\nexport const DATA_CHANGED = 'DATA_CHANGED';\nexport const SAVE_DATA_START = 'SAVE_DATA_START';\nexport const SAVE_DATA_SUCCESS = 'SAVE_DATA_SUCCESS';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const CLEAR_LOGIN_ERROR_MESSAGE = 'CLEAR_LOGIN_ERROR_MESSAGE';\nexport const LOGOUT = 'LOGOUT';\nexport const PUSH_NOTIFICATION = 'PUSH_NOTIFICATION';\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\n","import { REQUEST_DATA } from '../../actions/types';\n\nconst dataFetching = (state = false, { type }) => {\n  return type === REQUEST_DATA ? true : state;\n};\n\nexport default dataFetching;\n","import { DATA_CHANGED, SAVE_DATA_SUCCESS } from '../../actions/types';\n\nconst isDataChanged = (state = false, { type }) => {\n  switch (type) {\n    case DATA_CHANGED:\n      return true;\n    case SAVE_DATA_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isDataChanged;\n","import { SAVE_DATA_START, SAVE_DATA_SUCCESS } from '../../actions/types';\n\nconst isDataSaving = (state = false, { type }) => {\n  switch (type) {\n    case SAVE_DATA_START:\n      return true;\n    case SAVE_DATA_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isDataSaving;\n","import {\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  CLEAR_LOGIN_ERROR_MESSAGE,\n  LOGOUT\n} from '../../actions/types';\n\nconst loginErrorMessage = (state = '', { type, payload }) => {\n  switch (type) {\n    case LOGIN_FAILURE:\n      return payload;\n    case LOGIN_SUCCESS:\n    case CLEAR_LOGIN_ERROR_MESSAGE:\n    case LOGOUT:\n      return '';\n    default:\n      return state;\n  }\n};\n\nexport default loginErrorMessage;\n","import { LOGIN_SUCCESS, LOGOUT } from '../../actions/types';\n\nconst isAuthenticated = (state = false, { type }) => {\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return true;\n    case LOGOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isAuthenticated;\n","import { combineReducers } from 'redux';\n\nimport initialized from './initialized';\nimport dataFetching from './dataFetching';\nimport isDataChanged from './isDataChanged';\nimport isDataSaving from './isDataSaving';\nimport loginErrorMessage from './loginErrorMessage';\nimport isAuthenticated from './isAuthenticated';\n\nconst app = combineReducers({\n  initialized,\n  dataFetching,\n  isDataChanged,\n  isDataSaving,\n  loginErrorMessage,\n  isAuthenticated\n});\n\nexport default app;\n","import { SET_CURRENT_BOARD } from '../../actions/types';\n\nconst currentBoard = (state = null, action) => {\n  const { type, payload: boardId } = action;\n\n  switch (type) {\n    case SET_CURRENT_BOARD:\n      return boardId;\n    default:\n      return state;\n  }\n};\n\nexport default currentBoard;\n","import { combineReducers } from 'redux';\n\nimport currentBoard from './currentBoard';\n\nconst ui = combineReducers({\n  currentBoard\n});\n\nexport default ui;\n","export const reorderItems = (items, sourceId, targetIndex) => {\n  const withoutSource = items.filter(itemId => itemId !== sourceId);\n  const sortedItems = [\n    ...withoutSource.slice(0, targetIndex),\n    sourceId,\n    ...withoutSource.slice(targetIndex)\n  ];\n\n  return sortedItems;\n};\n","import {\n  RECEIVE_DATA,\n  ADD_BOARD,\n  EDIT_BOARD,\n  DELETE_BOARD,\n  ADD_WIDGET,\n  DELETE_WIDGET,\n  SORT_WIDGETS,\n  INIT_BOARD_PROPS\n} from '../../actions/types';\n\nimport { reorderItems } from '../helpers';\n\nconst receiveData = (state, { payload }) => {\n  const {\n    boards: { boardsById }\n  } = payload;\n\n  return { ...state, ...boardsById };\n};\n\nconst initBoardProps = (state, { payload }) => {\n  return Object.entries(state).reduce((newState, [boardId, boardProps]) => {\n    newState[boardId] = { ...payload, ...boardProps };\n\n    return newState;\n  }, {});\n};\n\nconst addBoard = (state, { payload }) => {\n  const { id } = payload;\n\n  return { ...state, [id]: payload };\n};\n\nconst editBoard = (state, { payload }) => {\n  const { id, ...other } = payload;\n  const board = state[id];\n\n  return {\n    ...state,\n    [id]: { ...board, ...other }\n  };\n};\n\nconst deleteBoard = (state, { payload: id }) => {\n  const { [id]: deletedBoard, ...rest } = state;\n\n  return { ...rest };\n};\n\nconst addWidget = (state, { payload }) => {\n  const { id, boardId } = payload;\n  const board = state[boardId];\n  const { widgets } = board;\n\n  return {\n    ...state,\n    [boardId]: {\n      ...board,\n      widgets: [...widgets, id]\n    }\n  };\n};\n\nconst deleteWidget = (state, { payload }) => {\n  const { id, boardId } = payload;\n  const board = state[boardId];\n  const { widgets } = board;\n\n  return {\n    ...state,\n    [boardId]: {\n      ...board,\n      widgets: widgets.filter(widgetId => widgetId !== id)\n    }\n  };\n};\n\nconst sortWidgets = (state, { payload }) => {\n  const { sourceId, targetIndex, boardId } = payload;\n  const board = state[boardId];\n  const { widgets } = board;\n  const sortedWidgets = reorderItems(widgets, sourceId, targetIndex);\n\n  return {\n    ...state,\n    [boardId]: {\n      ...board,\n      widgets: sortedWidgets\n    }\n  };\n};\n\nconst boardsById = (state = {}, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case RECEIVE_DATA:\n      return receiveData(state, action);\n    case INIT_BOARD_PROPS:\n      return initBoardProps(state, action);\n    case ADD_BOARD:\n      return addBoard(state, action);\n    case EDIT_BOARD:\n      return editBoard(state, action);\n    case DELETE_BOARD:\n      return deleteBoard(state, action);\n    case ADD_WIDGET:\n      return addWidget(state, action);\n    case DELETE_WIDGET:\n      return deleteWidget(state, action);\n    case SORT_WIDGETS:\n      return sortWidgets(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import {\n  RECEIVE_DATA,\n  DELETE_BOARD,\n  ADD_BOARD,\n  REORDER_BOARDS\n} from '../../actions/types';\nimport { reorderItems } from '../helpers';\n\nconst receiveData = (state, { payload }) => {\n  const {\n    boards: { allBoards }\n  } = payload;\n\n  return [...state, ...allBoards];\n};\n\nconst addBoard = (state, { payload }) => {\n  const { id } = payload;\n\n  return [...state, id];\n};\n\nconst deleteBoard = (state, { payload: id }) =>\n  state.filter(boardId => boardId !== id);\n\nconst reorderBoards = (state, { payload }) => {\n  const { sourceId, targetIndex } = payload;\n  const boards = [...state];\n  const sortedBoards = reorderItems(boards, sourceId, targetIndex);\n\n  return sortedBoards;\n};\n\nconst allBoards = (state = [], action) => {\n  const { type } = action;\n\n  switch (type) {\n    case RECEIVE_DATA:\n      return receiveData(state, action);\n    case ADD_BOARD:\n      return addBoard(state, action);\n    case DELETE_BOARD:\n      return deleteBoard(state, action);\n    case REORDER_BOARDS:\n      return reorderBoards(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default allBoards;\n","import { combineReducers } from 'redux';\n\nimport boardsById from './boardsById';\nimport allBoards from './allBoards';\n\nconst boards = combineReducers({\n  boardsById,\n  allBoards\n});\n\nexport default boards;\n","import {\n  RECEIVE_DATA,\n  REQUEST_UPDATE,\n  UPDATE_WIDGET,\n  EDIT_WIDGET,\n  ADD_WIDGET,\n  DELETE_WIDGET\n} from '../../actions/types';\n\nconst requestUpdate = (state, { payload: id }) => {\n  const widget = state[id];\n\n  return {\n    ...state,\n    [id]: { ...widget, isUpdating: true }\n  };\n};\n\nconst receiveData = (state, action) => {\n  const { payload } = action;\n  const {\n    widgets: { widgetsById }\n  } = payload;\n\n  return { ...state, ...widgetsById };\n};\n\nconst updateWidget = (state, { payload }) => {\n  const { id, content, ...other } = payload;\n  const widget = state[id];\n  const prevContent = widget.content;\n\n  return {\n    ...state,\n    [id]: {\n      ...widget,\n      ...other,\n      content: { ...prevContent, ...content },\n      isUpdating: false\n    }\n  };\n};\n\nconst editWidget = (state, { payload }) => {\n  const { id, content, ...other } = payload;\n  const widget = state[id];\n  const prevContent = widget.content;\n\n  return {\n    ...state,\n    [id]: {\n      ...widget,\n      ...other,\n      content: { ...prevContent, ...content }\n    }\n  };\n};\n\nconst addWidget = (state, { payload }) => {\n  const { id, boardId, ...other } = payload;\n\n  return {\n    ...state,\n    [id]: { id, ...other }\n  };\n};\n\nconst deleteWidget = (state, { payload }) => {\n  const { id } = payload;\n  const { [id]: widgetId, ...rest } = state;\n\n  return rest;\n};\n\nconst widgetsById = (state = {}, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case REQUEST_UPDATE:\n      return requestUpdate(state, action);\n    case RECEIVE_DATA:\n      return receiveData(state, action);\n    case UPDATE_WIDGET:\n      return updateWidget(state, action);\n    case EDIT_WIDGET:\n      return editWidget(state, action);\n    case ADD_WIDGET:\n      return addWidget(state, action);\n    case DELETE_WIDGET:\n      return deleteWidget(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default widgetsById;\n","import {\n  RECEIVE_DATA,\n  ADD_WIDGET,\n  DELETE_WIDGET,\n  DELETE_MULTIPLE_WIDGETS\n} from '../../actions/types';\n\nconst receiveData = (state, { payload }) => {\n  const {\n    widgets: { allWidgets }\n  } = payload;\n\n  return [...state, ...allWidgets];\n};\n\nconst addWidget = (state, { payload }) => {\n  const { id } = payload;\n\n  return [...state, id];\n};\n\nconst deleteWidget = (state, { payload }) => {\n  const { id } = payload;\n\n  return state.filter(widgetId => widgetId !== id);\n};\n\nconst deleteMultipleWidgets = (state, { payload }) => {\n  const { widgetIds } = payload;\n\n  return state.filter(widgetId => !widgetIds.includes(widgetId));\n};\n\nconst allWidgets = (state = [], action) => {\n  const { type } = action;\n\n  switch (type) {\n    case RECEIVE_DATA:\n      return receiveData(state, action);\n    case ADD_WIDGET:\n      return addWidget(state, action);\n    case DELETE_WIDGET:\n      return deleteWidget(state, action);\n    case DELETE_MULTIPLE_WIDGETS:\n      return deleteMultipleWidgets(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default allWidgets;\n","import { combineReducers } from 'redux';\n\nimport widgetsById from './widgetsById';\nimport allWidgets from './allWidgets';\n\nconst widgets = combineReducers({\n  widgetsById,\n  allWidgets\n});\n\nexport default widgets;\n","import { PUSH_NOTIFICATION, DELETE_NOTIFICATION } from '../../actions/types';\nimport { assoc, dissoc } from 'ramda';\n\nconst pushNotification = (state, payload) => {\n  const { id } = payload;\n\n  return assoc(id, payload, state);\n};\n\nconst deleteNotification = (state, payload) => {\n  const id = payload;\n\n  return dissoc(id, state);\n};\n\nconst notificationsById = (state = {}, { type, payload }) => {\n  switch (type) {\n    case PUSH_NOTIFICATION:\n      return pushNotification(state, payload);\n    case DELETE_NOTIFICATION:\n      return deleteNotification(state, payload);\n    default:\n      return state;\n  }\n};\n\nexport default notificationsById;\n","import { append, without } from 'ramda';\n\nimport { PUSH_NOTIFICATION, DELETE_NOTIFICATION } from '../../actions/types';\n\nconst pushNotification = (state, { id }) => append(id, state);\n\nconst deleteNotification = (state, id) => without([id], state);\n\nconst allNotifications = (state = [], { type, payload }) => {\n  switch (type) {\n    case PUSH_NOTIFICATION:\n      return pushNotification(state, payload);\n    case DELETE_NOTIFICATION:\n      return deleteNotification(state, payload);\n    default:\n      return state;\n  }\n};\n\nexport default allNotifications;\n","import { combineReducers } from 'redux';\n\nimport notificationsById from './notificationsById';\nimport allNotifications from './allNotifications';\n\nconst notifications = combineReducers({\n  notificationsById,\n  allNotifications\n});\n\nexport default notifications;\n","import { combineReducers } from 'redux';\n\nimport app from './app';\nimport ui from './ui';\nimport boards from './boards';\nimport widgets from './widgets';\nimport notifications from './notifications';\n\nconst rootReducer = combineReducers({\n  app,\n  ui,\n  boards,\n  widgets,\n  notifications\n});\n\nexport default rootReducer;\n","import { dataChanged } from './actionCreators';\nimport { logout } from './thunks';\nimport { isAuthenticated } from '../utils/auth';\nimport { navigate } from '@reach/router';\n\nconst checkResponseStatus = response => {\n  const { status, statusText } = response;\n\n  if (status >= 200 && status < 300) {\n    return Promise.resolve(response);\n  } else if (status >= 500) {\n    navigate('/error-page');\n    return Promise.reject(new Error(statusText));\n  } else {\n    return Promise.reject(new Error(statusText));\n  }\n};\n\nexport const fetchData = (url, method = 'GET', data = {}, token = '') => {\n  const postConfig = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  if (token) {\n    postConfig.headers['Authorization'] = token;\n  }\n  const init = method !== 'GET' ? postConfig : {};\n\n  return fetch(url, init)\n    .then(checkResponseStatus)\n    .then(response => response.json());\n};\n\nconst makeIdCreator = prefix => allIds => {\n  const intRegex = new RegExp(/[0-9]\\d*$/, 'g');\n  const [lastId] = [...allIds].sort(\n    (a, b) => Number(b.match(intRegex)) - Number(a.match(intRegex))\n  );\n\n  if (lastId) {\n    const intId = Number(lastId.match(intRegex));\n\n    return lastId.replace(intRegex, intId + 1);\n  } else {\n    return `${prefix}1`;\n  }\n};\n\nconst createWidgetId = makeIdCreator('widget');\n\nconst mapFormValuesToWidgetData = values => {\n  const { columns, goNewLine, rows, ...other } = values;\n\n  return {\n    ...other,\n    config: {\n      columns,\n      goNewLine,\n      rows\n    }\n  };\n};\n\nexport const createNewWidgetData = ({\n  values,\n  allWidgets,\n  currentBoardId\n}) => ({\n  boardId: currentBoardId,\n  id: createWidgetId(allWidgets),\n  status: 'UNKNOWN',\n  ...mapFormValuesToWidgetData(values)\n});\n\nexport const createEditWidgetData = ({ id, values }) => ({\n  id,\n  ...mapFormValuesToWidgetData(values)\n});\n\nexport const mapDataToState = data => {\n  const { id, title, content, type, disabled, config, ...other } = data;\n\n  const newWidgetProps = ['status', 'boardId'];\n  const generalData = { id, title, config, type, disabled, content };\n\n  newWidgetProps.forEach(prop => {\n    if (data[prop]) {\n      generalData[prop] = data[prop];\n    }\n  });\n\n  return {\n    generalData,\n    serverData: { id, type, ...other }\n  };\n};\n\nexport const withAuthentication = actionCallback => (...args) => dispatch => {\n  if (!isAuthenticated()) {\n    dispatch(logout());\n\n    return;\n  }\n\n  dispatch(actionCallback.apply(null, args));\n};\n\nexport const withDataChanged = actionCallback => (...args) => dispatch => {\n  dispatch(actionCallback.apply(null, args));\n  dispatch(dataChanged());\n};\n","export const setSize = factor => ({ theme }) => `${theme.spacing(factor)}px`;\n\nexport const splitPropsGroupName = propName => {\n  return propName.includes('.') ? propName.split('.') : [undefined, propName];\n};\n\nexport const sortByKey = (obj, key, asc = true) =>\n  Object.entries(obj)\n    .sort(([, { [key]: keyA }], [, { [key]: keyB }]) =>\n      asc ? keyA.localeCompare(keyB) : keyB.localeCompare(keyA)\n    )\n    .reduce((newObj, [key, value]) => {\n      newObj[key] = value;\n\n      return newObj;\n    }, {});\n\nexport const capitalize = ([firstLetter, ...rest]) =>\n  [firstLetter.toUpperCase(), ...rest].join('');\n\nexport const parseYupErrors = errors => {\n  let result = {};\n  errors.inner.forEach(error => {\n    const { path, message } = error;\n\n    if (path in result) {\n      result[path].push(message);\n    } else {\n      result[path] = [message];\n    }\n  });\n\n  return result;\n};\n\nexport const trimLeadingZeros = inputValue => String(parseInt(inputValue));\n","import { capitalize } from '../helpers';\n\nexport const URL = {\n  LOAD_DATA: '/api/config',\n  SAVE_DATA: '/api/config/save',\n  UPDATE_WIDGET: '/api/widget/update',\n  DELETE_WIDGET: '/api/widget/delete',\n  LOGIN: '/api/login'\n};\nexport const COLUMNS_MIN = 4;\nexport const COLUMNS_DEFAULT = 8;\nexport const COLUMNS_MAX = 20;\nexport const ROWS_MIN = 1;\nexport const BOARD_TITLE_LENGTH_LIMIT = 25;\nexport const SWITCH_INTERVAL_MIN = 3;\nexport const WIDGET_COLUMNS_MIN = 1;\nexport const WIDGET_ROWS_MIN = 1;\nexport const WIDGET_ROWS_MAX = 4;\nexport const TEXT_SIZES = [\n  {\n    display: 'XXL',\n    value: 'h2'\n  },\n  {\n    display: 'XL',\n    value: 'h3'\n  },\n  {\n    display: 'L',\n    value: 'h4'\n  },\n  {\n    display: 'M',\n    value: 'h5'\n  },\n  {\n    display: 'S',\n    value: 'h6'\n  },\n  {\n    display: 'XS',\n    value: 'subtitle1'\n  },\n  {\n    display: 'XXS',\n    value: 'subtitle2'\n  }\n];\n\nexport const REQUEST_METHODS = [\n  {\n    display: 'GET',\n    value: 'get'\n  },\n  {\n    display: 'PUT',\n    value: 'put'\n  },\n  {\n    display: 'POST',\n    value: 'post'\n  },\n  {\n    display: 'DELETE',\n    value: 'delete'\n  }\n];\n\nexport const ItemTypes = {\n  WIDGET: 'widget',\n  BOARD: 'board'\n};\n\nexport const AEM_HEALTH_CHECKS = {\n  inactiveBundles: 'Active Bundles',\n  asyncIndexHealthCheck: 'Async Index Health Check',\n  codeCacheHealthCheck: 'Code Cache Health Check',\n  DiskSpaceHealthCheck: 'Disk Space',\n  logErrorHealthCheck: 'Log Errors',\n  ObservationQueueLengthHealthCheck: 'Observation Queue Length',\n  resourceSearchPathErrorHealthCheck: 'Resource Search Path Errors',\n  requestsStatus: 'Request Performance',\n  queriesStatus: 'Query Performance',\n  queryTraversalLimitsBundle: 'Query Traversal Limits',\n  securitychecks: 'Security Checks',\n  slingJobs: 'Sling Jobs',\n  slingDiscoveryOakSynchronizedClocks: 'Synchronized Clocks',\n  systemchecks: 'System Maintenance'\n};\n\nexport const ALL_SONARQUBE_METRICS = [\n  'blocker_violations',\n  'critical_violations',\n  'major_violations',\n  'minor_violations',\n  'info_violations',\n  'bugs',\n  'code_smells',\n  'vulnerabilities'\n];\n\n// props will be added to old configs on app init\n\nexport const INITIAL_BOARD_PROPS = {\n  autoSwitch: false,\n  switchInterval: 0\n};\n\nexport const NOTIFICATIONS = {\n  LOGIN: userRole => ({\n    type: 'success',\n    message: `Logged in as ${userRole}`,\n    duration: 3000\n  }),\n  LOGOUT: userRole => ({\n    type: 'info',\n    message: `${capitalize(userRole)} logged out`,\n    duration: 3000\n  })\n};\n","import { v4 } from 'uuid';\nimport {\n  REQUEST_DATA,\n  RECEIVE_DATA,\n  REQUEST_UPDATE,\n  ADD_BOARD,\n  EDIT_BOARD,\n  DELETE_BOARD,\n  SET_CURRENT_BOARD,\n  UPDATE_WIDGET,\n  EDIT_WIDGET,\n  ADD_WIDGET,\n  DELETE_WIDGET,\n  DELETE_MULTIPLE_WIDGETS,\n  SORT_WIDGETS,\n  REORDER_BOARDS,\n  DATA_CHANGED,\n  SAVE_DATA_START,\n  SAVE_DATA_SUCCESS,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  CLEAR_LOGIN_ERROR_MESSAGE,\n  LOGOUT,\n  INIT_BOARD_PROPS,\n  PUSH_NOTIFICATION,\n  DELETE_NOTIFICATION\n} from './types';\nimport { INITIAL_BOARD_PROPS } from '../constants';\n\nexport const requestData = () => ({\n  type: REQUEST_DATA\n});\n\nexport const loginSuccess = () => ({\n  type: LOGIN_SUCCESS\n});\n\nexport const loginFailure = data => ({\n  type: LOGIN_FAILURE,\n  payload: data\n});\n\nexport const clearLoginErrorMessage = () => ({\n  type: CLEAR_LOGIN_ERROR_MESSAGE\n});\n\nexport const logout = () => ({\n  type: LOGOUT\n});\n\nexport const receiveData = state => ({\n  type: RECEIVE_DATA,\n  payload: state\n});\n\nexport const requestUpdate = id => ({\n  type: REQUEST_UPDATE,\n  payload: id\n});\n\nexport const updateWidget = data => ({\n  type: UPDATE_WIDGET,\n  payload: data\n});\n\nexport const addBoard = data => ({\n  type: ADD_BOARD,\n  payload: {\n    id: `board-${v4()}`,\n    theme: 'default',\n    widgets: [],\n    ...data\n  }\n});\n\nexport const deleteBoard = id => ({\n  type: DELETE_BOARD,\n  payload: id\n});\n\nexport const editBoard = editData => ({\n  type: EDIT_BOARD,\n  payload: editData\n});\n\nexport const reorderBoards = (sourceId, targetIndex) => ({\n  type: REORDER_BOARDS,\n  payload: { sourceId, targetIndex }\n});\n\nexport const editWidget = editData => ({\n  type: EDIT_WIDGET,\n  payload: editData\n});\n\nexport const addWidget = widgetData => ({\n  type: ADD_WIDGET,\n  payload: widgetData\n});\n\nexport const deleteWidget = (id, boardId) => ({\n  type: DELETE_WIDGET,\n  payload: { id, boardId }\n});\n\nexport const deleteMultipleWidgets = (widgetIds, boardId = '') => ({\n  type: DELETE_MULTIPLE_WIDGETS,\n  payload: { widgetIds, boardId }\n});\n\nexport const sortWidgets = payload => ({\n  type: SORT_WIDGETS,\n  payload\n});\n\nexport const dataChanged = () => ({\n  type: DATA_CHANGED\n});\n\nexport const saveDataStart = () => ({\n  type: SAVE_DATA_START\n});\n\nexport const saveDataSuccess = () => ({\n  type: SAVE_DATA_SUCCESS\n});\n\nexport const setCurrentBoard = id => ({\n  type: SET_CURRENT_BOARD,\n  payload: id\n});\n\nexport const initBoardProps = () => ({\n  type: INIT_BOARD_PROPS,\n  payload: { ...INITIAL_BOARD_PROPS }\n});\n\nexport const pushNotification = notification => ({\n  type: PUSH_NOTIFICATION,\n  payload: {\n    id: v4(),\n    ...notification\n  }\n});\n\nexport const deleteNotification = id => ({\n  type: DELETE_NOTIFICATION,\n  payload: id\n});\n","import decode from 'jwt-decode';\n\nconst tokenName = 'token';\n\nconst hasToken = () => !!getToken();\n\nconst isTokenExpired = token => {\n  const expTimestamp = decode(token).exp * 1000;\n\n  return Date.now() > expTimestamp;\n};\n\nexport const getUserRole = () =>\n  hasToken() ? decode(getToken()).name : undefined;\n\nexport const getToken = () => localStorage.getItem(tokenName);\n\nexport const setToken = token => localStorage.setItem(tokenName, token);\n\nexport const removeToken = () => localStorage.removeItem(tokenName);\n\nexport const isAuthenticated = () => hasToken() && !isTokenExpired(getToken());\n","import { navigate } from '@reach/router';\n\nimport {\n  requestData,\n  receiveData,\n  requestUpdate,\n  addBoard,\n  editBoard,\n  deleteBoard,\n  reorderBoards,\n  setCurrentBoard,\n  updateWidget,\n  addWidget,\n  editWidget,\n  deleteMultipleWidgets,\n  sortWidgets,\n  dataChanged,\n  saveDataStart,\n  deleteWidget,\n  loginSuccess,\n  loginFailure,\n  logout as logoutUser,\n  initBoardProps,\n  pushNotification\n} from './actionCreators';\nimport {\n  fetchData,\n  createNewWidgetData,\n  createEditWidgetData,\n  mapDataToState,\n  withAuthentication,\n  withDataChanged\n} from './helpers';\nimport { URL, NOTIFICATIONS } from '../constants';\nimport { setToken, removeToken, getToken, getUserRole } from '../utils/auth';\n\nexport const fetchInitialData = () => dispatch => {\n  dispatch(requestData());\n\n  return fetchData(URL.LOAD_DATA).then(data => {\n    dispatch(receiveData(data));\n    dispatch(initBoardProps());\n  }, console.error);\n};\n\nexport const saveDataThunk = () => (dispatch, getState) => {\n  const { boards, widgets } = getState();\n  const data = { boards, widgets };\n  const token = getToken();\n\n  return fetchData(URL.SAVE_DATA, 'POST', data, token).then(\n    () => dispatch(saveDataStart()),\n    console.error\n  );\n};\n\nexport const login = credentials => dispatch => {\n  return fetchData(URL.LOGIN, 'POST', credentials).then(\n    ({ token }) => {\n      setToken(token);\n      dispatch(loginSuccess());\n      dispatch(pushNotification(NOTIFICATIONS.LOGIN(getUserRole())));\n    },\n    ({ message }) => dispatch(loginFailure(message))\n  );\n};\n\nexport const logout = () => dispatch => {\n  const userRole = getUserRole();\n\n  removeToken();\n  dispatch(logoutUser());\n  dispatch(pushNotification(NOTIFICATIONS.LOGOUT(userRole)));\n};\n\nconst deleteBoardWithWidgetsThunk = id => (dispatch, getState) => {\n  const { ui, boards } = getState();\n  const { widgets } = boards.boardsById[id];\n  const { currentBoard } = ui;\n\n  dispatch(deleteBoard(id));\n\n  const [firstBoardId] = getState().boards.allBoards;\n\n  if (id === currentBoard) {\n    dispatch(setCurrentBoard(firstBoardId || null));\n    navigate(firstBoardId || '/');\n  }\n\n  dispatch(deleteMultipleWidgets(widgets));\n};\n\nconst makeWidgetUpdaterThunk = (\n  beforeUpdateActionCreator,\n  widgetDataCreator\n) => data => (dispatch, getState) => {\n  const allWidgets = getState().widgets.allWidgets;\n  const token = getToken();\n  const widgetData = widgetDataCreator({ ...data, allWidgets });\n  const { id } = widgetData;\n  const { generalData, serverData } = mapDataToState(widgetData);\n\n  dispatch(beforeUpdateActionCreator(generalData));\n  dispatch(dataChanged());\n  dispatch(requestUpdate(id));\n\n  return fetchData(URL.UPDATE_WIDGET, 'POST', serverData, token).then(\n    () => dispatch(updateWidget(serverData)),\n    console.error\n  );\n};\n\nconst removeWidgetThunk = id => (dispatch, getState) => {\n  const { currentBoard: boardId } = getState().ui;\n  const token = getToken();\n\n  return fetchData(URL.DELETE_WIDGET, 'POST', { id }, token).then(\n    () => dispatch(deleteWidget(id, boardId)),\n    console.error\n  );\n};\n\nconst reorderWidgetsThunk = (sourceId, targetIndex) => (dispatch, getState) => {\n  const { currentBoard: boardId } = getState().ui;\n\n  dispatch(sortWidgets({ sourceId, targetIndex, boardId }));\n};\n\nexport const addNewWidget = withAuthentication(\n  makeWidgetUpdaterThunk(addWidget, createNewWidgetData)\n);\nexport const saveWidget = withAuthentication(\n  makeWidgetUpdaterThunk(editWidget, createEditWidgetData)\n);\nexport const removeWidget = withAuthentication(\n  withDataChanged(removeWidgetThunk)\n);\nexport const reorderWidgets = withDataChanged(reorderWidgetsThunk);\nexport const reorderBoard = withDataChanged(reorderBoards);\nexport const addNewBoard = withDataChanged(addBoard);\nexport const saveBoard = withDataChanged(editBoard);\nexport const deleteBoardWithWidgets = withDataChanged(\n  deleteBoardWithWidgetsThunk\n);\nexport const setWidgetState = withDataChanged(editWidget);\nexport const saveData = withAuthentication(saveDataThunk);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { amber, blue, green, red } from '@material-ui/core/colors/index';\n\nconst gradientAngle = 45;\n\nconst createGradient = (start, end) =>\n  `linear-gradient(${gradientAngle}deg, ${start}, ${end})`;\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#211F39',\n      paper: '#26243E',\n      board: {\n        card: '#5c6bc0',\n        dragged: '#353b61'\n      }\n    },\n    status: {\n      UNKNOWN: '#26243E',\n      OK: createGradient('#519657', '#81c784'),\n      IN_PROGRESS: createGradient('#009faf', '#4dd0e1'),\n      UNSTABLE: createGradient('#c75b39', '#ff8a65'),\n      ERROR_CONNECTION: createGradient('#af4448', '#e57373'),\n      ERROR_CONFIGURATION: createGradient('#af4448', '#e57373'),\n      ERROR: createGradient('#af4448', '#e57373'),\n      FAIL: createGradient('#af4448', '#e57373')\n    },\n    snackbarVariant: {\n      info: blue[100],\n      success: green[300],\n      warning: amber[700],\n      error: red[800]\n    }\n  },\n  shape: {\n    borderRadius: 10\n  },\n  typography: {\n    h3: {\n      fontWeight: 500,\n      letterSpacing: 2\n    }\n  }\n});\n","import { useEffect, useRef, useState } from 'react';\n\nimport { splitPropsGroupName, parseYupErrors } from '../helpers';\n\nexport const useToggle = (initialState = false) => {\n  const [isOpened, setOpened] = useState(initialState);\n\n  const handleOpen = () => setOpened(true);\n  const handleClose = () => setOpened(false);\n\n  return [isOpened, handleOpen, handleClose];\n};\n\nexport const useFormData = (data, validationSchema = null, onChange = null) => {\n  const [values, setValues] = useState(data);\n  const [status, setStatus] = useState({\n    submited: false,\n    onChange: onChange\n  });\n  const [errors, setErrors] = useState({});\n\n  const setFieldValue = (fieldName, fieldValue) => {\n    const [groupName, propName] = splitPropsGroupName(fieldName);\n    let newValues;\n\n    if (groupName) {\n      const groupValues = values[groupName];\n\n      newValues = {\n        ...values,\n        [groupName]: { ...groupValues, [propName]: fieldValue }\n      };\n    } else {\n      newValues = { ...values, [propName]: fieldValue };\n    }\n\n    validateField(fieldName, newValues);\n\n    setValues(newValues);\n  };\n\n  const handleChange = fieldName => event => {\n    const {\n      target: { type, value, checked }\n    } = event;\n    const valueType = {\n      checkbox: checked,\n      number: Number(value)\n    };\n    const fieldValue = valueType[type] !== undefined ? valueType[type] : value;\n\n    setFieldValue(fieldName, fieldValue);\n  };\n\n  const validateField = (fieldName, fieldsValues) => {\n    if (status.submited || status.onChange) {\n      validationSchema\n        .validateAt(fieldName, fieldsValues, { abortEarly: false })\n        .then(() => {\n          if (fieldName in errors) {\n            const errorsTmp = { ...errors };\n\n            delete errorsTmp[fieldName];\n            setErrors(errorsTmp);\n          }\n        })\n        .catch(error => setErrors({ ...errors, ...parseYupErrors(error) }));\n    }\n  };\n\n  const handleSubmit = func => event => {\n    event.preventDefault();\n    setStatus({ ...status, submited: true });\n\n    if (validationSchema) {\n      validationSchema\n        .validate(values, { abortEarly: false })\n        .then(value => func(value))\n        .catch(errors => setErrors(parseYupErrors(errors)));\n    } else {\n      func(values);\n    }\n  };\n\n  return { values, handleChange, handleSubmit, errors };\n};\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import { createSelector } from 'reselect';\n\nconst getApp = ({ app }) => app;\n\nconst getUi = ({ ui }) => ui;\n\nconst getNotifications = ({ notifications }) => notifications;\n\nconst getBoardsById = ({ boards }) => boards.boardsById;\n\nconst getAllBoards = ({ boards }) => boards.allBoards;\n\nconst getBoardId = (_, boardId) => boardId;\n\nconst getNotificationId = (_, notificationId) => notificationId;\n\nexport const getIsAuthenticated = createSelector(\n  [getApp],\n  ({ isAuthenticated }) => isAuthenticated\n);\n\nexport const getCurrentBoardId = createSelector(\n  [getUi],\n  ({ currentBoard }) => currentBoard\n);\n\nconst getBoard = createSelector(\n  [getBoardsById, getBoardId],\n  (boardsById, boardId) => boardsById[boardId]\n);\n\nexport const getBoardTitle = createSelector(\n  [getBoard],\n  board => board && board.title\n);\n\nexport const getSwitchInterval = createSelector(\n  [getBoard],\n  board => board && board.switchInterval\n);\n\nexport const getSwitcherBoards = createSelector(\n  [getAllBoards, getBoardsById],\n  (allBoards, boardsById) =>\n    allBoards.filter(boardId => boardsById[boardId].autoSwitch)\n);\n\nexport const getNotificationsById = createSelector(\n  [getNotifications],\n  ({ notificationsById }) => notificationsById\n);\n\nexport const createGetNotification = () =>\n  createSelector(\n    [getNotificationsById, getNotificationId],\n    (notificationsById, notificationId) => notificationsById[notificationId]\n  );\n\nexport const getAllNotifications = createSelector(\n  [getNotifications],\n  ({ allNotifications }) => allNotifications\n);\n\nexport const getBoards = createSelector(\n  [getBoardsById],\n  boardsById => Object.values(boardsById)\n);\n","import React from 'react';\nimport { bool, element, func, string } from 'prop-types';\nimport styled from '@emotion/styled/macro';\n\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\n\nconst StyledDialog = styled(props => (\n  <Dialog classes={{ paper: 'paper' }} {...props} />\n))`\n  .paper {\n    padding: 15px;\n  }\n`;\n\nconst StyledDialogContent = styled(DialogContent)`\n  padding-bottom: 16px;\n`;\n\nconst AppDialog = props => {\n  const {\n    children,\n    handleDialogClose,\n    open,\n    title,\n    disableBackdropClick\n  } = props;\n\n  const stopEventPropagation = event => event.stopPropagation();\n\n  return (\n    <StyledDialog\n      disableBackdropClick={disableBackdropClick}\n      onClick={stopEventPropagation}\n      onClose={handleDialogClose}\n      onKeyDown={stopEventPropagation}\n      aria-labelledby=\"app-dialog-title\"\n      open={open}\n      PaperProps={{ 'data-cy': props['data-cy'] }}\n    >\n      <DialogTitle id=\"app-dialog-title\" data-cy=\"app-dialog-title\">\n        {title}\n      </DialogTitle>\n      <StyledDialogContent data-cy=\"app-dialog-content\">\n        {children}\n      </StyledDialogContent>\n    </StyledDialog>\n  );\n};\n\nAppDialog.propTypes = {\n  handleDialogClose: func.isRequired,\n  children: element.isRequired,\n  open: bool.isRequired,\n  title: string\n};\n\nAppDialog.defaultProps = {\n  title: ''\n};\n\nexport default AppDialog;\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nconst CancelButton = ({ handleCancelClick, className, ...other }) => (\n  <Button\n    onClick={handleCancelClick}\n    className={className}\n    variant=\"contained\"\n    color=\"secondary\"\n    {...other}\n  >\n    Cancel\n  </Button>\n);\n\nexport default CancelButton;\n","const DefaultWidget = () => {\n  return null;\n};\n\nexport default DefaultWidget;\n","import React from 'react';\nimport Iframe from 'react-iframe';\nimport { string } from 'prop-types';\n\nconst IframeEmbed = props => {\n  const { url } = props;\n\n  return <Iframe {...props} url={url} />;\n};\n\nIframeEmbed.propTypes = {\n  url: string.isRequired\n};\n\nexport default IframeEmbed;\n","import React from 'react';\nimport styled from '@emotion/styled/macro';\n\nimport { Button, FormControl, Typography, IconButton } from '@material-ui/core';\n\nimport IframeEmbed from '../IframeEmbed';\nimport { setSize } from '../../helpers';\n\nconst StyledTypography = styled(Typography)`\n  margin-bottom: 5px;\n`;\n\nconst FullWidthButtonOutlined = props => (\n  <Button {...props} fullWidth variant=\"outlined\" target=\"_blank\" />\n);\n\nexport const WidgetButton = styled(FullWidthButtonOutlined)`\n  margin-top: auto;\n`;\n\nexport const WidgetIconButton = styled(IconButton)`\n  border-radius: 0;\n  height: 100%;\n  left: 0;\n  padding: 0;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 100%;\n`;\n\nexport const Caption = props => (\n  <StyledTypography {...props} variant=\"caption\" paragraph />\n);\n\nexport const CaptionWithPointer = styled(Caption)`\n  cursor: pointer;\n`;\n\nexport const StyledFieldset = styled(FormControl)`\n  display: flex;\n  margin-bottom: 32px;\n  min-width: 300px;\n`;\n\nexport const StyledIframe = props => (\n  <IframeEmbed {...props} frameBorder={0} allowFullScreen height=\"100%\" />\n);\n\nexport const StyledFormControlForDropdown = styled(FormControl)`\n  display: flex;\n  margin-bottom: 12px;\n  min-width: 300px;\n`;\n\nexport const StyledTitle = styled(Typography)`\n  align-self: center;\n  flex-grow: 1;\n  font-size: 2rem;\n  margin-left: 1rem;\n  margin-top: 1rem;\n  overflow: hidden;\n  padding-right: 2rem;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  &::after {\n    background-color: #ff8a65;\n    content: '';\n    display: block;\n    height: 2px;\n    margin-top: ${setSize(2)};\n    margin-left: 3px;\n    width: ${setSize(10)};\n  }\n`;\n\nexport const StyledFormControl = styled(FormControl)`\n  margin: ${setSize(1)};\n  min-width: 120px;\n  max-width: 300px;\n`;\n\nexport const StyledPopoverText = styled(Typography)`\n  background: #fff;\n  color: #000;\n  padding: 1rem;\n`;\n","import React from 'react';\n\nimport { Caption } from '../../styled';\n\nconst ExampleWidget = ({ serverTime }) => {\n  const ts = serverTime ? new Date(serverTime).toLocaleString() : '';\n\n  return <Caption>{ts}</Caption>;\n};\n\nexport default ExampleWidget;\n","import React from 'react';\nimport { string, number } from 'prop-types';\n\nimport { Caption, WidgetButton } from '../../styled';\n\nconst JenkinsJobWidget = props => {\n  const { duration, displayName, url, timestamp, branch } = props;\n  const ts = timestamp ? new Date(timestamp).toLocaleString() : '';\n  const dur = duration ? `${duration / 1000} [s]` : '';\n\n  return (\n    <>\n      <Caption>{ts}</Caption>\n      <Caption>Duration: {dur}</Caption>\n      <Caption>{branch}</Caption>\n      <WidgetButton href={url}>{displayName}</WidgetButton>\n    </>\n  );\n};\n\nJenkinsJobWidget.propTypes = {\n  duration: number.isRequired,\n  displayName: string.isRequired,\n  url: string.isRequired,\n  timestamp: number.isRequired,\n  branch: string\n};\n\nJenkinsJobWidget.defaultProps = {\n  branch: 'unknown'\n};\n\nexport default JenkinsJobWidget;\n","import React from 'react';\nimport { number, string, object } from 'prop-types';\n\nimport { Caption, WidgetButton } from '../../styled';\n\nconst SonarQubeWidget = props => {\n  const { metrics, id, url, version, date } = props;\n  const ts = date ? new Date(Date.parse(date)).toLocaleString() : '';\n\n  return (\n    <>\n      <Caption>{ts}</Caption>\n      <Caption>Version: {version}</Caption>\n      {Object.entries(metrics).map(([metric, val]) => (\n        <Caption key={metric}>\n          {metric.replace('_', ' ')}: {val}\n        </Caption>\n      ))}\n      <WidgetButton href={url}>#{id}</WidgetButton>\n    </>\n  );\n};\n\nSonarQubeWidget.propTypes = {\n  metrics: object,\n  id: number.isRequired,\n  url: string.isRequired,\n  version: string,\n  date: string\n};\n\nSonarQubeWidget.defaultProps = {\n  metrics: {},\n  version: '-',\n  date: ''\n};\n\nexport default SonarQubeWidget;\n","import styled from '@emotion/styled/macro';\n\nimport { CircularProgress } from '@material-ui/core';\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n  margin-left: 8px;\n`;\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { StyledCircularProgress } from './styled';\n\nconst Loader = ({ text, ...other }) => (\n  <>\n    <Typography variant=\"caption\">{text}</Typography>\n    <StyledCircularProgress {...other} />\n  </>\n);\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport { string, number } from 'prop-types';\n\nimport { Popover } from '@material-ui/core';\nimport {\n  Caption,\n  CaptionWithPointer,\n  WidgetButton,\n  StyledPopoverText\n} from '../../styled';\nimport Loader from '../../Loader';\n\nconst ServiceCheckWidget = props => {\n  const {\n    statusCode,\n    statusMessage,\n    expectedStatusCode,\n    body,\n    expectedResponseBody,\n    url\n  } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const errorStatus = expectedStatusCode !== statusCode;\n  const statusCodeMessage = errorStatus\n    ? `${expectedStatusCode} expected, got ${statusCode}`\n    : statusCode;\n  const errorBody = !expectedResponseBody && expectedResponseBody !== body;\n  const bodyMessage = errorBody ? 'FAIL' : 'OK';\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const popoverOpen = Boolean(anchorEl);\n\n  return (\n    <>\n      {errorStatus && <Caption>{statusMessage}</Caption>}\n      <Caption>\n        <WidgetButton href={url}>\n          {!statusCode ? (\n            <Loader text=\"Pending update\" size={20} />\n          ) : (\n            statusCodeMessage\n          )}\n        </WidgetButton>\n      </Caption>\n\n      {expectedResponseBody && (\n        <>\n          <CaptionWithPointer title={body} onClick={handleClick}>\n            Response: {bodyMessage}\n          </CaptionWithPointer>\n          <Popover\n            open={popoverOpen}\n            onClose={handlePopoverClose}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n          >\n            <StyledPopoverText>{body}</StyledPopoverText>\n          </Popover>\n        </>\n      )}\n    </>\n  );\n};\n\nServiceCheckWidget.propTypes = {\n  statusCode: number,\n  statusMessage: string,\n  timestamp: number,\n  expectedStatusCode: number,\n  body: string,\n  expectedResponseBody: string\n};\n\nServiceCheckWidget.defaultProps = {\n  statusCode: 0,\n  statusMessage: '',\n  expectedStatusCode: 200,\n  body: '',\n  expectedResponseBody: '',\n  timestamp: 0\n};\n\nexport default ServiceCheckWidget;\n","import styled from '@emotion/styled/macro';\n\nimport { Typography } from '@material-ui/core';\n\nexport const VerticalText = styled(Typography)`\n  margin-top: auto;\n  transform: rotate(-180deg);\n  writing-mode: vertical-rl;\n`;\n\nexport const StyledPre = styled.pre`\n  font-family: inherit;\n`;\n","import React from 'react';\r\nimport { bool, string } from 'prop-types';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport { StyledPre, VerticalText } from './styled';\r\n\r\nconst TextWidget = ({ text, textSize, isVertical }) => {\r\n  const TextVariant = isVertical ? VerticalText : Typography;\r\n\r\n  return (\r\n    <TextVariant variant={textSize}>\r\n      <StyledPre>{text}</StyledPre>\r\n    </TextVariant>\r\n  );\r\n};\r\n\r\nTextWidget.propTypes = {\r\n  text: string.isRequired,\r\n  textSize: string.isRequired,\r\n  isVertical: bool.isRequired\r\n};\r\n\r\nexport default TextWidget;\r\n","import React from 'react';\nimport { string, number } from 'prop-types';\n\nimport { Caption, WidgetButton } from '../../styled';\n\nconst BambooPlanWidget = ({ url, number, lifeCycleState }) => {\n  return (\n    <>\n      <Caption>State: {lifeCycleState}</Caption>\n      <WidgetButton href={url}>#{number}</WidgetButton>\n    </>\n  );\n};\n\nBambooPlanWidget.propTypes = {\n  url: string.isRequired,\n  number: number.isRequired,\n  lifeCycleState: string.isRequired\n};\n\nexport default BambooPlanWidget;\n","import moment from 'moment-timezone';\n\nexport const getDateTime = (timezone, format) => {\n  return moment.tz(new Date(), timezone).format(format);\n};\n\nconst getGmtTimezones = () => {\n  const allTimezones = moment.tz.names();\n  const duplicatedTimezones = ['Etc/GMT', 'Etc/GMT+0', 'Etc/GMT0'];\n\n  const gmtSort = (a, b) => {\n    const parts = {\n      a: a.split('T'),\n      b: b.split('T')\n    };\n    return parseInt(parts.b[1]) - parseInt(parts.a[1]);\n  };\n\n  const gmtTimezones = allTimezones\n    .filter(\n      timezone =>\n        timezone.includes('Etc/GMT') && !duplicatedTimezones.includes(timezone)\n    )\n    .sort(gmtSort)\n    .map(timezone => {\n      const displayName = timezone\n        .replace('Etc/', '')\n        .replace(/[+-]/g, c => (c === '+' ? '-' : '+')); //swap '+' sign with '-' sign to preserve correct time\n      return {\n        display: displayName,\n        value: timezone\n      };\n    });\n\n  gmtTimezones.splice(0, 0, {\n    display: 'Current time zone',\n    value: moment.tz.guess()\n  });\n\n  return gmtTimezones;\n};\n\nexport const GMT_TIMEZONES = getGmtTimezones();\n\nexport const DATE_FORMATS = [\n  {\n    display: '29/08/2019',\n    value: 'DD/MM/YYYY'\n  },\n  {\n    display: 'Friday, 29/08/2019',\n    value: 'dddd, DD/MM/YYYY'\n  },\n  {\n    display: '29 Aug 2019',\n    value: 'DD MMM YYYY'\n  },\n  {\n    display: 'Friday, 29 Aug 2019',\n    value: 'dddd, DD MMM YYYY'\n  },\n  {\n    display: '29th August 2019',\n    value: 'Do MMMM YYYY'\n  },\n  {\n    display: 'Friday, 29th August 2019',\n    value: 'dddd, Do MMMM YYYY'\n  }\n];\n\nexport const TIME_FORMATS = [\n  {\n    display: '12-hour (AM/PM)',\n    value: 'h:mm:ss a'\n  },\n  {\n    display: '24-hour',\n    value: 'HH:mm:ss'\n  }\n];\n","import styled from '@emotion/styled/macro';\n\nexport const TimePre = styled.pre`\n  font-weight: bold;\n  font-family: inherit;\n  font-size: 180%;\n  margin: 0 auto;\n`;\n\nexport const DatePre = styled.pre`\n  font-family: inherit;\n  margin: 0.25em 0 auto;\n`;\n","import React, { useState } from 'react';\nimport { string } from 'prop-types';\n\nimport { useInterval } from '../../../../hooks';\nimport { getDateTime } from './helpers';\n\nimport { Typography } from '@material-ui/core';\nimport { DatePre, TimePre } from './styled';\n\nconst WorldClockWidget = props => {\n  const {\n    timeZoneId,\n    dateFormat,\n    timeFormat,\n    displayDate,\n    displayTime,\n    textSize\n  } = props;\n\n  const date = getDateTime(timeZoneId, dateFormat);\n\n  const initTime = getDateTime(timeZoneId, timeFormat);\n  const [time, setTime] = useState(initTime);\n\n  useInterval(() => {\n    setTime(getDateTime(timeZoneId, timeFormat));\n  }, 1000);\n\n  return (\n    <Typography variant={textSize}>\n      {displayTime && <TimePre>{time}</TimePre>}\n      {displayDate && <DatePre>{date}</DatePre>}\n    </Typography>\n  );\n};\n\nWorldClockWidget.propTypes = {\n  timeZoneId: string.isRequired,\n  dateFormat: string.isRequired,\n  timeFormat: string.isRequired,\n  textSize: string\n};\n\nWorldClockWidget.defaultProps = {\n  textSize: 'h5'\n};\n\nexport default WorldClockWidget;\n","const getNextStatus = status => {\n  const statusArray = ['OK', 'FAIL', 'UNKNOWN'];\n  const statusIndex = statusArray.findIndex(element => element === status);\n\n  let nextStatusIndex = 0;\n\n  if (statusIndex !== -1) {\n    nextStatusIndex =\n      statusIndex < statusArray.length - 1 ? statusIndex + 1 : 0;\n  } else {\n    nextStatusIndex = statusArray.findIndex(element => element === 'UNKNOWN');\n  }\n\n  return statusArray[nextStatusIndex];\n};\n\nexport default getNextStatus;\n","import React from 'react';\nimport {\n  Check,\n  Close,\n  IndeterminateCheckBoxOutlined\n} from '@material-ui/icons';\n\nconst StatusIcon = ({ status, size }) => {\n  const iconComponents = {\n    OK: Check,\n    FAIL: Close,\n    UNKNOWN: IndeterminateCheckBoxOutlined\n  };\n\n  const IconComponent =\n    status in iconComponents\n      ? iconComponents[status]\n      : iconComponents['UNKNOWN'];\n\n  return <IconComponent fontSize={size} />;\n};\n\nexport default StatusIcon;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setWidgetState } from '../../../../actions/thunks';\nimport getNextStatus from './helpers';\n\nimport { WidgetIconButton } from '../../../styled';\nimport StatusIcon from '../../../StatusIcon';\n\nconst CheckboxWidget = props => {\n  const { id } = props;\n  const { status } = useSelector(({ widgets }) => widgets.widgetsById[id]);\n  const dispatch = useDispatch();\n\n  const ariaCheckedStatusMap = {\n    OK: true,\n    FAIL: false,\n    UNKNOWN: 'mixed'\n  };\n\n  const handleChangeStatus = () => {\n    dispatch(\n      setWidgetState({\n        id,\n        status: getNextStatus(status)\n      })\n    );\n  };\n\n  return (\n    <WidgetIconButton\n      aria-label=\"Toggle status\"\n      aria-checked={ariaCheckedStatusMap[status]}\n      data-cy=\"checkbox\"\n      onClick={handleChangeStatus}\n    >\n      <StatusIcon size=\"large\" status={status} />\n    </WidgetIconButton>\n  );\n};\n\nexport default CheckboxWidget;\n","import React from 'react';\nimport { object } from 'prop-types';\n\nimport { Link } from '@material-ui/core';\nimport { Caption } from '../../../styled';\n\nimport { AEM_HEALTH_CHECKS } from '../../../../constants';\n\nconst AemHealthcheckWidget = ({ healthChecks }) => {\n  return (\n    <>\n      {Object.entries(healthChecks).map(([name, data]) => (\n        <Link href={data['url']} target=\"_blank\">\n          <Caption key={name}>\n            {AEM_HEALTH_CHECKS[name]}: {data['status']}\n          </Caption>\n        </Link>\n      ))}\n    </>\n  );\n};\n\nAemHealthcheckWidget.propTypes = {\n  healthChecks: object\n};\n\nAemHealthcheckWidget.defaultProps = {\n  healthChecks: {}\n};\n\nexport default AemHealthcheckWidget;\n","const HTTP = 'http://';\nconst WWW = 'www';\n\nexport const attachHttp = url => {\n  if (url.startsWith(WWW)) {\n    return HTTP + url;\n  }\n  return url;\n};\n","import DefaultWidget from './types/DefaultWidget';\nimport ExampleWidget from './types/ExampleWidget';\nimport JenkinsJobWidget from './types/JenkinsJobWidget';\nimport SonarQubeWidget from './types/SonarQubeWidget';\nimport ServiceCheckWidget from './types/ServiceCheckWidget';\nimport TextWidget from './types/TextWidget';\nimport BambooPlanWidget from './types/BambooPlanWidget';\nimport WorldClockWidget from './types/WorldClockWidget';\nimport CheckboxWidget from './types/CheckboxWidget';\nimport AemHealthcheckWidget from './types/AemHealthcheckWidget';\nimport IframeEmbedWidget from './types/IframeEmbedWidget';\n\nconst widgetTypes = {\n  DefaultWidget: {\n    name: 'Default',\n    component: DefaultWidget\n  },\n  ExampleWidget: {\n    name: 'Example',\n    component: ExampleWidget,\n    dialogFields: ['SchedulePeriod'],\n    showUpdateTime: true\n  },\n  JenkinsJobWidget: {\n    name: 'Jenkins Job',\n    component: JenkinsJobWidget,\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'Path'],\n    showUpdateTime: true\n  },\n  SonarQubeWidget: {\n    name: 'SonarQube',\n    component: SonarQubeWidget,\n    dialogFields: [\n      'EndpointField',\n      'SchedulePeriod',\n      'Key',\n      'IdNumber',\n      'SonarQubeMetricsInput'\n    ],\n    showUpdateTime: true\n  },\n  ServiceCheckWidget: {\n    name: 'Service Check',\n    component: ServiceCheckWidget,\n    dialogFields: [\n      'SchedulePeriod',\n      'RequestMethod',\n      'EndpointField',\n      'Path',\n      'RequestBody',\n      'ResponseBody',\n      'StatusCode'\n    ],\n    showUpdateTime: true\n  },\n  TextWidget: {\n    name: 'Text',\n    component: TextWidget,\n    dialogFields: ['Text', 'TextSize', 'TextOrientation']\n  },\n  BambooPlanWidget: {\n    name: 'Bamboo Plan',\n    component: BambooPlanWidget,\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'IdString'],\n    showUpdateTime: true\n  },\n  WorldClockWidget: {\n    name: 'World Clock',\n    component: WorldClockWidget,\n    dialogFields: [\n      'TimeZoneId',\n      'DateFormat',\n      'TimeFormat',\n      'DisplayDate',\n      'DisplayTime',\n      'TextSize'\n    ]\n  },\n  IframeEmbedWidget: {\n    name: 'Iframe Embed',\n    component: IframeEmbedWidget,\n    dialogFields: ['UrlForContent']\n  },\n  CheckboxWidget: {\n    name: 'Checkbox',\n    component: CheckboxWidget,\n    showUpdateTime: true\n  },\n  AemHealthcheckWidget: {\n    name: 'AEM Healthcheck',\n    component: AemHealthcheckWidget,\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'AemHealthcheckInput'],\n    showUpdateTime: true\n  }\n};\n\nexport default widgetTypes;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { attachHttp } from './helpers';\n\nimport { StyledIframe } from '../../../styled';\nimport { Typography } from '@material-ui/core';\n\nconst IframeEmbedWidget = ({ url }) => {\n  if (url) {\n    return <StyledIframe url={attachHttp(url)} />;\n  } else {\n    return <Typography variant=\"h5\">URL is blank</Typography>;\n  }\n};\n\nIframeEmbedWidget.propTypes = {\n  url: string.isRequired\n};\n\nexport default IframeEmbedWidget;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { FormControl, InputLabel, Input, Select } from '@material-ui/core';\nimport { getToken } from '../utils/auth';\nimport { getIsAuthenticated } from '../selectors';\n\nconst DropdownField = props => {\n  const {\n    onChange,\n    id,\n    label,\n    value,\n    name,\n    children,\n    dropdownItems,\n    itemsUrl,\n    ...other\n  } = props;\n  const initialLoaded = !itemsUrl;\n  const [options, setOptions] = useState(dropdownItems);\n  const [loaded, setLoaded] = useState(initialLoaded);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  useEffect(() => {\n    if (itemsUrl) {\n      const init = isAuthenticated\n        ? {\n            headers: {\n              Authorization: getToken()\n            }\n          }\n        : undefined;\n\n      fetch(itemsUrl, init)\n        .then(response => response.json())\n        .then(data => {\n          setOptions(data);\n          setLoaded(true);\n        })\n        .catch(console.error);\n    }\n  }, [itemsUrl, isAuthenticated]);\n\n  return (\n    <FormControl>\n      <InputLabel shrink htmlFor={id}>\n        {label}\n      </InputLabel>\n      <Select\n        onChange={onChange}\n        value={value}\n        input={<Input name={name} id={id} />}\n        name={name}\n        SelectDisplayProps={other}\n      >\n        {loaded && children(options)}\n      </Select>\n    </FormControl>\n  );\n};\n\nDropdownField.defaultProps = {\n  value: ''\n};\n\nexport default DropdownField;\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { MenuItem } from '@material-ui/core';\nimport DropdownField from '../../DropdownField';\n\nconst EndpointInput = props => {\n  return (\n    <DropdownField {...props}>\n      {endpoints =>\n        endpoints.map(({ id, label }) => (\n          <MenuItem key={id} value={id}>\n            {label}\n          </MenuItem>\n        ))\n      }\n    </DropdownField>\n  );\n};\n\nEndpointInput.propTypes = {\n  value: string.isRequired\n};\n\nexport default EndpointInput;\n","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst NumberInput = props => {\n  const { min, step, ...other } = props;\n\n  return (\n    <TextField\n      type=\"number\"\n      inputProps={{ min, step }}\n      InputLabelProps={{\n        shrink: true\n      }}\n      margin=\"normal\"\n      {...other}\n    />\n  );\n};\n\nexport default NumberInput;\n","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst TextInput = props => {\n  return (\n    <TextField\n      InputLabelProps={{\n        shrink: true\n      }}\n      margin=\"normal\"\n      {...props}\n    />\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport { MenuItem } from '@material-ui/core';\n\nimport DropdownField from '../../DropdownField';\nimport { StyledFormControlForDropdown } from '../../styled';\n\n/**\n * Displays dropdown field using passed array of objects with the following properties: display, value.\n * Example: [\n *  {\n *      display: \"name1\"\n *      value: \"value1\"\n *  },\n *  {\n *      display: \"name2\"\n *      value: \"value2\"\n *  }\n * ]\n */\nconst DisplayValueSelect = props => {\n  return (\n    <StyledFormControlForDropdown>\n      <DropdownField {...props}>\n        {items =>\n          items.map(item => (\n            <MenuItem key={item.value} value={item.value}>\n              {item.display}\n            </MenuItem>\n          ))\n        }\n      </DropdownField>\n    </StyledFormControlForDropdown>\n  );\n};\n\nexport default DisplayValueSelect;\n","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\n\nconst MultilineTextInput = props => {\n  return (\n    <TextField\n      InputLabelProps={{\n        shrink: true\n      }}\n      margin=\"normal\"\n      multiline={true}\n      {...props}\n    />\n  );\n};\n\nexport default MultilineTextInput;\n","import React from 'react';\n\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\n\nconst CheckboxInput = ({ value, onChange, ...other }) => (\n  <FormControlLabel\n    control={<Checkbox checked={value} onChange={onChange} />}\n    {...other}\n  />\n);\n\nexport default CheckboxInput;\n","import {\n  DATE_FORMATS,\n  GMT_TIMEZONES,\n  TIME_FORMATS\n} from '../types/WorldClockWidget/helpers';\n\nimport EndpointInput from './EndpointInput';\nimport NumberInput from './NumberInput';\nimport TextInput from './TextInput';\nimport SonarQubeMetricsInput from './SonarQubeMetricsInput';\nimport DisplayValueSelect from './DisplayValueSelect';\nimport { REQUEST_METHODS, TEXT_SIZES } from '../../../constants';\nimport MultilineTextInput from './MultilineTextInput';\nimport CheckboxInput from './CheckboxInput';\nimport AemHealthcheckInput from './AemHealthcheckInput';\n\nconst dialogFields = {\n  EndpointField: {\n    component: EndpointInput,\n    name: 'endpoint',\n    label: 'Endpoint',\n    itemsUrl: '/api/endpoints'\n  },\n  SchedulePeriod: {\n    component: NumberInput,\n    name: 'schedulePeriod',\n    label: 'Schedule Period [sec] (if 0 will run once)',\n    min: 0,\n    step: 10,\n    initialValue: 120\n  },\n  Path: {\n    component: TextInput,\n    name: 'path',\n    label: 'Path'\n  },\n  URL: {\n    component: TextInput,\n    name: 'url',\n    label: 'URL'\n  },\n  UrlForContent: {\n    component: TextInput,\n    name: 'content.url',\n    label: 'URL'\n  },\n  IdString: {\n    component: TextInput,\n    name: 'idString',\n    label: 'ID'\n  },\n  IdNumber: {\n    component: NumberInput,\n    name: 'idNumber',\n    label: 'ID',\n    step: 1\n  },\n  Key: {\n    component: TextInput,\n    name: 'keyString',\n    label: 'Key'\n  },\n  SonarQubeMetricsInput: {\n    component: SonarQubeMetricsInput,\n    name: 'selectedMetrics',\n    initialValue: [\n      'blocker_violations',\n      'critical_violations',\n      'major_violations',\n      'minor_violations'\n    ]\n  },\n  AemHealthcheckInput: {\n    component: AemHealthcheckInput,\n    name: 'selectedHealthChecks',\n    initialValue: [\n      'slingJobs',\n      'systemchecks',\n      'inactiveBundles',\n      'DiskSpaceHealthCheck'\n    ]\n  },\n  StatusCode: {\n    component: NumberInput,\n    name: 'expectedStatusCode',\n    label: 'Expected Status Code',\n    min: 0,\n    step: 1,\n    initialValue: 200\n  },\n  TimeZoneId: {\n    component: DisplayValueSelect,\n    name: 'content.timeZoneId',\n    label: 'Timezone',\n    dropdownItems: GMT_TIMEZONES,\n    initialValue: GMT_TIMEZONES[0].value\n  },\n  DateFormat: {\n    component: DisplayValueSelect,\n    name: 'content.dateFormat',\n    label: 'Date Format',\n    dropdownItems: DATE_FORMATS,\n    initialValue: DATE_FORMATS[1].value\n  },\n  TimeFormat: {\n    component: DisplayValueSelect,\n    name: 'content.timeFormat',\n    label: 'Time Format',\n    dropdownItems: TIME_FORMATS,\n    initialValue: TIME_FORMATS[1].value\n  },\n  DisplayDate: {\n    component: CheckboxInput,\n    name: 'content.displayDate',\n    label: 'Display date',\n    initialValue: true\n  },\n  DisplayTime: {\n    component: CheckboxInput,\n    name: 'content.displayTime',\n    label: 'Display time',\n    initialValue: true\n  },\n  Text: {\n    component: MultilineTextInput,\n    name: 'content.text',\n    label: 'Text'\n  },\n  RequestBody: {\n    component: MultilineTextInput,\n    name: 'body',\n    label: 'Request Body'\n  },\n  ResponseBody: {\n    component: MultilineTextInput,\n    name: 'expectedResponseBody',\n    label: 'Response Body Fragment'\n  },\n  TextSize: {\n    component: DisplayValueSelect,\n    name: 'content.textSize',\n    label: 'Text Size',\n    dropdownItems: TEXT_SIZES,\n    initialValue: TEXT_SIZES[3].value\n  },\n  RequestMethod: {\n    component: DisplayValueSelect,\n    name: 'requestMethod',\n    label: 'Request Method',\n    dropdownItems: REQUEST_METHODS,\n    initialValue: REQUEST_METHODS[0].value\n  },\n  TextOrientation: {\n    component: CheckboxInput,\n    name: 'content.isVertical',\n    label: 'Vertical Text',\n    initialValue: false\n  }\n};\n\nexport default dialogFields;\n","import React from 'react';\nimport { useTheme } from '@material-ui/styles';\n\nimport { ALL_SONARQUBE_METRICS } from '../../../constants';\n\nimport {\n  Input,\n  InputLabel,\n  Checkbox,\n  MenuItem,\n  ListItemText,\n  Select\n} from '@material-ui/core';\nimport { StyledFormControl } from './../../styled';\n\nconst SonarQubeMetricsInput = props => {\n  const { onChange, value } = props;\n  const theme = useTheme();\n  const inputId = 'sonarqube-metrics-input';\n\n  return (\n    <StyledFormControl theme={theme}>\n      <InputLabel htmlFor={inputId}>Metrics</InputLabel>\n      <Select\n        multiple\n        value={value}\n        onChange={onChange}\n        input={<Input id={inputId} />}\n        renderValue={value => `${value.length} selected`}\n      >\n        {ALL_SONARQUBE_METRICS.map(name => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={value.includes(name)} />\n            <ListItemText primary={name} />\n          </MenuItem>\n        ))}\n      </Select>\n    </StyledFormControl>\n  );\n};\n\nexport default SonarQubeMetricsInput;\n","import React from 'react';\nimport { useTheme } from '@material-ui/styles';\n\nimport { AEM_HEALTH_CHECKS } from '../../../constants';\n\nimport {\n  Input,\n  InputLabel,\n  Checkbox,\n  MenuItem,\n  ListItemText,\n  Select\n} from '@material-ui/core';\nimport { StyledFormControl } from './../../styled';\n\nconst AemHealthcheckInput = props => {\n  const { onChange, value } = props;\n  const theme = useTheme();\n  const inputId = 'aemhealthcheck-metrics-input';\n  const dataCy = 'widget' + inputId;\n\n  return (\n    <StyledFormControl theme={theme}>\n      <InputLabel htmlFor={inputId}>Health Checks</InputLabel>\n      <Select\n        multiple\n        value={value}\n        onChange={onChange}\n        input={<Input id={inputId} data-cy={dataCy}/>}\n        renderValue={value => `${value.length} selected`}\n      >\n        {Object.entries(AEM_HEALTH_CHECKS).map(([name, label]) => (\n          <MenuItem key={name} value={name}>\n            <Checkbox checked={value.includes(name)} />\n            <ListItemText primary={label} />\n          </MenuItem>\n        ))}\n      </Select>\n    </StyledFormControl>\n  );\n};\n\nexport default AemHealthcheckInput;\n","import React from 'react';\nimport { func, object, string } from 'prop-types';\nimport styled from '@emotion/styled/macro';\n\nimport { createValueRef } from './helpers';\nimport widgetTypes from '../widgets';\nimport dialogFields from '../widgets/dialogFields';\n\nimport { FormControl } from '@material-ui/core';\n\nconst StyledFieldset = styled(FormControl)`\n  display: flex;\n  margin-bottom: 32px;\n  min-width: 300px;\n`;\n\nconst WidgetTypeForm = ({ values, type, handleChange }) => {\n  const widgetType = widgetTypes[type];\n  const dialogFieldNames =\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\n  const hasDialogFields = dialogFieldNames.length !== 0;\n\n  return (\n    hasDialogFields && (\n      <>\n        <StyledFieldset component=\"fieldset\">\n          {dialogFieldNames.map(fieldName => {\n            const {\n              component: DialogField,\n              initialValue = '',\n              ...dialogFieldProps\n            } = dialogFields[fieldName];\n\n            const { name } = dialogFieldProps;\n            const valueRef = createValueRef(values, initialValue, name);\n\n            return (\n              <DialogField\n                key={name}\n                value={valueRef}\n                onChange={handleChange(name)}\n                {...dialogFieldProps}\n              />\n            );\n          })}\n        </StyledFieldset>\n      </>\n    )\n  );\n};\n\nWidgetTypeForm.propTypes = {\n  handleChange: func.isRequired,\n  type: string.isRequired,\n  values: object.isRequired\n};\n\nexport default WidgetTypeForm;\n","import { splitPropsGroupName } from '../../helpers';\n\nexport const createValueRef = (values, initialValue, name) => {\n  const [groupName, propName] = splitPropsGroupName(name);\n\n  if (groupName) {\n    if (!values[groupName]) {\n      values[groupName] = {};\n    }\n\n    if (values[groupName][propName] === undefined) {\n      values[groupName][propName] = initialValue;\n    }\n\n    return values[groupName][propName];\n  }\n\n  if (values[propName] === undefined) {\n    values[propName] = initialValue;\n  }\n\n  return values[propName];\n};\n","import React from 'react';\nimport { node, any } from 'prop-types';\n\nimport { Typography } from '@material-ui/core';\n\nconst TabPanel = ({ children, value, index, ...other }) => {\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}\n    >\n      {children}\n    </Typography>\n  );\n};\n\nTabPanel.propTypes = {\n  children: node,\n  index: any.isRequired,\n  value: any.isRequired\n};\n\nexport default TabPanel;\n","import styled from '@emotion/styled/macro';\nimport { TextField, Tabs } from '@material-ui/core';\nimport TabPanel from '../TabPanel';\n\nexport const StyledNumberField = styled(TextField)`\n  flex-basis: calc(50% - 18px);\n`;\n\nexport const StyledTabPanel = styled(TabPanel)`\n  margin-bottom: 12px;\n`;\n\nexport const StyledTabs = styled(Tabs)`\n  margin-bottom: 12px;\n`;\n","import React from 'react';\n\nimport { MenuItem } from '@material-ui/core';\n\nexport const renderWidgetTypesMenu = widgetTypes =>\n  Object.entries(widgetTypes).map(([type, { name }]) => (\n    <MenuItem key={type} value={type} data-cy=\"widget-type-select-item\">\n      {name}\n    </MenuItem>\n  ));\n","import React, { useState } from 'react';\nimport { string, number, bool } from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nimport widgetTypes from '../widgets';\nimport { useFormData } from '../../hooks';\nimport { sortByKey } from '../../helpers';\nimport {\n  WIDGET_ROWS_MIN,\n  WIDGET_COLUMNS_MIN,\n  WIDGET_ROWS_MAX\n} from '../../constants';\n\nimport {\n  Box,\n  FormControlLabel,\n  FormControl,\n  TextField,\n  Switch,\n  Tab\n} from '@material-ui/core';\nimport DropdownField from '../DropdownField';\nimport WidgetTypeForm from '../WidgetTypeForm';\nimport { StyledNumberField, StyledTabPanel, StyledTabs } from './styled';\nimport { renderWidgetTypesMenu } from './helpers';\nimport { StyledFieldset } from '../styled';\n\nconst WidgetForm = ({ renderActions, ...initialFormValues }) => {\n  const boardColumns = useSelector(\n    ({ ui, boards }) => boards.boardsById[ui.currentBoard].columns\n  );\n  const { values, handleChange } = useFormData(initialFormValues);\n  const [tabValue, setTabValue] = useState(0);\n\n  const widgetType = widgetTypes[values.type];\n  const dialogFieldNames =\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\n  const hasDialogFields = dialogFieldNames.length !== 0;\n\n  const handleTabChange = (event, newValue) => {\n    setTabValue(newValue);\n  };\n\n  return (\n    <>\n      <StyledTabs\n        value={tabValue}\n        onChange={handleTabChange}\n        variant=\"fullWidth\"\n      >\n        <Tab label=\"General\" data-cy=\"widget-form-general-tab\" />\n        {hasDialogFields && (\n          <Tab label={widgetType.name} data-cy=\"widget-form-dynamic-tab\" />\n        )}\n      </StyledTabs>\n      <StyledTabPanel value={tabValue} index={0}>\n        <StyledFieldset component=\"fieldset\">\n          <DropdownField\n            onChange={handleChange('type')}\n            label=\"Type\"\n            id=\"widget-type\"\n            name=\"type\"\n            value={values.type}\n            dropdownItems={sortByKey(widgetTypes, 'name')}\n            data-cy=\"widget-form-type-select\"\n          >\n            {renderWidgetTypesMenu}\n          </DropdownField>\n          <TextField\n            onChange={handleChange('title')}\n            id=\"title\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            label=\"Title\"\n            margin=\"normal\"\n            value={values.title}\n            inputProps={{ 'data-cy': 'widget-form-title-input' }}\n          />\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <StyledNumberField\n              onChange={handleChange('columns')}\n              id=\"columns\"\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                min: WIDGET_COLUMNS_MIN,\n                max: boardColumns,\n                'data-cy': 'widget-form-columns-input'\n              }}\n              label=\"Columns\"\n              margin=\"normal\"\n              value={values.columns}\n              type=\"number\"\n            />\n            <StyledNumberField\n              onChange={handleChange('rows')}\n              id=\"rows\"\n              InputLabelProps={{\n                shrink: true\n              }}\n              inputProps={{\n                min: WIDGET_ROWS_MIN,\n                max: WIDGET_ROWS_MAX,\n                'data-cy': 'widget-form-rows-input'\n              }}\n              label=\"Rows\"\n              margin=\"normal\"\n              value={values.rows}\n              type=\"number\"\n            />\n          </Box>\n          <FormControl margin=\"normal\">\n            <FormControlLabel\n              control={\n                <Switch\n                  onChange={handleChange('goNewLine')}\n                  checked={values.goNewLine}\n                  color=\"primary\"\n                  value=\"goNewLine\"\n                  inputProps={{ 'data-cy': 'widget-form-go-new-line-checkbox' }}\n                />\n              }\n              label=\"Go to new line\"\n            />\n          </FormControl>\n          <FormControl margin=\"normal\">\n            <FormControlLabel\n              control={\n                <Switch\n                  onChange={handleChange('disabled')}\n                  checked={values.disabled}\n                  color=\"primary\"\n                  value=\"disabled\"\n                  inputProps={{ 'data-cy': 'widget-form-disable-checkbox' }}\n                />\n              }\n              label=\"Disable\"\n            />\n          </FormControl>\n        </StyledFieldset>\n      </StyledTabPanel>\n      {hasDialogFields && (\n        <StyledTabPanel value={tabValue} index={1}>\n          <WidgetTypeForm\n            type={values.type}\n            values={values}\n            handleChange={handleChange}\n          />\n        </StyledTabPanel>\n      )}\n      {renderActions(values)}\n    </>\n  );\n};\n\nWidgetForm.propTypes = {\n  disabled: bool,\n  columns: number,\n  goNewLine: bool,\n  rows: number,\n  title: string,\n  type: string\n};\n\nWidgetForm.defaultProps = {\n  disabled: false,\n  columns: 1,\n  goNewLine: false,\n  rows: 1,\n  title: 'Default Widget',\n  type: 'DefaultWidget'\n};\n\nexport default WidgetForm;\n","import React from 'react';\nimport { func } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from '@emotion/styled/macro';\n\nimport { addNewWidget } from '../actions/thunks';\n\nimport Button from '@material-ui/core/Button';\nimport CancelButton from './CancelButton';\nimport WidgetForm from './WidgetForm';\n\nconst StyledCancelButton = styled(CancelButton)`\n  margin-left: 20px;\n`;\n\nconst AddWidget = ({ closeDialog }) => {\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\n  const dispatch = useDispatch();\n\n  const handleAddClick = values => () => {\n    dispatch(addNewWidget({ currentBoardId, values }));\n    closeDialog();\n  };\n\n  return (\n    <WidgetForm\n      renderActions={values => (\n        <>\n          <Button\n            onClick={handleAddClick(values)}\n            color=\"primary\"\n            variant=\"contained\"\n            data-cy=\"widget-form-submit-button\"\n          >\n            Add\n          </Button>\n          <StyledCancelButton\n            handleCancelClick={closeDialog}\n            data-cy=\"widget-form-cancel-button\"\n          />\n        </>\n      )}\n    />\n  );\n};\n\nAddWidget.propTypes = {\n  closeDialog: func.isRequired\n};\n\nexport default AddWidget;\n","import React, { forwardRef } from 'react';\nimport { bool, number, object, string } from 'prop-types';\nimport styled from '@emotion/styled/macro';\n\nimport { mapStatusToColor } from './helpers';\n\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\n\nexport const StyledCard = styled(\n  forwardRef(\n    (\n      {\n        status,\n        columns,\n        goNewLine,\n        isLoggedIn,\n        isDragging,\n        isOver,\n        rows,\n        theme,\n        ...other\n      },\n      ref\n    ) => <Card {...other} ref={ref} />\n  )\n)`\n  background: ${({ isDragging, status, theme }) =>\n    !isDragging\n      ? mapStatusToColor(status, theme)\n      : theme.palette.background.paper};\n  box-shadow: none;\n  cursor: ${({ isLoggedIn }) => (isLoggedIn ? 'move' : 'default')};\n  display: flex;\n  flex-direction: column;\n  grid-column-start: ${({ goNewLine }) => goNewLine === true && 1};\n  grid-column-end: span ${({ columns }) => columns};\n  grid-row-end: span ${({ rows }) => rows};\n  position: relative;\n\n  ${({ isDragging, isOver, theme }) =>\n    isDragging &&\n    `\n    &::before {\n      background: ${theme.palette.background.paper};\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\n      border-radius: inherit;\n      content: '';\n      display: block;\n      height: 100%;\n      position: absolute;\n      z-index: 2;\n      opacity: ${isDragging ? 1 : 0};\n      width: 100%;\n    }\n  `}\n`;\n\nStyledCard.propTypes = {\n  columns: number.isRequired,\n  goNewLine: bool.isRequired,\n  rows: number.isRequired,\n  status: string.isRequired,\n  theme: object.isRequired\n};\n\nexport const StyledCardHeader = styled(CardHeader)`\n  z-index: 1;\n`;\n\nexport const StyledCardContent = styled(CardContent)`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nexport const ErrorMessage = ({ errorMessage, errorCause }) => {\n  return (\n    <>\n      <Typography paragraph>{errorMessage}</Typography>\n      <Typography variant=\"caption\" paragraph>\n        {errorCause}\n      </Typography>\n    </>\n  );\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { object, string } from 'prop-types';\n\nimport widgetTypes from './widgets';\n\nconst WidgetContent = ({ id, type, content }) => {\n  const notFoundMessage = 'Widget type not found';\n  const WidgetType = widgetTypes[type]\n    ? widgetTypes[type].component\n    : () => notFoundMessage;\n\n  return <WidgetType id={id} {...content} />;\n};\n\nWidgetContent.propTypes = {\n  content: object,\n  type: string.isRequired\n};\n\nexport default WidgetContent;\n","import styled from '@emotion/styled/macro';\n\nimport { Typography } from '@material-ui/core';\n\nexport const StyledTypography = styled(Typography)`\n  display: flex;\n  flex: 1;\n  align-items: flex-end;\n`;\n","import React from 'react';\n\nimport { StyledTypography } from './styled';\n\nconst LastUpdate = ({ lastUpdateTime }) => {\n  return (\n    <StyledTypography\n      align=\"left\"\n      color=\"textSecondary\"\n      variant=\"caption\"\n      gutterBottom={false}\n    >\n      Last update: {lastUpdateTime}\n    </StyledTypography>\n  );\n};\n\nexport default LastUpdate;\n","import React from 'react';\n\nimport { StyledCardContent } from './styled';\nimport ErrorMessage from '../ErrorMessage';\nimport WidgetContent from '../WidgetContent';\nimport LastUpdate from '../LastUpdate';\n\nexport const mapStatusToColor = (status, theme) => theme.palette.status[status];\n\nexport const renderCardContent = (\n  content,\n  showUpdateTime,\n  disabled,\n  id,\n  type\n) => {\n  return (\n    <StyledCardContent>\n      {content && content.errorMessage ? (\n        <ErrorMessage {...content} />\n      ) : !disabled ? (\n        <WidgetContent id={id} type={type} content={content} />\n      ) : (\n        'Disabled'\n      )}\n      {showUpdateTime && (\n        <LastUpdate lastUpdateTime={new Date().toLocaleString()} />\n      )}\n    </StyledCardContent>\n  );\n};\n","import React from 'react';\nimport { func, object, string, bool, number } from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport styled from '@emotion/styled/macro';\n\nimport { saveWidget } from '../actions/thunks';\n\nimport Button from '@material-ui/core/Button';\nimport CancelButton from './CancelButton';\nimport WidgetForm from './WidgetForm';\n\nconst StyledCancelButton = styled(CancelButton)`\n  margin-left: 20px;\n`;\n\nconst EditWidget = ({ closeDialog, id, widgetTypeData, ...widgetData }) => {\n  const initialFormValues = { ...widgetData, ...widgetTypeData };\n  const dispatch = useDispatch();\n\n  const handleSaveClick = values => () => {\n    dispatch(saveWidget({ id, values }));\n    closeDialog();\n  };\n\n  return (\n    <WidgetForm\n      {...initialFormValues}\n      renderActions={values => (\n        <>\n          <Button\n            onClick={handleSaveClick(values)}\n            color=\"primary\"\n            variant=\"contained\"\n            data-cy=\"widget-form-submit-button\"\n          >\n            Save\n          </Button>\n          <StyledCancelButton\n            handleCancelClick={closeDialog}\n            data-cy=\"widget-form-cancel-button\"\n          />\n        </>\n      )}\n    />\n  );\n};\n\nEditWidget.propTypes = {\n  closeDialog: func.isRequired,\n  disabled: bool.isRequired,\n  columns: number.isRequired,\n  goNewLine: bool.isRequired,\n  id: string.isRequired,\n  rows: number.isRequired,\n  title: string.isRequired,\n  type: string.isRequired,\n  widgetTypeData: object.isRequired\n};\n\nexport default EditWidget;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { func } from 'prop-types';\n\nimport { getIsAuthenticated } from '../selectors';\n\nimport { Menu, MenuList, IconButton } from '@material-ui/core';\nimport { MoreVert } from '@material-ui/icons';\n\nconst MoreMenu = ({ children }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  const handleMoreButtonClick = ({ currentTarget }) =>\n    setAnchorEl(currentTarget);\n\n  const handleMoreMenuClose = () => setAnchorEl(null);\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <>\n      <IconButton\n        onClick={handleMoreButtonClick}\n        aria-label=\"More\"\n        aria-controls=\"more-menu\"\n        aria-haspopup=\"true\"\n        data-cy=\"more-menu-button\"\n      >\n        <MoreVert />\n      </IconButton>\n      <Menu\n        onClose={handleMoreMenuClose}\n        anchorEl={anchorEl}\n        id=\"more-menu\"\n        keepMounted\n        open={Boolean(anchorEl)}\n      >\n        <MenuList>{children(handleMoreMenuClose)}</MenuList>\n      </Menu>\n    </>\n  );\n};\n\nMoreMenu.propTypes = {\n  children: func.isRequired\n};\n\nexport default MoreMenu;\n","import styled from '@emotion/styled/macro';\nimport { Box, Button } from '@material-ui/core';\n\nexport const StyledCancelButton = styled(Button)`\n  margin-left: 1em;\n`;\n\nexport const StyledButtonBox = styled(Box)`\n  margin-top: 1em;\n`;\n","import React from 'react';\nimport { func, string } from 'prop-types';\n\nimport { Button, Typography } from '@material-ui/core/index';\nimport AppDialog from '../AppDialog';\nimport { StyledButtonBox, StyledCancelButton } from './styled';\n\nconst ConfirmationDialog = props => {\n  const {\n    open,\n    title,\n    content,\n    handleOk,\n    labelOk,\n    handleCancel,\n    labelCancel\n  } = props;\n\n  return (\n    <AppDialog\n      handleDialogClose={handleCancel}\n      open={open}\n      title={title}\n      data-cy=\"confirmation-dialog\"\n    >\n      <>\n        <Typography id=\"confirmation-dialog-content\">{content}</Typography>\n        <StyledButtonBox display=\"flex\" justifyContent=\"flex-end\">\n          <Button\n            onClick={handleOk}\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            data-cy=\"confirmation-dialog-ok\"\n          >\n            {labelOk}\n          </Button>\n          {handleCancel && (\n            <StyledCancelButton\n              onClick={handleCancel}\n              variant=\"outlined\"\n              color=\"primary\"\n              data-cy=\"confirmation-dialog-cancel\"\n            >\n              {labelCancel}\n            </StyledCancelButton>\n          )}\n        </StyledButtonBox>\n      </>\n    </AppDialog>\n  );\n};\n\nConfirmationDialog.propTypes = {\n  handleOk: func.isRequired,\n  content: string,\n  labelOk: string,\n  labelCancel: string\n};\n\nConfirmationDialog.defaultProps = {\n  content: '',\n  labelOk: 'OK',\n  labelCancel: 'Cancel'\n};\n\nexport default ConfirmationDialog;\n","import React, { useRef } from 'react';\nimport { string } from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTheme } from '@material-ui/styles';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport { useToggle } from '../../hooks';\nimport { removeWidget, reorderWidgets } from '../../actions/thunks';\nimport widgetTypes from '../widgets';\nimport { ItemTypes } from '../../constants';\nimport { getIsAuthenticated } from '../../selectors';\nimport { renderCardContent } from './helpers';\n\nimport { MenuItem } from '@material-ui/core';\nimport { StyledCard, StyledCardHeader } from './styled';\nimport AppDialog from '../AppDialog';\nimport EditWidget from '../EditWidget';\nimport MoreMenu from '../MoreMenu';\nimport ConfirmationDialog from '../ConfirmationDialog';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nconst Widget = ({ id, index }) => {\n  const widgetData = useSelector(\n    state => state.widgets.widgetsById[id],\n    shallowEqual\n  );\n  const {\n    id: widgetId,\n    isUpdating,\n    disabled,\n    type,\n    status,\n    title,\n    content,\n    config: { columns, goNewLine, rows },\n    ...widgetTypeData\n  } = widgetData;\n  const showUpdateTime = widgetTypes[type]\n    ? widgetTypes[type].showUpdateTime\n    : false;\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [\n    confirmationDialogOpened,\n    openConfirmationDialog,\n    closeConfirmationDialog\n  ] = useToggle();\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\n  const ref = useRef(null);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.WIDGET, id, index },\n    canDrag: isAuthenticated,\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.WIDGET,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const { id: sourceId, index: sourceIndex } = item;\n      const targetIndex = index;\n\n      if (sourceIndex === targetIndex) {\n        return;\n      }\n\n      const { left, right } = ref.current.getBoundingClientRect();\n      const dropTargetMiddleX = right - (right - left) / 2;\n      const { x: dragSourceMouseX } = monitor.getClientOffset();\n\n      if (\n        (sourceIndex < targetIndex && dragSourceMouseX < dropTargetMiddleX) ||\n        (sourceIndex > targetIndex && dragSourceMouseX > dropTargetMiddleX)\n      ) {\n        return;\n      }\n\n      dispatch(reorderWidgets(sourceId, targetIndex));\n      item.index = targetIndex;\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      dropResult: monitor.getSourceClientOffset()\n    })\n  });\n\n  drag(drop(ref));\n\n  const handleEditClick = closeMenu => () => {\n    openDialog();\n    closeMenu();\n  };\n\n  const handleDeleteClick = closeMenu => () => {\n    openConfirmationDialog();\n    closeMenu();\n  };\n\n  const deleteWidget = () => {\n    dispatch(removeWidget(id));\n    closeConfirmationDialog();\n  };\n\n  return (\n    <>\n      <StyledCard\n        status={status}\n        columns={columns}\n        goNewLine={goNewLine}\n        rows={rows}\n        theme={theme}\n        isLoggedIn={isAuthenticated}\n        isDragging={isDragging}\n        isOver={isOver}\n        ref={ref}\n      >\n        <StyledCardHeader\n          avatar={status === 'ERROR_CONFIGURATION' && <WarningIcon />}\n          title={title}\n          titleTypographyProps={{\n            component: 'h3',\n            variant: 'subtitle2',\n            color: 'textPrimary'\n          }}\n          action={\n            <MoreMenu>\n              {closeMenu => (\n                <>\n                  <MenuItem\n                    onClick={handleEditClick(closeMenu)}\n                    data-cy=\"widget-edit\"\n                  >\n                    Edit\n                  </MenuItem>\n                  <MenuItem\n                    onClick={handleDeleteClick(closeMenu)}\n                    data-cy=\"widget-delete\"\n                  >\n                    Delete\n                  </MenuItem>\n                </>\n              )}\n            </MoreMenu>\n          }\n        />\n        {renderCardContent(content, showUpdateTime, disabled, id, type)}\n      </StyledCard>\n      <AppDialog\n        disableBackdropClick={true}\n        handleDialogClose={handleDialogClose}\n        open={dialogOpened}\n        title={`Edit ${title}`}\n        data-cy=\"widget-edit-dialog\"\n      >\n        <EditWidget\n          closeDialog={handleDialogClose}\n          content={content}\n          id={id}\n          title={title}\n          disabled={disabled}\n          type={type}\n          columns={columns}\n          goNewLine={goNewLine}\n          rows={rows}\n          widgetTypeData={widgetTypeData}\n        />\n      </AppDialog>\n      <ConfirmationDialog\n        open={confirmationDialogOpened}\n        title={`Delete ${title}`}\n        content={`Are you sure you want to delete ${title}?`}\n        handleOk={deleteWidget}\n        labelOk=\"Delete\"\n        handleCancel={closeConfirmationDialog}\n      />\n    </>\n  );\n};\n\nWidget.propTypes = {\n  id: string.isRequired\n};\n\nexport default Widget;\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport Widget from './Widget';\n\nconst WidgetList = ({ widgets: widgetIds }) => {\n  return widgetIds.map((widgetId, index) => (\n    <Widget key={widgetId} id={widgetId} index={index} />\n  ));\n};\n\nWidgetList.propTypes = {\n  widgets: array.isRequired\n};\n\nexport default WidgetList;\n","import { Link } from '@reach/router';\n\nimport styled from '@emotion/styled/macro';\n\nexport const StyledLink = styled(Link)`\n  font-size: 16px;\n  color: inherit;\n  text-decoration: none;\n  border-bottom: 2px solid;\n  padding-bottom: 4px;\n  border-color: #ff8a65;\n`;\n","import React from 'react';\nimport { string, bool } from 'prop-types';\n\nimport { StyledLink } from './styled';\n\nconst ErrorPage = ({ title, tip, homeLink, className }) => (\n  <div className={className}>\n    <div>\n      <h1>{title}</h1>\n      <h3>{tip}</h3>\n\n      {homeLink && (\n        <p>\n          You could go back to the <StyledLink to=\"/\">Home page</StyledLink>\n        </p>\n      )}\n    </div>\n  </div>\n);\n\nErrorPage.propTypes = {\n  title: string,\n  tip: string,\n  homeLink: bool\n};\n\nexport default ErrorPage;\n","import React from 'react';\n\nimport ErrorPage from './ErrorPage';\n\nconst NotFound = ({ className }) => (\n  <ErrorPage\n    title=\"Page not found\"\n    tip=\"Maybe you forget to save a new board?\"\n    homeLink\n    className={className}\n  />\n);\n\nexport default NotFound;\n","import styled from '@emotion/styled/macro';\nimport { getColumns } from './helpers';\nimport NotFound from '../NotFound';\n\nexport const StyledContainer = styled.div`\n  display: grid;\n  grid-gap: 20px;\n  grid-template-columns: repeat(${getColumns}, 1fr);\n  grid-auto-rows: 1fr;\n`;\n\nexport const StyledNotFound = styled(NotFound)`\n  background: #211f39;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: 2000;\n\n  > div {\n    padding: 0 15px;\n    text-align: center;\n  }\n`;\n","export const getColumns = props => props.columns;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setCurrentBoard } from '../../actions/actionCreators';\n\nimport WidgetList from '../WidgetList';\nimport { StyledContainer, StyledNotFound } from './styled';\n\nconst Board = ({ boardId, className }) => {\n  const currentBoard = useSelector(({ boards }) => boards.boardsById[boardId]);\n  const { columns, widgets } = currentBoard || {};\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    boardId && dispatch(setCurrentBoard(boardId));\n  }, [dispatch, boardId]);\n\n  if (!currentBoard) {\n    return <StyledNotFound />;\n  }\n\n  return (\n    <StyledContainer className={className} columns={columns}>\n      <WidgetList widgets={widgets} />\n    </StyledContainer>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Board from './Board';\n\nconst IndexBoard = () => {\n  const [firstBoardId] = useSelector(({ boards }) => boards.allBoards);\n\n  return <Board boardId={firstBoardId} />;\n};\n\nexport default IndexBoard;\n","import styled from '@emotion/styled/macro';\n\nimport { Typography } from '@material-ui/core';\n\nexport const StyledTimer = styled(Typography)`\n  margin-right: 20px;\n`;\n","import React, { useEffect } from 'react';\n\nimport { useBoardSwitching, usePrevious } from './hooks';\nimport { formatTime } from './helpers';\n\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from '@material-ui/icons';\nimport { StyledTimer } from './styled';\n\nconst BoardSwitcher = ({ className }) => {\n  const {\n    handleBoardsSwitch,\n    handlePlayToggle,\n    handleResetTimeElapsed,\n    hasBoardsToSwitch,\n    isPlaying,\n    isDisable,\n    nextBoardTitle,\n    prevBoardTitle,\n    switchInterval,\n    timeElapsed\n  } = useBoardSwitching();\n  const timeLeft = switchInterval - timeElapsed;\n  const previousSwitchInterval = usePrevious(switchInterval);\n\n  useEffect(() => {\n    if (previousSwitchInterval !== switchInterval) {\n      handleResetTimeElapsed();\n    }\n  })\n\n  if (!hasBoardsToSwitch || isDisable) {\n    return null;\n  }\n\n  return (\n    <div className={className}>\n      <StyledTimer>{formatTime(timeLeft)}</StyledTimer>\n      <Tooltip title={prevBoardTitle} placement=\"bottom-end\">\n        <IconButton\n          onClick={handleBoardsSwitch('prev')}\n          color=\"inherit\"\n          aria-label=\"Next board\"\n          edge=\"start\"\n        >\n          <SkipPrevious />\n        </IconButton>\n      </Tooltip>\n      <IconButton\n        onClick={handlePlayToggle}\n        color=\"inherit\"\n        aria-label=\"Auto switch boards\"\n        edge=\"start\"\n      >\n        {isPlaying ? <Pause /> : <PlayArrow />}\n      </IconButton>\n      <Tooltip title={nextBoardTitle} placement=\"bottom-end\">\n        <IconButton\n          onClick={handleBoardsSwitch('next')}\n          color=\"inherit\"\n          aria-label=\"Next board\"\n          edge=\"start\"\n        >\n          <SkipNext />\n        </IconButton>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default BoardSwitcher;\n","import { useCallback, useEffect, useState, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\n\nimport {\n  getSwitcherBoards,\n  getSwitchInterval,\n  getBoardTitle,\n  getCurrentBoardId\n} from '../../selectors';\nimport { getPrevAndNextIndex } from './helpers';\n\nexport const useBoardSwitching = () => {\n  const switcherBoards = useSelector(getSwitcherBoards);\n  const currentBoardId = useSelector(getCurrentBoardId);\n  const hasBoardsToSwitch = switcherBoards.length > 1;\n  const boardIndex = switcherBoards.includes(currentBoardId)\n    ? switcherBoards.indexOf(currentBoardId)\n    : 0;\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [prevBoardIndex, nextBoardIndex] = getPrevAndNextIndex(\n    switcherBoards,\n    boardIndex\n  );\n  const switchInterval = useSelector(state =>\n    getSwitchInterval(state, switcherBoards[boardIndex])\n  );\n  const prevBoardTitle = useSelector(state =>\n    getBoardTitle(state, switcherBoards[prevBoardIndex])\n  );\n  const nextBoardTitle = useSelector(state =>\n    getBoardTitle(state, switcherBoards[nextBoardIndex])\n  );\n  const isDisable = !switcherBoards.includes(currentBoardId);\n\n  const switchBoard = useCallback(\n    direction => {\n      const switchDirection = {\n        next: nextBoardIndex,\n        prev: prevBoardIndex\n      };\n      const currentBoardIndex = switchDirection[direction];\n\n      navigate(switcherBoards[currentBoardIndex] || switcherBoards[0]);\n    },\n    [nextBoardIndex, prevBoardIndex, switcherBoards]\n  );\n\n  const handleBoardsSwitch = direction => () => {\n    if (!hasBoardsToSwitch) {\n      return;\n    }\n\n    switchBoard(direction);\n    setTimeElapsed(0);\n    setIsPlaying(false);\n  };\n\n  const handlePlayToggle = () => {\n    setIsPlaying(prevState => !prevState);\n  };\n\n  const handleResetTimeElapsed = () => {\n    setTimeElapsed(0);\n  }\n\n  useEffect(() => {\n    if (isPlaying) {\n      const interval = setInterval(() => {\n        setTimeElapsed(prevState => prevState + 1);\n\n        if (timeElapsed >= switchInterval) {\n          switchBoard('next');\n          setTimeElapsed(0);\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [isPlaying, timeElapsed, switchInterval, switchBoard]);\n\n  return {\n    handleBoardsSwitch,\n    handlePlayToggle,\n    handleResetTimeElapsed,\n    hasBoardsToSwitch,\n    isPlaying,\n    isDisable,\n    nextBoardTitle,\n    prevBoardTitle,\n    switchInterval,\n    timeElapsed\n  };\n};\n\nexport const usePrevious = (value) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}","export const formatTime = timeInSec => {\n  const seconds = timeInSec % 60;\n  const minutes = Math.floor(timeInSec / 60);\n  const leadingZero = seconds < 10 ? 0 : '';\n\n  return `${minutes}:${leadingZero}${seconds}`;\n};\n\nexport const getPrevAndNextIndex = (array, currentIndex) => {\n  const lastIndex = array.length - 1;\n  const nextIndex = currentIndex < lastIndex ? currentIndex + 1 : 0;\n  const prevIndex = currentIndex > 0 ? currentIndex - 1 : lastIndex;\n\n  return [prevIndex, nextIndex];\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useToggle } from '../../hooks';\nimport { login, logout } from '../../actions/thunks';\nimport { clearLoginErrorMessage } from '../../actions/actionCreators';\nimport { getIsAuthenticated } from '../../selectors';\n\nimport { Button, IconButton, TextField, Typography } from '@material-ui/core';\nimport { AccountCircle, PowerSettingsNew } from '@material-ui/icons';\nimport AppDialog from './../AppDialog';\nimport { StyledFieldset } from '../styled';\nimport { getCredentials } from './helpers';\n\nconst UserLogin = () => {\n  const dispatch = useDispatch();\n  const errorMsg = useSelector(({ app }) => app.loginErrorMessage);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      handleDialogClose();\n    }\n  }, [isAuthenticated, handleDialogClose]);\n\n  const handleLoginButtonClick = () => {\n    const credentials = getCredentials();\n    dispatch(login(credentials));\n  };\n\n  const handleLoginOnEnterPress = event => {\n    if (event.key === 'Enter') {\n      handleLoginButtonClick();\n    }\n  };\n\n  const handleLoginDialogOpen = () => {\n    openDialog(true);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  function closeDialog() {\n    handleDialogClose();\n    dispatch(clearLoginErrorMessage());\n  }\n\n  return (\n    <>\n      {!isAuthenticated && (\n        <IconButton\n          onClick={handleLoginDialogOpen}\n          aria-label=\"Login\"\n          color=\"inherit\"\n          edge=\"start\"\n          data-cy=\"user-login-login-icon\"\n        >\n          <AccountCircle />\n        </IconButton>\n      )}\n      {isAuthenticated && (\n        <IconButton\n          onClick={handleLogout}\n          aria-label=\"Logout\"\n          color=\"inherit\"\n          edge=\"start\"\n          data-cy=\"user-login-logout-icon\"\n        >\n          <PowerSettingsNew />\n        </IconButton>\n      )}\n      <AppDialog\n        handleDialogClose={closeDialog}\n        open={dialogOpened}\n        title=\"User Login\"\n      >\n        <StyledFieldset component=\"fieldset\">\n          {errorMsg && (\n            <Typography color=\"error\" data-cy=\"user-login-error-messages\">\n              {errorMsg}\n            </Typography>\n          )}\n          <TextField\n            autoFocus\n            id=\"username\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            label=\"Username\"\n            margin=\"normal\"\n            onKeyPress={handleLoginOnEnterPress}\n            inputProps={{ 'data-cy': 'user-login-username-input' }}\n          />\n          <TextField\n            id=\"password\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            type=\"password\"\n            label=\"Password\"\n            margin=\"normal\"\n            onKeyPress={handleLoginOnEnterPress}\n            inputProps={{ 'data-cy': 'user-login-password-input' }}\n          />\n          <Button\n            color=\"primary\"\n            onClick={handleLoginButtonClick}\n            variant=\"contained\"\n            data-cy=\"user-login-submit-button\"\n          >\n            Login\n          </Button>\n        </StyledFieldset>\n      </AppDialog>\n    </>\n  );\n};\n\nexport default UserLogin;\n","export const getCredentials = () => {\n  const usernameField = document.getElementById('username');\n  const passwordField = document.getElementById('password');\n  return {\n    username: usernameField ? usernameField.value : '',\n    password: passwordField ? passwordField.value : ''\n  };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { func } from 'prop-types';\nimport styled from '@emotion/styled/macro';\nimport { useTheme } from '@material-ui/core/styles';\n\nimport { setSize } from '../helpers';\n\nimport { AppBar, Container, Toolbar, IconButton } from '@material-ui/core';\nimport { DashboardRounded } from '@material-ui/icons';\nimport { StyledTitle } from './styled';\n\nimport BoardSwitcher from './BoardSwitcher';\nimport UserLogin from './UserLogin';\n\nconst StyledBoardSwitcher = styled(BoardSwitcher)`\n  align-items: center;\n  display: flex;\n  margin-left: auto;\n`;\n\nconst StyledAppBar = styled(AppBar)`\n  background-color: #211f39;\n  box-shadow: none;\n`;\n\nconst StyledToolbar = styled(Toolbar)`\n  min-height: ${setSize(10)};\n`;\n\nconst NavBar = ({ handleDrawerToggle }) => {\n  const theme = useTheme();\n  const title = useSelector(({ ui, boards }) =>\n    ui.currentBoard && boards.boardsById[ui.currentBoard]\n      ? boards.boardsById[ui.currentBoard].title\n      : ''\n  );\n\n  return (\n    <StyledAppBar position=\"fixed\">\n      <Container maxWidth=\"xl\">\n        <StyledToolbar disableGutters theme={theme}>\n          <IconButton\n            onClick={handleDrawerToggle(true)}\n            aria-label=\"Open boards drawer\"\n            color=\"inherit\"\n            edge=\"start\"\n            data-cy=\"navbar-show-drawer-button\"\n          >\n            <DashboardRounded />\n          </IconButton>\n          <UserLogin />\n          <StyledTitle\n            component=\"h2\"\n            variant=\"h3\"\n            theme={theme}\n            data-cy=\"navbar-title-header\"\n          >\n            {title}\n          </StyledTitle>\n          <StyledBoardSwitcher />\n        </StyledToolbar>\n      </Container>\n    </StyledAppBar>\n  );\n};\n\nNavBar.propTypes = {\n  handleDrawerToggle: func.isRequired\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst ValidationMessages = ({ className, messages, ...others }) => {\n  if (messages === undefined) {\n    return null;\n  }\n\n  return (\n    <ul className={className} {...others}>\n      {messages.map(message => (\n        <li>{message}</li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ValidationMessages;\n","import styled from '@emotion/styled/macro';\n\nimport { FormControl } from '@material-ui/core';\nimport ValidationMessages from '../ValidationMessages';\n\nexport const StyledFieldset = styled(FormControl)`\n  display: flex;\n  margin-bottom: 32px;\n  min-width: 300px;\n`;\n\nexport const StyledValidationMessages = styled(ValidationMessages)`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n","import { object, string, number, boolean } from 'yup';\n\nimport {\n  COLUMNS_MAX,\n  COLUMNS_MIN,\n  BOARD_TITLE_LENGTH_LIMIT,\n  SWITCH_INTERVAL_MIN\n} from '../../constants';\n\nconst MAX_TITLE_LENGTH = `Title length must be less than or equal to ${BOARD_TITLE_LENGTH_LIMIT}`;\nconst MIN_TITLE_LENGTH = 'Title cannot be empty';\nconst UNIQUE_MESSAGE = 'Title must be unique';\nconst REQUIRED_TITLE = 'Title is a required field';\n\nconst COLUMNS_NUMBER = `Columns number should be between ${COLUMNS_MIN} and ${COLUMNS_MAX}`;\n\nconst MIN_SWITCH_INTERVAL = `Interval cannot be smaller than ${SWITCH_INTERVAL_MIN}s.`;\n\nconst uniqueTitleTestCreator = (boardId, boards) => ({\n  name: 'uniqueTitle',\n  params: { boards, boardId },\n  message: UNIQUE_MESSAGE,\n  exclusive: true,\n  test: title =>\n    boards.every(board => board.title !== title || board.id === boardId)\n});\n\nexport const createValidationSchema = (boardId, boards) =>\n  object().shape({\n    title: string()\n      .trim()\n      .max(BOARD_TITLE_LENGTH_LIMIT, MAX_TITLE_LENGTH)\n      .min(1, MIN_TITLE_LENGTH)\n      .test(uniqueTitleTestCreator(boardId, boards))\n      .required(REQUIRED_TITLE),\n    columns: number()\n      .min(COLUMNS_MIN, COLUMNS_NUMBER)\n      .max(COLUMNS_MAX, COLUMNS_NUMBER)\n      .required(),\n    autoSwitch: boolean().required(),\n    switchInterval: number().when('autoSwitch', {\n      is: true,\n      then: number()\n        .min(SWITCH_INTERVAL_MIN, MIN_SWITCH_INTERVAL)\n        .required(),\n      otherwise: number().notRequired()\n    })\n  });\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { string, number, bool } from 'prop-types';\n\nimport {\n  FormControl,\n  FormControlLabel,\n  Switch,\n  TextField\n} from '@material-ui/core';\nimport { StyledFieldset, StyledValidationMessages } from './styled';\nimport { useFormData } from '../../hooks';\nimport { getBoards } from '../../selectors';\nimport { createValidationSchema } from './validators';\nimport { trimLeadingZeros } from '../../helpers';\n\nimport NumberInput from '../widgets/dialogFields/NumberInput';\n\nconst BoardForm = ({\n  onSubmit,\n  renderActions,\n  boardId,\n  ...initialFormValues\n}) => {\n  const boards = useSelector(getBoards);\n  const validationSchema = createValidationSchema(boardId, boards);\n  const { values, handleChange, handleSubmit, errors } = useFormData(\n    initialFormValues,\n    validationSchema,\n    true\n  );\n\n  const handleNumberInput = event => {\n    const {\n      target: { value }\n    } = event;\n\n    event.target.value = trimLeadingZeros(value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)} noValidate=\"novalidate\">\n      <StyledFieldset component=\"fieldset\">\n        <TextField\n          onChange={handleChange('title')}\n          id=\"title\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          label=\"Title\"\n          margin=\"normal\"\n          value={values.title}\n          error={errors.title !== undefined}\n          helperText={\n            <StyledValidationMessages\n              messages={errors.title}\n              data-cy={'board-form-title-error'}\n            />\n          }\n          inputProps={{ 'data-cy': 'board-form-title-input' }}\n        />\n        <NumberInput\n          onChange={handleChange('columns')}\n          onInput={handleNumberInput}\n          id=\"columns\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          inputProps={{ 'data-cy': 'board-form-columns-input' }}\n          label=\"Columns\"\n          margin=\"normal\"\n          value={values.columns}\n          error={errors.columns !== undefined}\n          FormHelperTextProps={{ component: 'div' }}\n          helperText={\n            <StyledValidationMessages\n              messages={errors.columns}\n              data-cy=\"board-form-columns-error\"\n            />\n          }\n        />\n        <FormControl margin=\"normal\">\n          <FormControlLabel\n            control={\n              <Switch\n                onChange={handleChange('autoSwitch')}\n                checked={values.autoSwitch}\n                color=\"primary\"\n                value=\"autoSwitch\"\n                inputProps={{ 'data-cy': 'board-form-auto-switch-checkbox' }}\n              />\n            }\n            label=\"Auto switch\"\n          />\n        </FormControl>\n        {values.autoSwitch && (\n          <NumberInput\n            onChange={handleChange('switchInterval')}\n            onInput={handleNumberInput}\n            id=\"switchInterval\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            label=\"Switch interval [s]\"\n            margin=\"normal\"\n            value={values.switchInterval}\n            error={errors.switchInterval !== undefined}\n            FormHelperTextProps={{ component: 'div' }}\n            helperText={\n              <StyledValidationMessages\n                messages={errors.switchInterval}\n                data-cy=\"board-form-switch-interval-error\"\n              />\n            }\n            inputProps={{ 'data-cy': 'board-form-switch-interval-input' }}\n          />\n        )}\n      </StyledFieldset>\n      {renderActions()}\n    </form>\n  );\n};\n\nBoardForm.propTypes = {\n  autoSwitch: bool,\n  columns: number,\n  switchInterval: number,\n  title: string\n};\n\nBoardForm.defaultProps = {\n  autoSwitch: true,\n  columns: 8,\n  switchInterval: 60,\n  title: 'Board'\n};\n\nexport default BoardForm;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styled from '@emotion/styled/macro';\n\nimport { useToggle } from '../hooks';\nimport { addNewBoard } from '../actions/thunks';\nimport { getIsAuthenticated } from '../selectors';\n\nimport { Button, IconButton } from '@material-ui/core';\nimport { Add } from '@material-ui/icons';\nimport AppDialog from './AppDialog';\nimport CancelButton from './CancelButton';\nimport BoardForm from './BoardForm';\n\nconst StyledCancelButton = styled(CancelButton)`\n  margin-left: 20px;\n`;\n\nconst AddBoard = () => {\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  const handleAddBoardClick = event => {\n    event.stopPropagation();\n    openDialog();\n  };\n\n  const handleAddActionClick = values => {\n    dispatch(addNewBoard(values));\n    handleDialogClose();\n  };\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <>\n      <IconButton\n        onClick={handleAddBoardClick}\n        color=\"primary\"\n        data-cy=\"add-board-add-button\"\n      >\n        <Add />\n      </IconButton>\n      <AppDialog\n        disableBackdropClick={true}\n        handleDialogClose={handleDialogClose}\n        open={dialogOpened}\n        title=\"Add new board\"\n      >\n        <BoardForm\n          onSubmit={handleAddActionClick}\n          renderActions={() => (\n            <>\n              <Button\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                data-cy=\"board-form-submit-button\"\n              >\n                Add\n              </Button>\n              <StyledCancelButton\n                handleCancelClick={handleDialogClose}\n                data-cy=\"board-form-cancel-button\"\n              />\n            </>\n          )}\n        />\n      </AppDialog>\n    </>\n  );\n};\n\nexport default AddBoard;\n","import React from 'react';\nimport { CheckCircle, Error, Info, Warning } from '@material-ui/icons';\n\nconst IconVariant = ({ variant }) => {\n  const iconByVariant = {\n    success: CheckCircle,\n    warning: Warning,\n    error: Error,\n    info: Info\n  };\n\n  const Icon =\n    variant in iconByVariant ? iconByVariant[variant] : iconByVariant['info'];\n\n  return <Icon />;\n};\n\nexport default IconVariant;\n","import React from 'react';\nimport styled from '@emotion/styled/macro';\n\nimport { mapVariantToColor } from './helpers';\n\nimport { SnackbarContent } from '@material-ui/core';\n\nexport const StyledSnackbarContent = styled(({ theme, variant, ...other }) => (\n  <SnackbarContent {...other} />\n))`\n  background: ${({ theme, variant }) => mapVariantToColor(theme, variant)};\n`;\n","export const mapVariantToColor = (theme, variant) =>\n  theme.palette.snackbarVariant[variant];\n","import React from 'react';\nimport { func, oneOf, string } from 'prop-types';\nimport { useTheme } from '@material-ui/styles';\n\nimport { Box } from '@material-ui/core';\nimport IconVariant from '../IconVariant';\nimport { StyledSnackbarContent } from './styled';\n\nconst SnackbarVariantContent = ({ message, variant }) => {\n  const theme = useTheme();\n\n  return (\n    <StyledSnackbarContent\n      theme={theme}\n      variant={variant}\n      message={\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconVariant variant={variant} />\n          <Box marginLeft={1}>{message}</Box>\n        </Box>\n      }\n    />\n  );\n};\n\nSnackbarVariantContent.propTypes = {\n  variant: oneOf(['error', 'info', 'success', 'warning']).isRequired,\n  message: string,\n  onClose: func\n};\n\nexport default SnackbarVariantContent;\n","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useToggle } from '../hooks';\nimport { createGetNotification } from '../selectors';\nimport { deleteNotification } from '../actions/actionCreators';\n\nimport Snackbar from '@material-ui/core/Snackbar/index';\nimport SnackbarVariantContent from './SnackbarVariantContent';\n\nconst SnackbarWithVariant = React.memo(\n  ({ notificationId, vertical, horizontal, 'data-cy': dataCy }) => {\n    const getNotification = useMemo(createGetNotification, []);\n    const { type, message, duration } = useSelector(state =>\n      getNotification(state, notificationId)\n    );\n    const dispatch = useDispatch();\n    const [isOpened, , closeSnackbar] = useToggle(true);\n\n    const handleClose = (event, reason) => {\n      if (reason !== 'timeout') {\n        return;\n      }\n\n      closeSnackbar();\n    };\n\n    const handleExited = () => dispatch(deleteNotification(notificationId));\n\n    return (\n      <Snackbar\n        onClose={handleClose}\n        onExited={handleExited}\n        anchorOrigin={{ vertical, horizontal }}\n        autoHideDuration={duration}\n        disableWindowBlurListener\n        open={isOpened}\n        data-cy={dataCy}\n      >\n        <SnackbarVariantContent variant={type} message={message} />\n      </Snackbar>\n    );\n  }\n);\n\nexport default SnackbarWithVariant;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { getAllNotifications } from '../../selectors';\n\nimport SnackbarWithVariant from '../SnackbarWithVariant';\n\nconst Notifications = () => {\n  const allNotifications = useSelector(getAllNotifications);\n\n  return allNotifications.map(id => (\n    <SnackbarWithVariant\n      horizontal=\"center\"\n      key={id}\n      notificationId={id}\n      vertical=\"top\"\n      data-cy=\"notification-snackbar\"\n    />\n  ));\n};\n\nexport default Notifications;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from '@emotion/styled/macro';\n\nimport { saveBoard } from '../actions/thunks';\n\nimport { Button } from '@material-ui/core';\nimport BoardForm from './BoardForm';\nimport CancelButton from './CancelButton';\n\nconst StyledCancelButton = styled(CancelButton)`\n  margin-left: 20px;\n`;\n\nconst EditBoard = ({ closeDialog, id, ...initialFormValues }) => {\n  const dispatch = useDispatch();\n\n  const handleSaveClick = values => {\n    dispatch(saveBoard({ id, ...values }));\n    closeDialog();\n  };\n\n  return (\n    <BoardForm\n      {...initialFormValues}\n      onSubmit={handleSaveClick}\n      boardId={id}\n      renderActions={() => (\n        <>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            data-cy=\"board-form-submit-button\"\n          >\n            Save\n          </Button>\n          <StyledCancelButton\n            handleCancelClick={closeDialog}\n            data-cy=\"board-form-cancel-button\"\n          />\n        </>\n      )}\n    />\n  );\n};\n\nexport default EditBoard;\n","import React, { forwardRef } from 'react';\nimport styled from '@emotion/styled/macro';\n\nimport { Card, CardActions } from '@material-ui/core';\n\nexport const StyledCard = styled(\n  forwardRef(({ isLoggedIn, isDragging, isOver, theme, ...other }, ref) => (\n    <Card {...other} ref={ref} />\n  ))\n)`\n  background-color: ${({ theme }) => theme.palette.background.board.card}};\n  box-shadow: none;\n  cursor: ${({ isLoggedIn }) => (isLoggedIn ? 'move' : 'default')};\n  position: relative;\n\n  ${({ isDragging, isOver, theme }) =>\n    isDragging &&\n    `\n    &::before {\n      background-color: ${theme.palette.background.board.dragged};\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\n      border-radius: inherit;\n      content: '';\n      display: block;\n      height: 100%;\n      position: absolute;\n      z-index: 2;\n      opacity: ${isDragging ? 1 : 0};\n      width: 100%;\n    }\n  `}\n`;\n\nexport const StyledCardActions = styled(CardActions)`\n  justify-content: flex-end;\n  z-index: 1;\n`;\n","import React, { useRef } from 'react';\nimport { object } from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { navigate } from '@reach/router';\nimport { useTheme } from '@material-ui/styles';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport { useToggle } from '../../hooks';\nimport { deleteBoardWithWidgets } from '../../actions/thunks';\nimport { reorderBoard } from '../../actions/thunks';\nimport { ItemTypes } from '../../constants';\nimport { getIsAuthenticated } from '../../selectors';\n\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\nimport { Delete, Edit } from '@material-ui/icons';\nimport AppDialog from '../AppDialog';\nimport EditBoard from '../EditBoard';\nimport { StyledCard, StyledCardActions } from './styled';\n\nconst BoardCard = ({ boardData, index, className }) => {\n  const { autoSwitch, columns, id, switchInterval, title } = boardData;\n  const [open, openDialog, handleDialogClose] = useToggle();\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  const ref = useRef(null);\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.BOARD, id, index },\n    canDrag: isAuthenticated,\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.BOARD,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const { id: sourceId, index: sourceIndex } = item;\n      const targetIndex = index;\n\n      if (sourceIndex === targetIndex) {\n        return;\n      }\n\n      const { top, bottom } = ref.current.getBoundingClientRect();\n      const dropTargetMiddleY = bottom - (bottom - top) / 2;\n      const { y: dragSourceMouseY } = monitor.getClientOffset();\n\n      const hasPointerPassedMiddle =\n        (sourceIndex < targetIndex && dragSourceMouseY >= dropTargetMiddleY) ||\n        (sourceIndex > targetIndex && dragSourceMouseY <= dropTargetMiddleY);\n\n      if (!hasPointerPassedMiddle) {\n        return;\n      }\n\n      dispatch(reorderBoard(sourceId, targetIndex));\n      item.index = targetIndex;\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      dropResult: monitor.getSourceClientOffset()\n    })\n  });\n\n  drag(drop(ref));\n\n  const handleBoardClick = boardId => () => {\n    navigate(boardId);\n  };\n\n  const handleEditClick = event => {\n    event.stopPropagation();\n    openDialog();\n  };\n\n  const handleDeleteClick = event => {\n    event.stopPropagation();\n    dispatch(deleteBoardWithWidgets(id));\n  };\n\n  return (\n    <div className={className} data-cy=\"board-card\">\n      <StyledCard\n        onClick={handleBoardClick(id)}\n        theme={theme}\n        isLoggedIn={isAuthenticated}\n        isDragging={isDragging}\n        isOver={isOver}\n        ref={ref}\n      >\n        <CardHeader\n          title={title}\n          titleTypographyProps={{\n            component: 'h3',\n            variant: 'subtitle2',\n            color: 'textPrimary'\n          }}\n          data-cy=\"board-card-header\"\n        />\n        <CardContent></CardContent>\n        {isAuthenticated && (\n          <StyledCardActions>\n            <IconButton\n              onClick={handleEditClick}\n              aria-label=\"edit\"\n              size=\"small\"\n              data-cy=\"board-card-edit-button\"\n            >\n              <Edit />\n            </IconButton>\n            <IconButton\n              onClick={handleDeleteClick}\n              aria-label=\"delete\"\n              size=\"small\"\n              data-cy=\"board-card-delete-button\"\n            >\n              <Delete />\n            </IconButton>\n          </StyledCardActions>\n        )}\n      </StyledCard>\n      <AppDialog\n        disableBackdropClick={true}\n        handleDialogClose={handleDialogClose}\n        open={open}\n        title={`Edit ${title}`}\n        data-cy=\"board-card-edit-dialog\"\n      >\n        <EditBoard\n          closeDialog={handleDialogClose}\n          autoSwitch={autoSwitch}\n          columns={columns}\n          id={id}\n          switchInterval={switchInterval}\n          title={title}\n        />\n      </AppDialog>\n    </div>\n  );\n};\n\nBoardCard.propTypes = {\n  boardData: object.isRequired\n};\n\nexport default BoardCard;\n","import styled from '@emotion/styled/macro';\n\nimport BoardCard from '../BoardCard';\n\nexport const StyledBoardCard = styled(BoardCard)`\n  margin-bottom: 32px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Box from '@material-ui/core/Box';\nimport { StyledBoardCard } from './styled';\n\nconst BoardList = ({ className }) => {\n  const boards = useSelector(({ boards }) => {\n    const { boardsById, allBoards } = boards;\n\n    return allBoards.map(boardId => boardsById[boardId]);\n  });\n\n  return (\n    <Box className={className}>\n      {boards.map((boardData, index) => (\n        <StyledBoardCard\n          boardData={boardData}\n          key={boardData.id}\n          index={index}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default BoardList;\n","import React from 'react';\n\nimport logo from '../assets/images/cogBoard-white.png';\n\nconst Logo = ({ className }) => (\n  <img className={className} src={logo} alt=\"Cogboard logo\" />\n);\n\nexport default Logo;\n","import styled from '@emotion/styled/macro';\n\nimport { Box, Fab } from '@material-ui/core';\nimport BoardList from '../BoardList';\nimport Logo from '../Logo';\n\nexport const StyledActions = styled(Box)`\n  bottom: 50px;\n  position: fixed;\n  right: 50px;\n  z-index: 10000;\n`;\n\nexport const StyledSaveFab = styled(Fab)`\n  margin-right: 16px;\n`;\n\nexport const StyledBoardList = styled(BoardList)`\n  padding: 32px;\n  width: 100%;\n`;\n\nexport const StyledMain = styled.main`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 110px;\n`;\n\nexport const StyledLogo = styled(Logo)`\n  width: 40%;\n  margin-bottom: 32px;\n`;\n\nexport const StyledDrawerContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 32px;\n  width: 250px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Router } from '@reach/router';\n\nimport { useToggle } from '../../hooks';\nimport { saveData } from '../../actions/thunks';\nimport { getIsAuthenticated } from '../../selectors';\n\nimport { Container, Drawer, Fab } from '@material-ui/core';\nimport { Add, Save } from '@material-ui/icons';\nimport AppDialog from '../AppDialog';\nimport AddWidget from '../AddWidget';\nimport BoardIndex from '../BoardIndex';\nimport Board from '../Board';\nimport NavBar from '../NavBar';\nimport AddBoard from '../AddBoard';\nimport Notifications from '../Notifications';\nimport {\n  StyledActions,\n  StyledBoardList,\n  StyledDrawerContainer,\n  StyledLogo,\n  StyledMain,\n  StyledSaveFab\n} from './styled';\n\nconst MainTemplate = () => {\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\n  const isDataChanged = useSelector(({ app }) => app.isDataChanged);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n  const [drawerOpened, setDrawerOpened] = useState(false);\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\n  const dispatch = useDispatch();\n\n  const handleSaveDataClick = () => {\n    dispatch(saveData());\n  };\n\n  const handleAddWidgetClick = () => {\n    openDialog(true);\n  };\n\n  const handleDrawerToggle = opened => event => {\n    const { type, key } = event;\n\n    if (type === 'keydown' && (key === 'Tab' || key === 'Shift')) {\n      return;\n    }\n\n    setDrawerOpened(opened);\n  };\n\n  return (\n    <>\n      <NavBar handleDrawerToggle={handleDrawerToggle} />\n      <Drawer onClose={handleDrawerToggle(false)} open={drawerOpened}>\n        <StyledDrawerContainer\n          onClick={handleDrawerToggle(false)}\n          onKeyDown={handleDrawerToggle(false)}\n          role=\"presentation\"\n        >\n          <StyledLogo />\n          <AddBoard />\n          <StyledBoardList />\n        </StyledDrawerContainer>\n      </Drawer>\n      <StyledMain>\n        <Container maxWidth=\"xl\">\n          <Router>\n            <BoardIndex path=\"/\" />\n            <Board path=\"/:boardId\" />\n          </Router>\n          <StyledActions>\n            {isAuthenticated && isDataChanged && (\n              <StyledSaveFab\n                onClick={handleSaveDataClick}\n                aria-label=\"Save Data\"\n                color=\"secondary\"\n                data-cy=\"main-template-save-data-button\"\n              >\n                <Save />\n              </StyledSaveFab>\n            )}\n            {isAuthenticated && currentBoardId && (\n              <Fab\n                onClick={handleAddWidgetClick}\n                aria-label=\"Add Widget\"\n                color=\"primary\"\n                data-cy=\"main-template-add-widget-button\"\n              >\n                <Add />\n              </Fab>\n            )}\n          </StyledActions>\n        </Container>\n      </StyledMain>\n      <Notifications />\n      <AppDialog\n        disableBackdropClick={true}\n        handleDialogClose={handleDialogClose}\n        open={dialogOpened}\n        title=\"Add new widget\"\n        data-cy=\"main-template-add-widget-dialog\"\n      >\n        <AddWidget closeDialog={handleDialogClose} />\n      </AppDialog>\n    </>\n  );\n};\n\nexport default MainTemplate;\n","import React from 'react';\n\nimport ErrorPage from './ErrorPage';\n\nconst ServerErrorPage = props => (\n  <ErrorPage\n    title=\"Interal Server Error\"\n    tip=\"Ooops... Something gone wrong. For more details check server's logs.\"\n  />\n);\n\nexport default ServerErrorPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { Router } from '@reach/router';\n\nimport { fetchInitialData } from './actions/thunks';\nimport {\n  updateWidget,\n  saveDataSuccess,\n  loginSuccess\n} from './actions/actionCreators';\nimport { theme } from './theme';\n\nimport MainTemplate from './components/MainTemplate';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { isAuthenticated } from './utils/auth';\nimport ServerErrorPage from './components/ServerErrorPage';\n\nfunction App() {\n  const appInitialized = useSelector(({ app }) => app.initialized);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isAuthenticated()) {\n      dispatch(loginSuccess());\n    }\n\n    dispatch(fetchInitialData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (appInitialized) {\n      const socket = new WebSocket(\n        `ws://${window.location.hostname}:${process.env.REACT_APP_WS_PORT}`\n      );\n      const handleMessageReceive = ({ data: dataJson }) => {\n        const { eventType, ...data } = JSON.parse(dataJson);\n\n        if (eventType === 'widget-update') {\n          dispatch(updateWidget(data));\n        } else if (eventType === 'notification-config-save') {\n          dispatch(saveDataSuccess());\n        }\n      };\n\n      socket.addEventListener('message', handleMessageReceive);\n\n      return () => {\n        socket.removeEventListener('message', handleMessageReceive);\n      };\n    }\n  }, [appInitialized, dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <DndProvider backend={HTML5Backend}>\n        <CssBaseline />\n        <Router>\n          <ServerErrorPage path=\"error-page\" />\n          {appInitialized && <MainTemplate path=\"/*\" />}\n        </Router>\n      </DndProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\n\nexport default function configureStore() {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, composedEnhancers);\n\n  return store;\n}\n"],"sourceRoot":""}