{"version":3,"sources":["assets/images/cogBoard-white.png","reducers/app/initialized.js","actions/types.js","reducers/app/dataFetching.js","reducers/app/isDataChanged.js","reducers/app/isDataSaving.js","reducers/app/loginErrorMessage.js","reducers/app/isAuthenticated.js","reducers/app/index.js","reducers/ui/currentBoard.js","reducers/ui/index.js","reducers/helpers.js","reducers/boards/boardsById.js","reducers/boards/allBoards.js","reducers/boards/index.js","reducers/widgets/widgetsById.js","reducers/widgets/allWidgets.js","reducers/widgets/index.js","reducers/notifications/notificationsById.js","reducers/notifications/allNotifications.js","reducers/notifications/index.js","reducers/index.js","actions/helpers.js","helpers/index.js","constants/index.js","actions/actionCreators.js","utils/auth.js","actions/thunks.js","theme.js","hooks/index.js","selectors/index.js","components/AppDialog.js","components/widgets/types/DefaultWidget.js","components/IframeEmbed.js","components/styled/index.js","components/widgets/types/ExampleWidget.js","components/widgets/types/JenkinsJobWidget.js","components/widgets/types/SonarQubeWidget.js","components/Loader/styled.js","components/Loader/index.js","components/widgets/types/ServiceCheckWidget.js","components/widgets/types/TextWidget/styled.js","components/widgets/types/TextWidget/index.js","components/widgets/types/BambooPlanWidget.js","components/widgets/types/WorldClockWidget/helpers.js","components/widgets/types/WorldClockWidget/styled.js","components/widgets/types/WorldClockWidget/index.js","components/widgets/types/CheckboxWidget/helpers.js","components/StatusIcon.js","components/widgets/types/CheckboxWidget/index.js","components/widgets/types/AemHealthcheckWidget/index.js","components/widgets/types/IframeEmbedWidget/helpers.js","components/widgets/index.js","components/widgets/types/IframeEmbedWidget/index.js","components/widgets/dialogFields/helpers.js","components/DropdownField.js","components/widgets/dialogFields/EndpointInput.js","components/TabPanel.js","components/ValidationMessages.js","components/CancelButton.js","components/WidgetForm/styled.js","components/widgets/dialogFields/NumberInput.js","components/widgets/dialogFields/TextInput.js","components/widgets/dialogFields/SonarQubeMetricsInput.js","components/widgets/dialogFields/DisplayValueSelect.js","components/widgets/dialogFields/MultilineTextInput.js","components/widgets/dialogFields/CheckboxInput.js","components/widgets/dialogFields/AemHealthcheckInput.js","components/widgets/dialogFields/conditionallyHidden.js","components/widgets/dialogFields/SwitchInput.js","components/widgets/dialogFields/styled.js","components/widgets/dialogFields/index.js","components/validation/index.js","components/WidgetForm/validators.js","components/DynamicForm/index.js","components/DynamicForm/helpers.js","components/WidgetTypeForm/index.js","components/WidgetForm/index.js","components/AddWidget.js","components/Widget/styled.js","components/ErrorMessage.js","components/WidgetContent.js","components/LastUpdate/styled.js","components/LastUpdate/index.js","components/Widget/helpers.js","components/EditWidget.js","components/MoreMenu.js","components/ConfirmationDialog/styled.js","components/ConfirmationDialog/index.js","components/Widget/index.js","components/WidgetList.js","components/ErrorPage/styled.js","components/ErrorPage/index.js","components/NotFound.js","components/BoardForm/styled.js","components/BoardForm/index.js","components/AddBoard.js","components/NoBoards.js","components/Board/styled.js","components/Board/helpers.js","components/Board/index.js","components/BoardIndex.js","components/BoardSwitcher/styled.js","components/BoardSwitcher/index.js","components/BoardSwitcher/hooks.js","components/BoardSwitcher/helpers.js","components/UserLogin/index.js","components/UserLogin/helpers.js","components/NavBar.js","components/IconVariant.js","components/SnackbarVariantContent/styled.js","components/SnackbarVariantContent/helpers.js","components/SnackbarVariantContent/index.js","components/SnackbarWithVariant.js","components/Notifications/index.js","components/EditBoard.js","components/BoardCard/styled.js","components/BoardCard/index.js","components/BoardList/styled.js","components/BoardList/index.js","components/Logo.js","components/MainTemplate/styled.js","components/MainTemplate/index.js","components/ServerErrorPage.js","App.js","serviceWorker.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","initialized","state","arguments","length","undefined","type","dataFetching","isDataChanged","isDataSaving","loginErrorMessage","_ref","payload","isAuthenticated","app","combineReducers","currentBoard","action","boardId","ui","reorderItems","items","sourceId","targetIndex","withoutSource","filter","itemId","concat","Object","toConsumableArray","slice","boardsById","boards","objectSpread","receiveData","_ref2","entries","reduce","newState","_ref3","_ref4","slicedToArray","boardProps","initBoardProps","_ref5","id","defineProperty","addBoard","_ref6","other","objectWithoutProperties","board","editBoard","_ref7","rest","map","_toPropertyKey","deleteBoard","_ref8","widgets","addWidget","_ref9","widgetId","deleteWidget","_ref10","sortedWidgets","sortWidgets","allBoards","reorderBoards","widgetsById","widget","isUpdating","requestUpdate","content","prevContent","updateWidget","editWidget","widgetsById_toPropertyKey","allWidgets","widgetIds","includes","deleteMultipleWidgets","notificationsById","assoc","pushNotification","dissoc","deleteNotification","allNotifications","append","without","notifications","rootReducer","prefix","setSize","factor","theme","spacing","splitPropsGroupName","propName","split","capitalize","toArray","firstLetter","toUpperCase","join","parseYupErrors","errors","result","inner","forEach","error","path","message","push","hasError","URL","TEXT_SIZES","display","value","REQUEST_METHODS","ItemTypes","AEM_HEALTH_CHECKS","inactiveBundles","asyncIndexHealthCheck","codeCacheHealthCheck","DiskSpaceHealthCheck","logErrorHealthCheck","ObservationQueueLengthHealthCheck","resourceSearchPathErrorHealthCheck","requestsStatus","queriesStatus","queryTraversalLimitsBundle","securitychecks","slingJobs","slingDiscoveryOakSynchronizedClocks","systemchecks","ALL_SONARQUBE_METRICS","INITIAL_BOARD_PROPS","autoSwitch","switchInterval","validationMessages","name","max","min","NOTIFICATIONS","userRole","duration","loginSuccess","clearLoginErrorMessage","data","editData","saveDataSuccess","setCurrentBoard","notification","v4","hasToken","getToken","getUserRole","decode","localStorage","getItem","token","expTimestamp","exp","Date","now","isTokenExpired","checkResponseStatus","response","status","statusText","Promise","resolve","navigate","reject","Error","fetchData","url","method","postConfig","body","JSON","stringify","headers","Content-Type","fetch","then","json","createWidgetId","allIds","intRegex","RegExp","_sort","sort","a","b","Number","match","lastId","intId","replace","mapFormValuesToWidgetData","values","columns","goNewLine","rows","config","withAuthentication","actionCallback","_len","args","Array","_key","dispatch","apply","logout","withDataChanged","_len2","_key2","fetchInitialData","console","login","credentials","setItem","setToken","removeItem","makeWidgetUpdaterThunk","beforeUpdateActionCreator","widgetDataCreator","getState","widgetData","_mapDataToState","title","disabled","generalData","prop","serverData","mapDataToState","addNewWidget","currentBoardId","saveWidget","removeWidget","reorderWidgets","reorderBoard","addNewBoard","saveBoard","deleteBoardWithWidgets","_getState2","firstBoardId","setWidgetState","saveData","_getState","createGradient","start","end","createMuiTheme","palette","background","default","paper","card","dragged","UNKNOWN","OK","IN_PROGRESS","UNSTABLE","ERROR_CONNECTION","ERROR_CONFIGURATION","ERROR","FAIL","snackbarVariant","info","blue","success","green","warning","amber","red","shape","borderRadius","typography","h3","fontWeight","letterSpacing","useToggle","initialState","_useState","useState","_useState2","isOpened","setOpened","useFormData","_useState3","_useState4","setValues","_config$onChange","onChange","_config$initialSchema","initialSchema","_useState5","submited","_useState6","setStatus","_useState7","_useState8","validationSchema","setValidationSchema","_useState9","_useState10","setErrors","setFieldValue","fieldName","fieldValue","newValues","_splitPropsGroupName","_splitPropsGroupName2","groupName","groupValues","validateField","fieldsValues","validateAt","abortEarly","errorsTmp","catch","handleChange","updaterFn","arg","event","_event$target","target","valueType","checkbox","checked","number","withValidation","func","preventDefault","validate","stripUnknown","getNotifications","getBoardsById","getNotificationId","_","notificationId","getIsAuthenticated","createSelector","getCurrentBoardId","getBoard","getBoardTitle","getSwitchInterval","getSwitcherBoards","getNotificationsById","createGetNotification","getAllNotifications","getBoards","StyledDialog","styled_base_browser_esm","props","react_default","createElement","Dialog","assign","classes","styles","StyledDialogContent","DialogContent","AppDialog","children","handleDialogClose","open","disableBackdropClick","stopEventPropagation","stopPropagation","onClick","onClose","onKeyDown","aria-labelledby","PaperProps","data-cy","DialogTitle","defaultProps","DefaultWidget","IframeEmbed","iframe","StyledTypography","Typography","FullWidthButtonOutlined","Button","fullWidth","variant","WidgetButton","WidgetIconButton","IconButton","Caption","paragraph","CaptionWithPointer","StyledFieldset","FormControl","StyledIframe","components_IframeEmbed","frameBorder","allowFullScreen","height","StyledFormControlForDropdown","StyledTitle","StyledFormControl","StyledPopoverText","ExampleWidget","serverTime","ts","toLocaleString","styled_Caption","JenkinsJobWidget","displayName","timestamp","branch","dur","Fragment","href","SonarQubeWidget","metrics","version","date","parse","metric","val","key","StyledCircularProgress","CircularProgress","Loader","text","ServiceCheckWidget","statusCode","statusMessage","expectedStatusCode","expectedResponseBody","anchorEl","setAnchorEl","errorStatus","statusCodeMessage","bodyMessage","popoverOpen","Boolean","components_Loader","size","currentTarget","Popover","anchorOrigin","vertical","horizontal","TypographyVariant","CenterWrapper","StyledPre","RotatedStyledPre","OverflowingText","component","ModifiedWidth","componentWidth","SetWidth","TruncatedText","isVertical","parentDimensions","TruncatedPre","ModifiedPre","TextWidget","textSize","targetRef","useRef","centerWrapperDimensions","useSize","ref","TextWidget_TruncatedText","BambooPlanWidget","lifeCycleState","getDateTime","timezone","format","moment","tz","GMT_TIMEZONES","allTimezones","names","duplicatedTimezones","gmtTimezones","parts","parseInt","c","splice","guess","getGmtTimezones","DATE_FORMATS","TIME_FORMATS","TimePre","DatePre","WorldClockWidget","timeZoneId","dateFormat","timeFormat","displayDate","displayTime","initTime","time","setTime","callback","delay","savedCallback","useEffect","current","setInterval","clearInterval","useInterval","getNextStatus","statusArray","statusIndex","findIndex","element","nextStatusIndex","StatusIcon","iconComponents","Check","Close","IndeterminateCheckBoxOutlined","IconComponent","fontSize","CheckboxWidget","useSelector","useDispatch","aria-label","aria-checked","components_StatusIcon","AemHealthcheckWidget","healthChecks","Link","attachHttp","startsWith","widgetTypes","dialogFields","showUpdateTime","validationConstraints","SchedulePeriod","SonarQubeMetricsInput","minArrayLength","Text","IframeEmbedWidget","styled_StyledIframe","AemHealthcheckInput","transformMinValueToHalf","prevValue","Math","floor","ceil","DropdownField","label","dropdownItems","itemsUrl","dataCy","initialLoaded","options","setOptions","loaded","setLoaded","init","Authorization","InputLabel","shrink","htmlFor","Select","input","Input","SelectDisplayProps","EndpointInput","components_DropdownField","endpoints","MenuItem","TabPanel","index","role","hidden","ValidationMessages","className","messages","others","CancelButton","handleCancelClick","color","StyledTabPanel","StyledTabs","Tabs","StyledValidationMessages","StyledCancelButton","NumberInput","step","TextField","inputProps","InputLabelProps","margin","FormHelperTextProps","helperText","TextInput","inputId","useTheme","multiple","renderValue","Checkbox","ListItemText","primary","FormHelperText","DisplayValueSelect","item","MultilineTextInput","multiline","CheckboxInput","FormControlLabel","control","conditionallyHidden","Component","conditionField","condition","SwitchInput","checkboxValue","Switch","StyledNumberInput","WidgetTypeField","sortedWidgetTypes","obj","asc","keyA","keyB","localeCompare","newObj","sortByKey","parseWidgetTypes","validator","string","required","vm","TitleField","initialValue","trim","UniqueTitleField","test","uniqueTitleTestCreator","ColumnField","ColumnFieldSm","valueUpdater","RowFieldSm","NewLineField","boolean","DisabledField","AutoSwitchField","SwitchInterval","when","is","otherwise","notRequired","EndpointField","Path","UrlForContent","IdString","IdNumber","Key","_ref8$minArrayLength","array","ensure","of","_ref9$minArrayLength","StatusCode","lessThan","moreThan","TimeZoneId","DateFormat","TimeFormat","DisplayDate","DisplayTime","RequestBody","ResponseBody","TextSize","RequestMethod","TextOrientation","createValidationSchema","fields","constraints","_Array$prototype","validators","prototype","schema","newSchema","_dialogFields$fieldNa","constraint","groupSchema","object","params","exclusive","every","createWidgetValidationSchema","widgetType","dialogFieldNames","allFields","widgetConstraints","allConstraints","DynamicForm","rootName","createField","field","_dialogFields$field","DialogField","_dialogFields$field$i","dialogFieldProps","valueRef","createValueRef","toLowerCase","groupedFields","Box","justifyContent","WidgetTypeForm","components_DynamicForm","WidgetForm","handleSubmit","handleCancel","initialFormValues","boardColumns","generalFields","_useFormData","tabValue","setTabValue","hasDialogFields","onSubmit","noValidate","newValue","Tab","components_WidgetTypeForm","AddWidget","closeDialog","components_WidgetForm","StyledCard","forwardRef","isLoggedIn","isDragging","isOver","Card","mapStatusToColor","hover","propTypes","isRequired","bool","StyledCardHeader","CardHeader","StyledCardContent","CardContent","ErrorMessage","errorMessage","errorCause","WidgetContent","WidgetType","LastUpdate","lastUpdateTime","styled_StyledTypography","align","gutterBottom","EditWidget","widgetTypeData","MoreMenu","handleMoreMenuClose","aria-controls","aria-haspopup","MoreVert","Menu","keepMounted","MenuList","StyledButtonBox","ConfirmationDialog","handleOk","labelOk","labelCancel","components_AppDialog","core","autoFocus","styled_StyledCancelButton","Widget","shallowEqual","_widgetData$config","_useToggle","_useToggle2","confirmationDialogOpened","openConfirmationDialog","closeConfirmationDialog","_useToggle3","_useToggle4","dialogOpened","openDialog","_useDrag","useDrag","canDrag","collect","monitor","_useDrag2","drag","_useDrop","useDrop","accept","sourceIndex","_ref$current$getBound","getBoundingClientRect","left","right","dropTargetMiddleX","dragSourceMouseX","getClientOffset","x","dropResult","getSourceClientOffset","_useDrop2","drop","handleEditClick","closeMenu","handleDeleteClick","avatar","Warning_default","titleTypographyProps","components_MoreMenu","components_ErrorMessage","components_WidgetContent","components_LastUpdate","renderCardContent","components_EditWidget","components_ConfirmationDialog","WidgetList","components_Widget","StyledLink","ErrorPage","tip","homeLink","to","NotFound","components_ErrorPage","BoardForm","formFields","BoardForm_styled_StyledCancelButton","AddBoard","Add","components_BoardForm","NoBoards","components_AddBoard","StyledContainer","BaseNoData","StyledNotFound","StyledNoBoards","Board","allBoardsLength","components_WidgetList","IndexBoard","_useSelector","components_Board","StyledTimer","BoardSwitcher","_useBoardSwitching","switcherBoards","hasBoardsToSwitch","boardIndex","indexOf","isPlaying","setIsPlaying","timeElapsed","setTimeElapsed","_getPrevAndNextIndex","currentIndex","lastIndex","getPrevAndNextIndex","_getPrevAndNextIndex2","prevBoardIndex","nextBoardIndex","prevBoardTitle","nextBoardTitle","isDisable","switchBoard","useCallback","direction","currentBoardIndex","next","prev","interval","prevState","handleBoardsSwitch","handlePlayToggle","handleResetTimeElapsed","useBoardSwitching","timeLeft","previousSwitchInterval","usePrevious","timeInSec","seconds","minutes","leadingZero","formatTime","Tooltip","placement","edge","SkipPrevious","Pause","PlayArrow","SkipNext","UserLogin","errorMsg","handleLoginButtonClick","usernameField","document","getElementById","passwordField","username","password","getCredentials","handleLoginOnEnterPress","AccountCircle","PowerSettingsNew","onKeyPress","StyledBoardSwitcher","StyledAppBar","AppBar","StyledToolbar","Toolbar","NavBar","handleDrawerToggle","noBoardsFound","position","Container","maxWidth","disableGutters","DashboardRounded","components_UserLogin","IconVariant","iconByVariant","CheckCircle","Warning","Info","Icon","StyledSnackbarContent","SnackbarContent","mapVariantToColor","SnackbarVariantContent","alignItems","components_IconVariant","marginLeft","SnackbarWithVariant","React","memo","getNotification","useMemo","closeSnackbar","Snackbar_default","reason","onExited","autoHideDuration","disableWindowBlurListener","components_SnackbarVariantContent","Notifications","components_SnackbarWithVariant","EditBoard","StyledCardActions","CardActions","BoardCard","boardData","top","bottom","dropTargetMiddleY","dragSourceMouseY","y","styled_StyledCard","Edit","Delete","components_EditBoard","StyledBoardCard","BoardList","Logo","src","logo","alt","StyledActions","StyledSaveFab","Fab","StyledBoardList","StyledMain","StyledLogo","StyledDrawerContainer","MainTemplate","drawerOpened","setDrawerOpened","opened","components_NavBar","Drawer","router_es","BoardIndex","Save","components_Notifications","components_AddWidget","ServerErrorPage","App","appInitialized","socket","WebSocket","window","location","hostname","process","handleMessageReceive","dataJson","_JSON$parse","eventType","addEventListener","removeEventListener","ThemeProvider","esm","backend","HTML5Backend","CssBaseline","components_ServerErrorPage","components_MainTemplate","store","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c23ce73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cogBoard-white.cd833032.png\";","import { RECEIVE_DATA } from '../../actions/types';\n\nconst initialized = (state = false, { type }) => {\n  return type === RECEIVE_DATA ? true : state;\n};\n\nexport default initialized;\n","export const INIT_BOARD_PROPS = 'INIT_BOARD_PROPS';\nexport const REQUEST_DATA = 'REQUEST_DATA';\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\nexport const REQUEST_UPDATE = 'REQUEST_UPDATE';\nexport const UPDATE_WIDGET = 'UPDATE_WIDGET';\nexport const ADD_BOARD = 'ADD_BOARD';\nexport const EDIT_BOARD = 'EDIT_BOARD';\nexport const DELETE_BOARD = 'DELETE_BOARD';\nexport const REORDER_BOARDS = 'REORDER_BOARDS';\nexport const SET_CURRENT_BOARD = 'SET_CURRENT_BOARD';\nexport const ADD_WIDGET = 'ADD_WIDGET';\nexport const EDIT_WIDGET = 'EDIT_WIDGET';\nexport const DELETE_WIDGET = 'DELETE_WIDGET';\nexport const DELETE_MULTIPLE_WIDGETS = 'DELETE_MULTIPLE_WIDGETS';\nexport const SORT_WIDGETS = 'SORT_WIDGETS';\nexport const DATA_CHANGED = 'DATA_CHANGED';\nexport const SAVE_DATA_START = 'SAVE_DATA_START';\nexport const SAVE_DATA_SUCCESS = 'SAVE_DATA_SUCCESS';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const CLEAR_LOGIN_ERROR_MESSAGE = 'CLEAR_LOGIN_ERROR_MESSAGE';\nexport const LOGOUT = 'LOGOUT';\nexport const PUSH_NOTIFICATION = 'PUSH_NOTIFICATION';\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\n","import { REQUEST_DATA } from '../../actions/types';\n\nconst dataFetching = (state = false, { type }) => {\n  return type === REQUEST_DATA ? true : state;\n};\n\nexport default dataFetching;\n","import { DATA_CHANGED, SAVE_DATA_SUCCESS } from '../../actions/types';\n\nconst isDataChanged = (state = false, { type }) => {\n  switch (type) {\n    case DATA_CHANGED:\n      return true;\n    case SAVE_DATA_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isDataChanged;\n","import { SAVE_DATA_START, SAVE_DATA_SUCCESS } from '../../actions/types';\n\nconst isDataSaving = (state = false, { type }) => {\n  switch (type) {\n    case SAVE_DATA_START:\n      return true;\n    case SAVE_DATA_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isDataSaving;\n","import {\n  LOGIN_FAILURE,\n  LOGIN_SUCCESS,\n  CLEAR_LOGIN_ERROR_MESSAGE,\n  LOGOUT\n} from '../../actions/types';\n\nconst loginErrorMessage = (state = '', { type, payload }) => {\n  switch (type) {\n    case LOGIN_FAILURE:\n      return payload;\n    case LOGIN_SUCCESS:\n    case CLEAR_LOGIN_ERROR_MESSAGE:\n    case LOGOUT:\n      return '';\n    default:\n      return state;\n  }\n};\n\nexport default loginErrorMessage;\n","import { LOGIN_SUCCESS, LOGOUT } from '../../actions/types';\n\nconst isAuthenticated = (state = false, { type }) => {\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return true;\n    case LOGOUT:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isAuthenticated;\n","import { combineReducers } from 'redux';\n\nimport initialized from './initialized';\nimport dataFetching from './dataFetching';\nimport isDataChanged from './isDataChanged';\nimport isDataSaving from './isDataSaving';\nimport loginErrorMessage from './loginErrorMessage';\nimport isAuthenticated from './isAuthenticated';\n\nconst app = combineReducers({\n  initialized,\n  dataFetching,\n  isDataChanged,\n  isDataSaving,\n  loginErrorMessage,\n  isAuthenticated\n});\n\nexport default app;\n","import { SET_CURRENT_BOARD } from '../../actions/types';\n\nconst currentBoard = (state = null, action) => {\n  const { type, payload: boardId } = action;\n\n  switch (type) {\n    case SET_CURRENT_BOARD:\n      return boardId;\n    default:\n      return state;\n  }\n};\n\nexport default currentBoard;\n","import { combineReducers } from 'redux';\n\nimport currentBoard from './currentBoard';\n\nconst ui = combineReducers({\n  currentBoard\n});\n\nexport default ui;\n","export const reorderItems = (items, sourceId, targetIndex) => {\n  const withoutSource = items.filter(itemId => itemId !== sourceId);\n  const sortedItems = [\n    ...withoutSource.slice(0, targetIndex),\n    sourceId,\n    ...withoutSource.slice(targetIndex)\n  ];\n\n  return sortedItems;\n};\n","import {\n  RECEIVE_DATA,\n  ADD_BOARD,\n  EDIT_BOARD,\n  DELETE_BOARD,\n  ADD_WIDGET,\n  DELETE_WIDGET,\n  SORT_WIDGETS,\n  INIT_BOARD_PROPS\n} from '../../actions/types';\n\nimport { reorderItems } from '../helpers';\n\nconst receiveData = (state, { payload }) => {\n  const {\n    boards: { boardsById }\n  } = payload;\n\n  return { ...state, ...boardsById };\n};\n\nconst initBoardProps = (state, { payload }) => {\n  return Object.entries(state).reduce((newState, [boardId, boardProps]) => {\n    newState[boardId] = { ...payload, ...boardProps };\n\n    return newState;\n  }, {});\n};\n\nconst addBoard = (state, { payload }) => {\n  const { id } = payload;\n\n  return { ...state, [id]: payload };\n};\n\nconst editBoard = (state, { payload }) => {\n  const { id, ...other } = payload;\n  const board = state[id];\n\n  return {\n    ...state,\n    [id]: { ...board, ...other }\n  };\n};\n\nconst deleteBoard = (state, { payload: id }) => {\n  const { [id]: deletedBoard, ...rest } = state;\n\n  return { ...rest };\n};\n\nconst addWidget = (state, { payload }) => {\n  const { id, boardId } = payload;\n  const board = state[boardId];\n  const { widgets } = board;\n\n  return {\n    ...state,\n    [boardId]: {\n      ...board,\n      widgets: [...widgets, id]\n    }\n  };\n};\n\nconst deleteWidget = (state, { payload }) => {\n  const { id, boardId } = payload;\n  const board = state[boardId];\n  const { widgets } = board;\n\n  return {\n    ...state,\n    [boardId]: {\n      ...board,\n      widgets: widgets.filter(widgetId => widgetId !== id)\n    }\n  };\n};\n\nconst sortWidgets = (state, { payload }) => {\n  const { sourceId, targetIndex, boardId } = payload;\n  const board = state[boardId];\n  const { widgets } = board;\n  const sortedWidgets = reorderItems(widgets, sourceId, targetIndex);\n\n  return {\n    ...state,\n    [boardId]: {\n      ...board,\n      widgets: sortedWidgets\n    }\n  };\n};\n\nconst boardsById = (state = {}, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case RECEIVE_DATA:\n      return receiveData(state, action);\n    case INIT_BOARD_PROPS:\n      return initBoardProps(state, action);\n    case ADD_BOARD:\n      return addBoard(state, action);\n    case EDIT_BOARD:\n      return editBoard(state, action);\n    case DELETE_BOARD:\n      return deleteBoard(state, action);\n    case ADD_WIDGET:\n      return addWidget(state, action);\n    case DELETE_WIDGET:\n      return deleteWidget(state, action);\n    case SORT_WIDGETS:\n      return sortWidgets(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default boardsById;\n","import {\n  RECEIVE_DATA,\n  DELETE_BOARD,\n  ADD_BOARD,\n  REORDER_BOARDS\n} from '../../actions/types';\nimport { reorderItems } from '../helpers';\n\nconst receiveData = (state, { payload }) => {\n  const {\n    boards: { allBoards }\n  } = payload;\n\n  return [...state, ...allBoards];\n};\n\nconst addBoard = (state, { payload }) => {\n  const { id } = payload;\n\n  return [...state, id];\n};\n\nconst deleteBoard = (state, { payload: id }) =>\n  state.filter(boardId => boardId !== id);\n\nconst reorderBoards = (state, { payload }) => {\n  const { sourceId, targetIndex } = payload;\n  const boards = [...state];\n  const sortedBoards = reorderItems(boards, sourceId, targetIndex);\n\n  return sortedBoards;\n};\n\nconst allBoards = (state = [], action) => {\n  const { type } = action;\n\n  switch (type) {\n    case RECEIVE_DATA:\n      return receiveData(state, action);\n    case ADD_BOARD:\n      return addBoard(state, action);\n    case DELETE_BOARD:\n      return deleteBoard(state, action);\n    case REORDER_BOARDS:\n      return reorderBoards(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default allBoards;\n","import { combineReducers } from 'redux';\n\nimport boardsById from './boardsById';\nimport allBoards from './allBoards';\n\nconst boards = combineReducers({\n  boardsById,\n  allBoards\n});\n\nexport default boards;\n","import {\n  RECEIVE_DATA,\n  REQUEST_UPDATE,\n  UPDATE_WIDGET,\n  EDIT_WIDGET,\n  ADD_WIDGET,\n  DELETE_WIDGET\n} from '../../actions/types';\n\nconst requestUpdate = (state, { payload: id }) => {\n  const widget = state[id];\n\n  return {\n    ...state,\n    [id]: { ...widget, isUpdating: true }\n  };\n};\n\nconst receiveData = (state, action) => {\n  const { payload } = action;\n  const {\n    widgets: { widgetsById }\n  } = payload;\n\n  return { ...state, ...widgetsById };\n};\n\nconst updateWidget = (state, { payload }) => {\n  const { id, content, ...other } = payload;\n  const widget = state[id];\n  const prevContent = widget.content;\n\n  return {\n    ...state,\n    [id]: {\n      ...widget,\n      ...other,\n      content: { ...prevContent, ...content },\n      isUpdating: false\n    }\n  };\n};\n\nconst editWidget = (state, { payload }) => {\n  const { id, content, ...other } = payload;\n  const widget = state[id];\n  const prevContent = widget.content;\n\n  return {\n    ...state,\n    [id]: {\n      ...widget,\n      ...other,\n      content: { ...prevContent, ...content }\n    }\n  };\n};\n\nconst addWidget = (state, { payload }) => {\n  const { id, boardId, ...other } = payload;\n\n  return {\n    ...state,\n    [id]: { id, ...other }\n  };\n};\n\nconst deleteWidget = (state, { payload }) => {\n  const { id } = payload;\n  const { [id]: widgetId, ...rest } = state;\n\n  return rest;\n};\n\nconst widgetsById = (state = {}, action) => {\n  const { type } = action;\n\n  switch (type) {\n    case REQUEST_UPDATE:\n      return requestUpdate(state, action);\n    case RECEIVE_DATA:\n      return receiveData(state, action);\n    case UPDATE_WIDGET:\n      return updateWidget(state, action);\n    case EDIT_WIDGET:\n      return editWidget(state, action);\n    case ADD_WIDGET:\n      return addWidget(state, action);\n    case DELETE_WIDGET:\n      return deleteWidget(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default widgetsById;\n","import {\n  RECEIVE_DATA,\n  ADD_WIDGET,\n  DELETE_WIDGET,\n  DELETE_MULTIPLE_WIDGETS\n} from '../../actions/types';\n\nconst receiveData = (state, { payload }) => {\n  const {\n    widgets: { allWidgets }\n  } = payload;\n\n  return [...state, ...allWidgets];\n};\n\nconst addWidget = (state, { payload }) => {\n  const { id } = payload;\n\n  return [...state, id];\n};\n\nconst deleteWidget = (state, { payload }) => {\n  const { id } = payload;\n\n  return state.filter(widgetId => widgetId !== id);\n};\n\nconst deleteMultipleWidgets = (state, { payload }) => {\n  const { widgetIds } = payload;\n\n  return state.filter(widgetId => !widgetIds.includes(widgetId));\n};\n\nconst allWidgets = (state = [], action) => {\n  const { type } = action;\n\n  switch (type) {\n    case RECEIVE_DATA:\n      return receiveData(state, action);\n    case ADD_WIDGET:\n      return addWidget(state, action);\n    case DELETE_WIDGET:\n      return deleteWidget(state, action);\n    case DELETE_MULTIPLE_WIDGETS:\n      return deleteMultipleWidgets(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default allWidgets;\n","import { combineReducers } from 'redux';\n\nimport widgetsById from './widgetsById';\nimport allWidgets from './allWidgets';\n\nconst widgets = combineReducers({\n  widgetsById,\n  allWidgets\n});\n\nexport default widgets;\n","import { PUSH_NOTIFICATION, DELETE_NOTIFICATION } from '../../actions/types';\nimport { assoc, dissoc } from 'ramda';\n\nconst pushNotification = (state, payload) => {\n  const { id } = payload;\n\n  return assoc(id, payload, state);\n};\n\nconst deleteNotification = (state, payload) => {\n  const id = payload;\n\n  return dissoc(id, state);\n};\n\nconst notificationsById = (state = {}, { type, payload }) => {\n  switch (type) {\n    case PUSH_NOTIFICATION:\n      return pushNotification(state, payload);\n    case DELETE_NOTIFICATION:\n      return deleteNotification(state, payload);\n    default:\n      return state;\n  }\n};\n\nexport default notificationsById;\n","import { append, without } from 'ramda';\n\nimport { PUSH_NOTIFICATION, DELETE_NOTIFICATION } from '../../actions/types';\n\nconst pushNotification = (state, { id }) => append(id, state);\n\nconst deleteNotification = (state, id) => without([id], state);\n\nconst allNotifications = (state = [], { type, payload }) => {\n  switch (type) {\n    case PUSH_NOTIFICATION:\n      return pushNotification(state, payload);\n    case DELETE_NOTIFICATION:\n      return deleteNotification(state, payload);\n    default:\n      return state;\n  }\n};\n\nexport default allNotifications;\n","import { combineReducers } from 'redux';\n\nimport notificationsById from './notificationsById';\nimport allNotifications from './allNotifications';\n\nconst notifications = combineReducers({\n  notificationsById,\n  allNotifications\n});\n\nexport default notifications;\n","import { combineReducers } from 'redux';\n\nimport app from './app';\nimport ui from './ui';\nimport boards from './boards';\nimport widgets from './widgets';\nimport notifications from './notifications';\n\nconst rootReducer = combineReducers({\n  app,\n  ui,\n  boards,\n  widgets,\n  notifications\n});\n\nexport default rootReducer;\n","import { dataChanged } from './actionCreators';\nimport { logout } from './thunks';\nimport { isAuthenticated } from '../utils/auth';\nimport { navigate } from '@reach/router';\n\nconst checkResponseStatus = response => {\n  const { status, statusText } = response;\n\n  if (status >= 200 && status < 300) {\n    return Promise.resolve(response);\n  } else if (status >= 500) {\n    navigate('/error-page');\n    return Promise.reject(new Error(statusText));\n  } else {\n    return Promise.reject(new Error(statusText));\n  }\n};\n\nexport const fetchData = (url, method = 'GET', data = {}, token = '') => {\n  const postConfig = {\n    method: 'POST',\n    body: JSON.stringify(data),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  if (token) {\n    postConfig.headers['Authorization'] = token;\n  }\n  const init = method !== 'GET' ? postConfig : {};\n\n  return fetch(url, init)\n    .then(checkResponseStatus)\n    .then(response => response.json());\n};\n\nconst makeIdCreator = prefix => allIds => {\n  const intRegex = new RegExp(/[0-9]\\d*$/, 'g');\n  const [lastId] = [...allIds].sort(\n    (a, b) => Number(b.match(intRegex)) - Number(a.match(intRegex))\n  );\n\n  if (lastId) {\n    const intId = Number(lastId.match(intRegex));\n\n    return lastId.replace(intRegex, intId + 1);\n  } else {\n    return `${prefix}1`;\n  }\n};\n\nconst createWidgetId = makeIdCreator('widget');\n\nconst mapFormValuesToWidgetData = values => {\n  const { columns, goNewLine, rows, ...other } = values;\n\n  return {\n    ...other,\n    config: {\n      columns,\n      goNewLine,\n      rows\n    }\n  };\n};\n\nexport const createNewWidgetData = ({\n  values,\n  allWidgets,\n  currentBoardId\n}) => ({\n  boardId: currentBoardId,\n  id: createWidgetId(allWidgets),\n  status: 'UNKNOWN',\n  ...mapFormValuesToWidgetData(values)\n});\n\nexport const createEditWidgetData = ({ id, values }) => ({\n  id,\n  ...mapFormValuesToWidgetData(values)\n});\n\nexport const mapDataToState = data => {\n  const { id, title, content, type, disabled, config, ...other } = data;\n\n  const newWidgetProps = ['status', 'boardId'];\n  const generalData = { id, title, config, type, disabled, content };\n\n  newWidgetProps.forEach(prop => {\n    if (data[prop]) {\n      generalData[prop] = data[prop];\n    }\n  });\n\n  return {\n    generalData,\n    serverData: { id, type, ...other }\n  };\n};\n\nexport const withAuthentication = actionCallback => (...args) => dispatch => {\n  if (!isAuthenticated()) {\n    dispatch(logout());\n\n    return;\n  }\n\n  dispatch(actionCallback.apply(null, args));\n};\n\nexport const withDataChanged = actionCallback => (...args) => dispatch => {\n  dispatch(actionCallback.apply(null, args));\n  dispatch(dataChanged());\n};\n","export const setSize = factor => ({ theme }) => `${theme.spacing(factor)}px`;\r\n\r\nexport const splitPropsGroupName = propName => {\r\n  return propName.includes('.') ? propName.split('.') : [undefined, propName];\r\n};\r\n\r\nexport const sortByKey = (obj, key, asc = true) =>\r\n  Object.entries(obj)\r\n    .sort(([, { [key]: keyA }], [, { [key]: keyB }]) =>\r\n      asc ? keyA.localeCompare(keyB) : keyB.localeCompare(keyA)\r\n    )\r\n    .reduce((newObj, [key, value]) => {\r\n      newObj[key] = value;\r\n\r\n      return newObj;\r\n    }, {});\r\n\r\nexport const capitalize = ([firstLetter, ...rest]) =>\r\n  [firstLetter.toUpperCase(), ...rest].join('');\r\n\r\nexport const parseYupErrors = errors => {\r\n  let result = {};\r\n  errors.inner.forEach(error => {\r\n    const { path, message } = error;\r\n\r\n    if (path in result) {\r\n      result[path].push(message);\r\n    } else {\r\n      result[path] = [message];\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport const trimLeadingZeros = inputValue => String(parseInt(inputValue));\r\n\r\nexport const hasError = error => error !== undefined;\r\n","import { capitalize } from '../helpers';\r\n\r\nexport const URL = {\r\n  LOAD_DATA: '/api/config',\r\n  SAVE_DATA: '/api/config/save',\r\n  UPDATE_WIDGET: '/api/widget/update',\r\n  DELETE_WIDGET: '/api/widget/delete',\r\n  LOGIN: '/api/login'\r\n};\r\nexport const COLUMN_MULTIPLIER = 2;\r\nexport const ROW_MULTIPLIER = 2;\r\nexport const BOARD_COLUMNS_MIN = 4;\r\nexport const BOARD_COLUMNS_DEFAULT = 8;\r\nexport const BOARD_COLUMNS_MAX = 20;\r\nexport const BOARD_TITLE_LENGTH_LIMIT = 25;\r\nexport const SWITCH_INTERVAL_MIN = 3;\r\n\r\nexport const WIDGET_COLUMNS_MIN = 0.5;\r\nexport const WIDGET_ROWS_MIN = 0.5;\r\nexport const WIDGET_ROWS_MAX = 4;\r\n\r\nexport const WIDGET_TITLE_LENGTH_LIMIT = 25;\r\n\r\nexport const TEXT_SIZES = [\r\n  {\r\n    display: 'XXL',\r\n    value: 'h2'\r\n  },\r\n  {\r\n    display: 'XL',\r\n    value: 'h3'\r\n  },\r\n  {\r\n    display: 'L',\r\n    value: 'h4'\r\n  },\r\n  {\r\n    display: 'M',\r\n    value: 'h5'\r\n  },\r\n  {\r\n    display: 'S',\r\n    value: 'h6'\r\n  },\r\n  {\r\n    display: 'XS',\r\n    value: 'subtitle1'\r\n  },\r\n  {\r\n    display: 'XXS',\r\n    value: 'subtitle2'\r\n  }\r\n];\r\n\r\nexport const REQUEST_METHODS = [\r\n  {\r\n    display: 'GET',\r\n    value: 'get'\r\n  },\r\n  {\r\n    display: 'PUT',\r\n    value: 'put'\r\n  },\r\n  {\r\n    display: 'POST',\r\n    value: 'post'\r\n  },\r\n  {\r\n    display: 'DELETE',\r\n    value: 'delete'\r\n  }\r\n];\r\n\r\nexport const ItemTypes = {\r\n  WIDGET: 'widget',\r\n  BOARD: 'board'\r\n};\r\n\r\nexport const AEM_HEALTH_CHECKS = {\r\n  inactiveBundles: 'Active Bundles',\r\n  asyncIndexHealthCheck: 'Async Index Health Check',\r\n  codeCacheHealthCheck: 'Code Cache Health Check',\r\n  DiskSpaceHealthCheck: 'Disk Space',\r\n  logErrorHealthCheck: 'Log Errors',\r\n  ObservationQueueLengthHealthCheck: 'Observation Queue Length',\r\n  resourceSearchPathErrorHealthCheck: 'Resource Search Path Errors',\r\n  requestsStatus: 'Request Performance',\r\n  queriesStatus: 'Query Performance',\r\n  queryTraversalLimitsBundle: 'Query Traversal Limits',\r\n  securitychecks: 'Security Checks',\r\n  slingJobs: 'Sling Jobs',\r\n  slingDiscoveryOakSynchronizedClocks: 'Synchronized Clocks',\r\n  systemchecks: 'System Maintenance'\r\n};\r\n\r\nexport const ALL_SONARQUBE_METRICS = [\r\n  'blocker_violations',\r\n  'critical_violations',\r\n  'major_violations',\r\n  'minor_violations',\r\n  'info_violations',\r\n  'bugs',\r\n  'code_smells',\r\n  'vulnerabilities'\r\n];\r\n\r\n// props will be added to old configs on app init\r\n\r\nexport const INITIAL_BOARD_PROPS = {\r\n  autoSwitch: false,\r\n  switchInterval: 0\r\n};\r\n\r\nexport const validationMessages = {\r\n  STRING_LENGTH: (name, max) =>\r\n    `${name} length must be less or equal to ${max}.`,\r\n  FIELD_REQUIRED: () => 'This field is required',\r\n  NUMBER_MIN: (name, min) => `${name} number cannot be less than ${min}.`,\r\n  NUMBER_MAX: (name, max) => `${name} number cannot be more than ${max}.`,\r\n  INVALID_URL: () => 'Invalid URL',\r\n  FIELD_MIN_ITEMS: () => 'This field must have at least 1 item.',\r\n  UNIQUE_FIELD: () => 'This field must be unique.'\r\n};\r\nexport const NOTIFICATIONS = {\r\n  LOGIN: userRole => ({\r\n    type: 'success',\r\n    message: `Logged in as ${userRole}`,\r\n    duration: 3000\r\n  }),\r\n  LOGOUT: userRole => ({\r\n    type: 'info',\r\n    message: `${capitalize(userRole)} logged out`,\r\n    duration: 3000\r\n  })\r\n};\r\n","import { v4 } from 'uuid';\nimport {\n  REQUEST_DATA,\n  RECEIVE_DATA,\n  REQUEST_UPDATE,\n  ADD_BOARD,\n  EDIT_BOARD,\n  DELETE_BOARD,\n  SET_CURRENT_BOARD,\n  UPDATE_WIDGET,\n  EDIT_WIDGET,\n  ADD_WIDGET,\n  DELETE_WIDGET,\n  DELETE_MULTIPLE_WIDGETS,\n  SORT_WIDGETS,\n  REORDER_BOARDS,\n  DATA_CHANGED,\n  SAVE_DATA_START,\n  SAVE_DATA_SUCCESS,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  CLEAR_LOGIN_ERROR_MESSAGE,\n  LOGOUT,\n  INIT_BOARD_PROPS,\n  PUSH_NOTIFICATION,\n  DELETE_NOTIFICATION\n} from './types';\nimport { INITIAL_BOARD_PROPS } from '../constants';\n\nexport const requestData = () => ({\n  type: REQUEST_DATA\n});\n\nexport const loginSuccess = () => ({\n  type: LOGIN_SUCCESS\n});\n\nexport const loginFailure = data => ({\n  type: LOGIN_FAILURE,\n  payload: data\n});\n\nexport const clearLoginErrorMessage = () => ({\n  type: CLEAR_LOGIN_ERROR_MESSAGE\n});\n\nexport const logout = () => ({\n  type: LOGOUT\n});\n\nexport const receiveData = state => ({\n  type: RECEIVE_DATA,\n  payload: state\n});\n\nexport const requestUpdate = id => ({\n  type: REQUEST_UPDATE,\n  payload: id\n});\n\nexport const updateWidget = data => ({\n  type: UPDATE_WIDGET,\n  payload: data\n});\n\nexport const addBoard = data => ({\n  type: ADD_BOARD,\n  payload: {\n    id: `board-${v4()}`,\n    theme: 'default',\n    widgets: [],\n    ...data\n  }\n});\n\nexport const deleteBoard = id => ({\n  type: DELETE_BOARD,\n  payload: id\n});\n\nexport const editBoard = editData => ({\n  type: EDIT_BOARD,\n  payload: editData\n});\n\nexport const reorderBoards = (sourceId, targetIndex) => ({\n  type: REORDER_BOARDS,\n  payload: { sourceId, targetIndex }\n});\n\nexport const editWidget = editData => ({\n  type: EDIT_WIDGET,\n  payload: editData\n});\n\nexport const addWidget = widgetData => ({\n  type: ADD_WIDGET,\n  payload: widgetData\n});\n\nexport const deleteWidget = (id, boardId) => ({\n  type: DELETE_WIDGET,\n  payload: { id, boardId }\n});\n\nexport const deleteMultipleWidgets = (widgetIds, boardId = '') => ({\n  type: DELETE_MULTIPLE_WIDGETS,\n  payload: { widgetIds, boardId }\n});\n\nexport const sortWidgets = payload => ({\n  type: SORT_WIDGETS,\n  payload\n});\n\nexport const dataChanged = () => ({\n  type: DATA_CHANGED\n});\n\nexport const saveDataStart = () => ({\n  type: SAVE_DATA_START\n});\n\nexport const saveDataSuccess = () => ({\n  type: SAVE_DATA_SUCCESS\n});\n\nexport const setCurrentBoard = id => ({\n  type: SET_CURRENT_BOARD,\n  payload: id\n});\n\nexport const initBoardProps = () => ({\n  type: INIT_BOARD_PROPS,\n  payload: { ...INITIAL_BOARD_PROPS }\n});\n\nexport const pushNotification = notification => ({\n  type: PUSH_NOTIFICATION,\n  payload: {\n    id: v4(),\n    ...notification\n  }\n});\n\nexport const deleteNotification = id => ({\n  type: DELETE_NOTIFICATION,\n  payload: id\n});\n","import decode from 'jwt-decode';\n\nconst tokenName = 'token';\n\nconst hasToken = () => !!getToken();\n\nconst isTokenExpired = token => {\n  const expTimestamp = decode(token).exp * 1000;\n\n  return Date.now() > expTimestamp;\n};\n\nexport const getUserRole = () =>\n  hasToken() ? decode(getToken()).name : undefined;\n\nexport const getToken = () => localStorage.getItem(tokenName);\n\nexport const setToken = token => localStorage.setItem(tokenName, token);\n\nexport const removeToken = () => localStorage.removeItem(tokenName);\n\nexport const isAuthenticated = () => hasToken() && !isTokenExpired(getToken());\n","import { navigate } from '@reach/router';\n\nimport {\n  requestData,\n  receiveData,\n  requestUpdate,\n  addBoard,\n  editBoard,\n  deleteBoard,\n  reorderBoards,\n  setCurrentBoard,\n  updateWidget,\n  addWidget,\n  editWidget,\n  deleteMultipleWidgets,\n  sortWidgets,\n  dataChanged,\n  saveDataStart,\n  deleteWidget,\n  loginSuccess,\n  loginFailure,\n  logout as logoutUser,\n  initBoardProps,\n  pushNotification\n} from './actionCreators';\nimport {\n  fetchData,\n  createNewWidgetData,\n  createEditWidgetData,\n  mapDataToState,\n  withAuthentication,\n  withDataChanged\n} from './helpers';\nimport { URL, NOTIFICATIONS } from '../constants';\nimport { setToken, removeToken, getToken, getUserRole } from '../utils/auth';\n\nexport const fetchInitialData = () => dispatch => {\n  dispatch(requestData());\n\n  return fetchData(URL.LOAD_DATA).then(data => {\n    dispatch(receiveData(data));\n    dispatch(initBoardProps());\n  }, console.error);\n};\n\nexport const saveDataThunk = () => (dispatch, getState) => {\n  const { boards, widgets } = getState();\n  const data = { boards, widgets };\n  const token = getToken();\n\n  return fetchData(URL.SAVE_DATA, 'POST', data, token).then(\n    () => dispatch(saveDataStart()),\n    console.error\n  );\n};\n\nexport const login = credentials => dispatch => {\n  return fetchData(URL.LOGIN, 'POST', credentials).then(\n    ({ token }) => {\n      setToken(token);\n      dispatch(loginSuccess());\n      dispatch(pushNotification(NOTIFICATIONS.LOGIN(getUserRole())));\n    },\n    ({ message }) => dispatch(loginFailure(message))\n  );\n};\n\nexport const logout = () => dispatch => {\n  const userRole = getUserRole();\n\n  removeToken();\n  dispatch(logoutUser());\n  dispatch(pushNotification(NOTIFICATIONS.LOGOUT(userRole)));\n};\n\nconst deleteBoardWithWidgetsThunk = id => (dispatch, getState) => {\n  const { ui, boards } = getState();\n  const { widgets } = boards.boardsById[id];\n  const { currentBoard } = ui;\n\n  dispatch(deleteBoard(id));\n\n  const [firstBoardId] = getState().boards.allBoards;\n\n  if (id === currentBoard) {\n    dispatch(setCurrentBoard(firstBoardId || null));\n    navigate(firstBoardId || '/');\n  }\n\n  dispatch(deleteMultipleWidgets(widgets));\n};\n\nconst makeWidgetUpdaterThunk = (\n  beforeUpdateActionCreator,\n  widgetDataCreator\n) => data => (dispatch, getState) => {\n  const allWidgets = getState().widgets.allWidgets;\n  const token = getToken();\n  const widgetData = widgetDataCreator({ ...data, allWidgets });\n  const { id } = widgetData;\n  const { generalData, serverData } = mapDataToState(widgetData);\n\n  dispatch(beforeUpdateActionCreator(generalData));\n  dispatch(dataChanged());\n  dispatch(requestUpdate(id));\n\n  return fetchData(URL.UPDATE_WIDGET, 'POST', serverData, token).then(\n    () => dispatch(updateWidget(serverData)),\n    console.error\n  );\n};\n\nconst removeWidgetThunk = id => (dispatch, getState) => {\n  const { currentBoard: boardId } = getState().ui;\n  const token = getToken();\n\n  return fetchData(URL.DELETE_WIDGET, 'POST', { id }, token).then(\n    () => dispatch(deleteWidget(id, boardId)),\n    console.error\n  );\n};\n\nconst reorderWidgetsThunk = (sourceId, targetIndex) => (dispatch, getState) => {\n  const { currentBoard: boardId } = getState().ui;\n\n  dispatch(sortWidgets({ sourceId, targetIndex, boardId }));\n};\n\nexport const addNewWidget = withAuthentication(\n  makeWidgetUpdaterThunk(addWidget, createNewWidgetData)\n);\nexport const saveWidget = withAuthentication(\n  makeWidgetUpdaterThunk(editWidget, createEditWidgetData)\n);\nexport const removeWidget = withAuthentication(\n  withDataChanged(removeWidgetThunk)\n);\nexport const reorderWidgets = withDataChanged(reorderWidgetsThunk);\nexport const reorderBoard = withDataChanged(reorderBoards);\nexport const addNewBoard = withDataChanged(addBoard);\nexport const saveBoard = withDataChanged(editBoard);\nexport const deleteBoardWithWidgets = withDataChanged(\n  deleteBoardWithWidgetsThunk\n);\nexport const setWidgetState = withDataChanged(editWidget);\nexport const saveData = withAuthentication(saveDataThunk);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport { amber, blue, green, red } from '@material-ui/core/colors/index';\n\nconst gradientAngle = 45;\n\nconst createGradient = (start, end) =>\n  `linear-gradient(${gradientAngle}deg, ${start}, ${end})`;\n\nexport const theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#211F39',\n      paper: '#26243E',\n      board: {\n        card: '#5c6bc0',\n        dragged: '#353b61'\n      }\n    },\n    status: {\n      UNKNOWN: '#26243E',\n      OK: createGradient('#519657', '#81c784'),\n      IN_PROGRESS: createGradient('#009faf', '#4dd0e1'),\n      UNSTABLE: createGradient('#c75b39', '#ff8a65'),\n      ERROR_CONNECTION: createGradient('#af4448', '#e57373'),\n      ERROR_CONFIGURATION: createGradient('#af4448', '#e57373'),\n      ERROR: createGradient('#af4448', '#e57373'),\n      FAIL: createGradient('#af4448', '#e57373')\n    },\n    snackbarVariant: {\n      info: blue[100],\n      success: green[300],\n      warning: amber[700],\n      error: red[800]\n    }\n  },\n  shape: {\n    borderRadius: 10\n  },\n  typography: {\n    h3: {\n      fontWeight: 500,\n      letterSpacing: 2\n    }\n  }\n});\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nimport { splitPropsGroupName, parseYupErrors } from '../helpers';\r\n\r\nexport const useToggle = (initialState = false) => {\r\n  const [isOpened, setOpened] = useState(initialState);\r\n\r\n  const handleOpen = () => setOpened(true);\r\n  const handleClose = () => setOpened(false);\r\n\r\n  return [isOpened, handleOpen, handleClose];\r\n};\r\n\r\nexport const useFormData = (data, config = {}) => {\r\n  const [values, setValues] = useState(data);\r\n  const { onChange = null, initialSchema = null } = config;\r\n  const [status, setStatus] = useState({\r\n    submited: false,\r\n    onChange: onChange\r\n  });\r\n  const [validationSchema, setValidationSchema] = useState(initialSchema);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (fieldName, updaterFn = arg => arg) => event => {\r\n    const {\r\n      target: { type, value, checked }\r\n    } = event;\r\n    const valueType = {\r\n      checkbox: checked,\r\n      number: Number(value)\r\n    };\r\n    const fieldValue = valueType[type] !== undefined ? valueType[type] : value;\r\n\r\n    setFieldValue(fieldName, updaterFn(fieldValue));\r\n  };\r\n\r\n  const setFieldValue = (fieldName, fieldValue) => {\r\n    const [groupName, propName] = splitPropsGroupName(fieldName);\r\n    let newValues;\r\n\r\n    if (groupName) {\r\n      const groupValues = values[groupName];\r\n\r\n      newValues = {\r\n        ...values,\r\n        [groupName]: { ...groupValues, [propName]: fieldValue }\r\n      };\r\n    } else {\r\n      newValues = { ...values, [propName]: fieldValue };\r\n    }\r\n\r\n    validateField(fieldName, newValues);\r\n\r\n    setValues(newValues);\r\n  };\r\n\r\n  const validateField = (fieldName, fieldsValues) => {\r\n    if (status.submited || status.onChange) {\r\n      validationSchema\r\n        .validateAt(fieldName, fieldsValues, { abortEarly: false })\r\n        .then(() => {\r\n          if (fieldName in errors) {\r\n            const errorsTmp = { ...errors };\r\n\r\n            delete errorsTmp[fieldName];\r\n            setErrors(errorsTmp);\r\n          }\r\n        })\r\n        .catch(error => setErrors({ ...errors, ...parseYupErrors(error) }));\r\n    }\r\n  };\r\n\r\n  const withValidation = func => event => {\r\n    event.preventDefault();\r\n    setStatus({ ...status, submited: true });\r\n\r\n    if (validationSchema) {\r\n      validationSchema\r\n        .validate(values, { abortEarly: false, stripUnknown: true })\r\n        .then(value => func(value))\r\n        .catch(errors => setErrors(parseYupErrors(errors)));\r\n    } else {\r\n      func(values);\r\n    }\r\n  };\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    withValidation,\r\n    errors,\r\n    validationSchema,\r\n    setValidationSchema\r\n  };\r\n};\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { createSelector } from 'reselect';\n\nconst getApp = ({ app }) => app;\n\nconst getUi = ({ ui }) => ui;\n\nconst getNotifications = ({ notifications }) => notifications;\n\nconst getBoardsById = ({ boards }) => boards.boardsById;\n\nconst getAllBoards = ({ boards }) => boards.allBoards;\n\nconst getBoardId = (_, boardId) => boardId;\n\nconst getNotificationId = (_, notificationId) => notificationId;\n\nexport const getIsAuthenticated = createSelector(\n  [getApp],\n  ({ isAuthenticated }) => isAuthenticated\n);\n\nexport const getCurrentBoardId = createSelector(\n  [getUi],\n  ({ currentBoard }) => currentBoard\n);\n\nconst getBoard = createSelector(\n  [getBoardsById, getBoardId],\n  (boardsById, boardId) => boardsById[boardId]\n);\n\nexport const getBoardTitle = createSelector(\n  [getBoard],\n  board => board && board.title\n);\n\nexport const getSwitchInterval = createSelector(\n  [getBoard],\n  board => board && board.switchInterval\n);\n\nexport const getSwitcherBoards = createSelector(\n  [getAllBoards, getBoardsById],\n  (allBoards, boardsById) =>\n    allBoards.filter(boardId => boardsById[boardId].autoSwitch)\n);\n\nexport const getNotificationsById = createSelector(\n  [getNotifications],\n  ({ notificationsById }) => notificationsById\n);\n\nexport const createGetNotification = () =>\n  createSelector(\n    [getNotificationsById, getNotificationId],\n    (notificationsById, notificationId) => notificationsById[notificationId]\n  );\n\nexport const getAllNotifications = createSelector(\n  [getNotifications],\n  ({ allNotifications }) => allNotifications\n);\n\nexport const getBoards = createSelector(\n  [getBoardsById],\n  boardsById => Object.values(boardsById)\n);\n","import React from 'react';\nimport { bool, element, func, string } from 'prop-types';\nimport styled from '@emotion/styled/macro';\n\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\n\nconst StyledDialog = styled(props => (\n  <Dialog classes={{ paper: 'paper' }} {...props} />\n))`\n  .paper {\n    padding: 15px;\n  }\n`;\n\nconst StyledDialogContent = styled(DialogContent)`\n  padding-bottom: 16px;\n`;\n\nconst AppDialog = props => {\n  const {\n    children,\n    handleDialogClose,\n    open,\n    title,\n    disableBackdropClick\n  } = props;\n\n  const stopEventPropagation = event => event.stopPropagation();\n\n  return (\n    <StyledDialog\n      disableBackdropClick={disableBackdropClick}\n      onClick={stopEventPropagation}\n      onClose={handleDialogClose}\n      onKeyDown={stopEventPropagation}\n      aria-labelledby=\"app-dialog-title\"\n      open={open}\n      PaperProps={{ 'data-cy': props['data-cy'] }}\n    >\n      <DialogTitle id=\"app-dialog-title\" data-cy=\"app-dialog-title\">\n        {title}\n      </DialogTitle>\n      <StyledDialogContent data-cy=\"app-dialog-content\">\n        {children}\n      </StyledDialogContent>\n    </StyledDialog>\n  );\n};\n\nAppDialog.propTypes = {\n  handleDialogClose: func.isRequired,\n  children: element.isRequired,\n  open: bool.isRequired,\n  title: string\n};\n\nAppDialog.defaultProps = {\n  title: ''\n};\n\nexport default AppDialog;\n","const DefaultWidget = () => {\n  return null;\n};\n\nexport default DefaultWidget;\n","import React from 'react';\nimport Iframe from 'react-iframe';\nimport { string } from 'prop-types';\n\nconst IframeEmbed = props => {\n  const { url } = props;\n\n  return <Iframe {...props} url={url} />;\n};\n\nIframeEmbed.propTypes = {\n  url: string.isRequired\n};\n\nexport default IframeEmbed;\n","import React from 'react';\nimport styled from '@emotion/styled/macro';\n\nimport { Button, FormControl, Typography, IconButton } from '@material-ui/core';\n\nimport IframeEmbed from '../IframeEmbed';\nimport { setSize } from '../../helpers';\n\nconst StyledTypography = styled(Typography)`\n  margin-bottom: 5px;\n`;\n\nconst FullWidthButtonOutlined = props => (\n  <Button {...props} fullWidth variant=\"outlined\" target=\"_blank\" />\n);\n\nexport const WidgetButton = styled(FullWidthButtonOutlined)`\n  margin-top: auto;\n`;\n\nexport const WidgetIconButton = styled(IconButton)`\n  border-radius: 0;\n  height: 100%;\n  left: 0;\n  padding: 0;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 100%;\n`;\n\nexport const Caption = props => (\n  <StyledTypography {...props} variant=\"caption\" paragraph />\n);\n\nexport const CaptionWithPointer = styled(Caption)`\n  cursor: pointer;\n`;\n\nexport const StyledFieldset = styled(FormControl)`\n  display: flex;\n  margin-bottom: 32px;\n  min-width: 300px;\n`;\n\nexport const StyledIframe = props => (\n  <IframeEmbed {...props} frameBorder={0} allowFullScreen height=\"100%\" />\n);\n\nexport const StyledFormControlForDropdown = styled(FormControl)`\n  display: flex;\n  margin-bottom: 12px;\n  min-width: 300px;\n`;\n\nexport const StyledTitle = styled(Typography)`\n  align-self: center;\n  flex-grow: 1;\n  font-size: 2rem;\n  margin-left: 1rem;\n  margin-top: 1rem;\n  overflow: hidden;\n  padding-right: 2rem;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  &::after {\n    background-color: #ff8a65;\n    content: '';\n    display: block;\n    height: 2px;\n    margin-top: ${setSize(2)};\n    margin-left: 3px;\n    width: ${setSize(10)};\n  }\n`;\n\nexport const StyledFormControl = styled(FormControl)`\n  margin: ${setSize(1)};\n  min-width: 120px;\n  max-width: 300px;\n`;\n\nexport const StyledPopoverText = styled(Typography)`\n  background: #fff;\n  color: #000;\n  padding: 1rem;\n`;\n","import React from 'react';\n\nimport { Caption } from '../../styled';\n\nconst ExampleWidget = ({ serverTime }) => {\n  const ts = serverTime ? new Date(serverTime).toLocaleString() : '';\n\n  return <Caption>{ts}</Caption>;\n};\n\nexport default ExampleWidget;\n","import React from 'react';\nimport { string, number } from 'prop-types';\n\nimport { Caption, WidgetButton } from '../../styled';\n\nconst JenkinsJobWidget = props => {\n  const { duration, displayName, url, timestamp, branch } = props;\n  const ts = timestamp ? new Date(timestamp).toLocaleString() : '';\n  const dur = duration ? `${duration / 1000} [s]` : '';\n\n  return (\n    <>\n      <Caption>{ts}</Caption>\n      <Caption>Duration: {dur}</Caption>\n      <Caption>{branch}</Caption>\n      <WidgetButton href={url}>{displayName}</WidgetButton>\n    </>\n  );\n};\n\nJenkinsJobWidget.propTypes = {\n  duration: number.isRequired,\n  displayName: string.isRequired,\n  url: string.isRequired,\n  timestamp: number.isRequired,\n  branch: string\n};\n\nJenkinsJobWidget.defaultProps = {\n  branch: 'unknown'\n};\n\nexport default JenkinsJobWidget;\n","import React from 'react';\nimport { number, string, object } from 'prop-types';\n\nimport { Caption, WidgetButton } from '../../styled';\n\nconst SonarQubeWidget = props => {\n  const { metrics, id, url, version, date } = props;\n  const ts = date ? new Date(Date.parse(date)).toLocaleString() : '';\n\n  return (\n    <>\n      <Caption>{ts}</Caption>\n      <Caption>Version: {version}</Caption>\n      {Object.entries(metrics).map(([metric, val]) => (\n        <Caption key={metric}>\n          {metric.replace('_', ' ')}: {val}\n        </Caption>\n      ))}\n      <WidgetButton href={url}>#{id}</WidgetButton>\n    </>\n  );\n};\n\nSonarQubeWidget.propTypes = {\n  metrics: object,\n  id: number.isRequired,\n  url: string.isRequired,\n  version: string,\n  date: string\n};\n\nSonarQubeWidget.defaultProps = {\n  metrics: {},\n  version: '-',\n  date: ''\n};\n\nexport default SonarQubeWidget;\n","import styled from '@emotion/styled/macro';\n\nimport { CircularProgress } from '@material-ui/core';\n\nexport const StyledCircularProgress = styled(CircularProgress)`\n  margin-left: 8px;\n`;\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { StyledCircularProgress } from './styled';\n\nconst Loader = ({ text, ...other }) => (\n  <>\n    <Typography variant=\"caption\">{text}</Typography>\n    <StyledCircularProgress {...other} />\n  </>\n);\n\nexport default Loader;\n","import React, { useState } from 'react';\nimport { string, number } from 'prop-types';\n\nimport { Popover } from '@material-ui/core';\nimport {\n  Caption,\n  CaptionWithPointer,\n  WidgetButton,\n  StyledPopoverText\n} from '../../styled';\nimport Loader from '../../Loader';\n\nconst ServiceCheckWidget = props => {\n  const {\n    statusCode,\n    statusMessage,\n    expectedStatusCode,\n    body,\n    expectedResponseBody,\n    url\n  } = props;\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const errorStatus = expectedStatusCode !== statusCode;\n  const statusCodeMessage = errorStatus\n    ? `${expectedStatusCode} expected, got ${statusCode}`\n    : statusCode;\n  const errorBody = !expectedResponseBody && expectedResponseBody !== body;\n  const bodyMessage = errorBody ? 'FAIL' : 'OK';\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n  const popoverOpen = Boolean(anchorEl);\n\n  return (\n    <>\n      {errorStatus && <Caption>{statusMessage}</Caption>}\n      <Caption>\n        <WidgetButton href={url}>\n          {!statusCode ? (\n            <Loader text=\"Pending update\" size={20} />\n          ) : (\n            statusCodeMessage\n          )}\n        </WidgetButton>\n      </Caption>\n\n      {expectedResponseBody && (\n        <>\n          <CaptionWithPointer title={body} onClick={handleClick}>\n            Response: {bodyMessage}\n          </CaptionWithPointer>\n          <Popover\n            open={popoverOpen}\n            onClose={handlePopoverClose}\n            anchorEl={anchorEl}\n            anchorOrigin={{\n              vertical: 'bottom',\n              horizontal: 'left'\n            }}\n          >\n            <StyledPopoverText>{body}</StyledPopoverText>\n          </Popover>\n        </>\n      )}\n    </>\n  );\n};\n\nServiceCheckWidget.propTypes = {\n  statusCode: number,\n  statusMessage: string,\n  timestamp: number,\n  expectedStatusCode: number,\n  body: string,\n  expectedResponseBody: string\n};\n\nServiceCheckWidget.defaultProps = {\n  statusCode: 0,\n  statusMessage: '',\n  expectedStatusCode: 200,\n  body: '',\n  expectedResponseBody: '',\n  timestamp: 0\n};\n\nexport default ServiceCheckWidget;\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const TypographyVariant = styled(Typography)`\r\n  height: 100%;\r\n`;\r\n\r\nexport const CenterWrapper = styled.div`\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledPre = styled.pre`\r\n  font-family: inherit;\r\n`;\r\n\r\nexport const RotatedStyledPre = styled(StyledPre)`\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nexport const OverflowingText = component => styled(component)`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const SetWidth = (component, componentWidth) => styled(component)`\r\n  min-width: ${componentWidth}px;\r\n  max-width: ${componentWidth}px;\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport { useSize } from 'react-hook-size';\r\nimport { bool, string } from 'prop-types';\r\n\r\nimport {\r\n  TypographyVariant,\r\n  CenterWrapper,\r\n  StyledPre,\r\n  RotatedStyledPre,\r\n  OverflowingText,\r\n  SetWidth\r\n} from './styled';\r\n\r\nexport const ModifiedWidth = (component, height) => {\r\n  if (height) {\r\n    return SetWidth(component, height);\r\n  }\r\n\r\n  return component;\r\n};\r\n\r\nconst TruncatedText = ({ isVertical, parentDimensions, children }) => {\r\n  let TruncatedPre = null;\r\n\r\n  if (isVertical && parentDimensions !== null) {\r\n    const { height } = parentDimensions;\r\n    const ModifiedPre = ModifiedWidth(RotatedStyledPre, height);\r\n    TruncatedPre = OverflowingText(ModifiedPre);\r\n  } else {\r\n    TruncatedPre = OverflowingText(StyledPre);\r\n  }\r\n\r\n  return <TruncatedPre>{children}</TruncatedPre>;\r\n};\r\n\r\nconst TextWidget = ({ text, textSize, isVertical }) => {\r\n  const targetRef = useRef();\r\n  const centerWrapperDimensions = useSize(targetRef);\r\n\r\n  return (\r\n    <TypographyVariant variant={textSize}>\r\n      <CenterWrapper ref={targetRef}>\r\n        <TruncatedText\r\n          isVertical={isVertical}\r\n          parentDimensions={centerWrapperDimensions}\r\n        >\r\n          {text}\r\n        </TruncatedText>\r\n      </CenterWrapper>\r\n    </TypographyVariant>\r\n  );\r\n};\r\n\r\nTextWidget.propTypes = {\r\n  text: string.isRequired,\r\n  textSize: string.isRequired,\r\n  isVertical: bool.isRequired\r\n};\r\n\r\nexport default TextWidget;\r\n","import React from 'react';\nimport { string, number } from 'prop-types';\n\nimport { Caption, WidgetButton } from '../../styled';\n\nconst BambooPlanWidget = ({ url, number, lifeCycleState }) => {\n  return (\n    <>\n      <Caption>State: {lifeCycleState}</Caption>\n      <WidgetButton href={url}>#{number}</WidgetButton>\n    </>\n  );\n};\n\nBambooPlanWidget.propTypes = {\n  url: string.isRequired,\n  number: number.isRequired,\n  lifeCycleState: string.isRequired\n};\n\nexport default BambooPlanWidget;\n","import moment from 'moment-timezone';\n\nexport const getDateTime = (timezone, format) => {\n  return moment.tz(new Date(), timezone).format(format);\n};\n\nconst getGmtTimezones = () => {\n  const allTimezones = moment.tz.names();\n  const duplicatedTimezones = ['Etc/GMT', 'Etc/GMT+0', 'Etc/GMT0'];\n\n  const gmtSort = (a, b) => {\n    const parts = {\n      a: a.split('T'),\n      b: b.split('T')\n    };\n    return parseInt(parts.b[1]) - parseInt(parts.a[1]);\n  };\n\n  const gmtTimezones = allTimezones\n    .filter(\n      timezone =>\n        timezone.includes('Etc/GMT') && !duplicatedTimezones.includes(timezone)\n    )\n    .sort(gmtSort)\n    .map(timezone => {\n      const displayName = timezone\n        .replace('Etc/', '')\n        .replace(/[+-]/g, c => (c === '+' ? '-' : '+')); //swap '+' sign with '-' sign to preserve correct time\n      return {\n        display: displayName,\n        value: timezone\n      };\n    });\n\n  gmtTimezones.splice(0, 0, {\n    display: 'Current time zone',\n    value: moment.tz.guess()\n  });\n\n  return gmtTimezones;\n};\n\nexport const GMT_TIMEZONES = getGmtTimezones();\n\nexport const DATE_FORMATS = [\n  {\n    display: '29/08/2019',\n    value: 'DD/MM/YYYY'\n  },\n  {\n    display: 'Friday, 29/08/2019',\n    value: 'dddd, DD/MM/YYYY'\n  },\n  {\n    display: '29 Aug 2019',\n    value: 'DD MMM YYYY'\n  },\n  {\n    display: 'Friday, 29 Aug 2019',\n    value: 'dddd, DD MMM YYYY'\n  },\n  {\n    display: '29th August 2019',\n    value: 'Do MMMM YYYY'\n  },\n  {\n    display: 'Friday, 29th August 2019',\n    value: 'dddd, Do MMMM YYYY'\n  }\n];\n\nexport const TIME_FORMATS = [\n  {\n    display: '12-hour (AM/PM)',\n    value: 'h:mm:ss a'\n  },\n  {\n    display: '24-hour',\n    value: 'HH:mm:ss'\n  }\n];\n","import styled from '@emotion/styled/macro';\n\nexport const TimePre = styled.pre`\n  font-weight: bold;\n  font-family: inherit;\n  font-size: 180%;\n  margin: 0 auto;\n`;\n\nexport const DatePre = styled.pre`\n  font-family: inherit;\n  margin: 0.25em 0 auto;\n`;\n","import React, { useState } from 'react';\nimport { string } from 'prop-types';\n\nimport { useInterval } from '../../../../hooks';\nimport { getDateTime } from './helpers';\n\nimport { Typography } from '@material-ui/core';\nimport { DatePre, TimePre } from './styled';\n\nconst WorldClockWidget = props => {\n  const {\n    timeZoneId,\n    dateFormat,\n    timeFormat,\n    displayDate,\n    displayTime,\n    textSize\n  } = props;\n\n  const date = getDateTime(timeZoneId, dateFormat);\n\n  const initTime = getDateTime(timeZoneId, timeFormat);\n  const [time, setTime] = useState(initTime);\n\n  useInterval(() => {\n    setTime(getDateTime(timeZoneId, timeFormat));\n  }, 1000);\n\n  return (\n    <Typography variant={textSize}>\n      {displayTime && <TimePre>{time}</TimePre>}\n      {displayDate && <DatePre>{date}</DatePre>}\n    </Typography>\n  );\n};\n\nWorldClockWidget.propTypes = {\n  timeZoneId: string.isRequired,\n  dateFormat: string.isRequired,\n  timeFormat: string.isRequired,\n  textSize: string\n};\n\nWorldClockWidget.defaultProps = {\n  textSize: 'h5'\n};\n\nexport default WorldClockWidget;\n","const getNextStatus = status => {\n  const statusArray = ['OK', 'FAIL', 'UNKNOWN'];\n  const statusIndex = statusArray.findIndex(element => element === status);\n\n  let nextStatusIndex = 0;\n\n  if (statusIndex !== -1) {\n    nextStatusIndex =\n      statusIndex < statusArray.length - 1 ? statusIndex + 1 : 0;\n  } else {\n    nextStatusIndex = statusArray.findIndex(element => element === 'UNKNOWN');\n  }\n\n  return statusArray[nextStatusIndex];\n};\n\nexport default getNextStatus;\n","import React from 'react';\nimport {\n  Check,\n  Close,\n  IndeterminateCheckBoxOutlined\n} from '@material-ui/icons';\n\nconst StatusIcon = ({ status, size }) => {\n  const iconComponents = {\n    OK: Check,\n    FAIL: Close,\n    UNKNOWN: IndeterminateCheckBoxOutlined\n  };\n\n  const IconComponent =\n    status in iconComponents\n      ? iconComponents[status]\n      : iconComponents['UNKNOWN'];\n\n  return <IconComponent fontSize={size} />;\n};\n\nexport default StatusIcon;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { setWidgetState } from '../../../../actions/thunks';\nimport getNextStatus from './helpers';\n\nimport { WidgetIconButton } from '../../../styled';\nimport StatusIcon from '../../../StatusIcon';\n\nconst CheckboxWidget = props => {\n  const { id } = props;\n  const { status } = useSelector(({ widgets }) => widgets.widgetsById[id]);\n  const dispatch = useDispatch();\n\n  const ariaCheckedStatusMap = {\n    OK: true,\n    FAIL: false,\n    UNKNOWN: 'mixed'\n  };\n\n  const handleChangeStatus = () => {\n    dispatch(\n      setWidgetState({\n        id,\n        status: getNextStatus(status)\n      })\n    );\n  };\n\n  return (\n    <WidgetIconButton\n      aria-label=\"Toggle status\"\n      aria-checked={ariaCheckedStatusMap[status]}\n      data-cy=\"checkbox\"\n      onClick={handleChangeStatus}\n    >\n      <StatusIcon size=\"large\" status={status} />\n    </WidgetIconButton>\n  );\n};\n\nexport default CheckboxWidget;\n","import React from 'react';\nimport { object } from 'prop-types';\n\nimport { Link } from '@material-ui/core';\nimport { Caption } from '../../../styled';\n\nimport { AEM_HEALTH_CHECKS } from '../../../../constants';\n\nconst AemHealthcheckWidget = ({ healthChecks }) => {\n  return (\n    <>\n      {Object.entries(healthChecks).map(([name, data]) => (\n        <Link href={data['url']} target=\"_blank\">\n          <Caption key={name}>\n            {AEM_HEALTH_CHECKS[name]}: {data['status']}\n          </Caption>\n        </Link>\n      ))}\n    </>\n  );\n};\n\nAemHealthcheckWidget.propTypes = {\n  healthChecks: object\n};\n\nAemHealthcheckWidget.defaultProps = {\n  healthChecks: {}\n};\n\nexport default AemHealthcheckWidget;\n","const HTTP = 'http://';\nconst WWW = 'www';\n\nexport const attachHttp = url => {\n  if (url.startsWith(WWW)) {\n    return HTTP + url;\n  }\n  return url;\n};\n","import DefaultWidget from './types/DefaultWidget';\r\nimport ExampleWidget from './types/ExampleWidget';\r\nimport JenkinsJobWidget from './types/JenkinsJobWidget';\r\nimport SonarQubeWidget from './types/SonarQubeWidget';\r\nimport ServiceCheckWidget from './types/ServiceCheckWidget';\r\nimport TextWidget from './types/TextWidget';\r\nimport BambooPlanWidget from './types/BambooPlanWidget';\r\nimport WorldClockWidget from './types/WorldClockWidget';\r\nimport CheckboxWidget from './types/CheckboxWidget';\r\nimport AemHealthcheckWidget from './types/AemHealthcheckWidget';\r\nimport IframeEmbedWidget from './types/IframeEmbedWidget';\r\n\r\nconst widgetTypes = {\r\n  DefaultWidget: {\r\n    name: 'Default',\r\n    component: DefaultWidget\r\n  },\r\n  ExampleWidget: {\r\n    name: 'Example',\r\n    component: ExampleWidget,\r\n    dialogFields: ['SchedulePeriod'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  JenkinsJobWidget: {\r\n    name: 'Jenkins Job',\r\n    component: JenkinsJobWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'Path'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  SonarQubeWidget: {\r\n    name: 'SonarQube',\r\n    component: SonarQubeWidget,\r\n    dialogFields: [\r\n      'EndpointField',\r\n      'SchedulePeriod',\r\n      'Key',\r\n      'IdNumber',\r\n      'SonarQubeMetricsInput'\r\n    ],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 },\r\n      SonarQubeMetricsInput: { minArrayLength: 1 }\r\n    }\r\n  },\r\n  ServiceCheckWidget: {\r\n    name: 'Service Check',\r\n    component: ServiceCheckWidget,\r\n    dialogFields: [\r\n      'SchedulePeriod',\r\n      'RequestMethod',\r\n      'EndpointField',\r\n      'Path',\r\n      'RequestBody',\r\n      'ResponseBody',\r\n      'StatusCode'\r\n    ],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  TextWidget: {\r\n    name: 'Text',\r\n    component: TextWidget,\r\n    dialogFields: ['Text', 'TextSize', 'TextOrientation'],\r\n    validationConstraints: {\r\n      Text: { max: 240 }\r\n    }\r\n  },\r\n  BambooPlanWidget: {\r\n    name: 'Bamboo Plan',\r\n    component: BambooPlanWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'IdString'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  WorldClockWidget: {\r\n    name: 'World Clock',\r\n    component: WorldClockWidget,\r\n    dialogFields: [\r\n      'TimeZoneId',\r\n      'DateFormat',\r\n      'TimeFormat',\r\n      'DisplayDate',\r\n      'DisplayTime',\r\n      'TextSize'\r\n    ]\r\n  },\r\n  IframeEmbedWidget: {\r\n    name: 'Iframe Embed',\r\n    component: IframeEmbedWidget,\r\n    dialogFields: ['UrlForContent']\r\n  },\r\n  CheckboxWidget: {\r\n    name: 'Checkbox',\r\n    component: CheckboxWidget,\r\n    showUpdateTime: true\r\n  },\r\n  AemHealthcheckWidget: {\r\n    name: 'AEM Healthcheck',\r\n    component: AemHealthcheckWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'AemHealthcheckInput'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 },\r\n      AemHealthcheckInput: { minArrayLength: 1 }\r\n    }\r\n  }\r\n};\r\n\r\nexport default widgetTypes;\r\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { attachHttp } from './helpers';\n\nimport { StyledIframe } from '../../../styled';\nimport { Typography } from '@material-ui/core';\n\nconst IframeEmbedWidget = ({ url }) => {\n  if (url) {\n    return <StyledIframe url={attachHttp(url)} />;\n  } else {\n    return <Typography variant=\"h5\">URL is blank</Typography>;\n  }\n};\n\nIframeEmbedWidget.propTypes = {\n  url: string.isRequired\n};\n\nexport default IframeEmbedWidget;\n","import { sortByKey } from '../../../helpers';\r\n\r\nexport const parseWidgetTypes = widgetTypes => {\r\n  const sortedWidgetTypes = sortByKey(widgetTypes, 'name');\r\n\r\n  return Object.entries(sortedWidgetTypes).reduce((obj, [type, { name }]) => {\r\n    return [\r\n      ...obj,\r\n      {\r\n        display: name,\r\n        value: type\r\n      }\r\n    ];\r\n  }, []);\r\n};\r\n\r\nexport const transformMinValueToHalf = () => {\r\n  let prevValue;\r\n\r\n  return value => {\r\n    if (value < 1) {\r\n      return (prevValue = 0.5);\r\n    }\r\n\r\n    if (prevValue === 0.5) {\r\n      return (prevValue = 1);\r\n    }\r\n\r\n    return (prevValue =\r\n      value < prevValue ? Math.floor(value) : Math.ceil(value));\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { FormControl, InputLabel, Input, Select } from '@material-ui/core';\r\nimport { getToken } from '../utils/auth';\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nconst DropdownField = props => {\r\n  const {\r\n    onChange,\r\n    id,\r\n    label,\r\n    value,\r\n    name,\r\n    children,\r\n    dropdownItems,\r\n    itemsUrl,\r\n    dataCy,\r\n    ...other\r\n  } = props;\r\n  const initialLoaded = !itemsUrl;\r\n  const [options, setOptions] = useState(dropdownItems);\r\n  const [loaded, setLoaded] = useState(initialLoaded);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  useEffect(() => {\r\n    if (itemsUrl) {\r\n      const init = isAuthenticated\r\n        ? {\r\n            headers: {\r\n              Authorization: getToken()\r\n            }\r\n          }\r\n        : undefined;\r\n\r\n      fetch(itemsUrl, init)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setOptions(data);\r\n          setLoaded(true);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  }, [itemsUrl, isAuthenticated]);\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel shrink htmlFor={id}>\r\n        {label}\r\n      </InputLabel>\r\n      <Select\r\n        onChange={onChange}\r\n        value={value}\r\n        input={<Input name={name} id={id} />}\r\n        name={name}\r\n        SelectDisplayProps={other}\r\n        data-cy={dataCy}\r\n      >\r\n        {loaded && children(options)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nDropdownField.defaultProps = {\r\n  value: ''\r\n};\r\n\r\nexport default DropdownField;\r\n","import React from 'react';\nimport { string } from 'prop-types';\n\nimport { MenuItem } from '@material-ui/core';\nimport DropdownField from '../../DropdownField';\n\nconst EndpointInput = props => {\n  return (\n    <DropdownField {...props}>\n      {endpoints =>\n        endpoints.map(({ id, label }) => (\n          <MenuItem key={id} value={id}>\n            {label}\n          </MenuItem>\n        ))\n      }\n    </DropdownField>\n  );\n};\n\nEndpointInput.propTypes = {\n  value: string.isRequired\n};\n\nexport default EndpointInput;\n","import React from 'react';\nimport { node, any } from 'prop-types';\n\nimport { Typography } from '@material-ui/core';\n\nconst TabPanel = ({ children, value, index, ...other }) => {\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      {...other}\n    >\n      {children}\n    </Typography>\n  );\n};\n\nTabPanel.propTypes = {\n  children: node,\n  index: any.isRequired,\n  value: any.isRequired\n};\n\nexport default TabPanel;\n","import React from 'react';\r\n\r\nconst ValidationMessages = ({ className, messages, ...others }) => (\r\n  <>\r\n    {messages !== undefined && (\r\n      <ul className={className} {...others}>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message}</li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default ValidationMessages;\r\n","import React from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nconst CancelButton = ({ handleCancelClick, className, ...other }) => (\n  <Button\n    onClick={handleCancelClick}\n    className={className}\n    variant=\"contained\"\n    color=\"secondary\"\n    {...other}\n  >\n    Cancel\n  </Button>\n);\n\nexport default CancelButton;\n","import styled from '@emotion/styled/macro';\r\nimport { TextField, Tabs } from '@material-ui/core';\r\nimport TabPanel from '../TabPanel';\r\nimport ValidationMessages from '../ValidationMessages';\r\nimport CancelButton from '../CancelButton';\r\n\r\nexport const StyledNumberField = styled(TextField)`\r\n  flex-basis: calc(50% - 18px);\r\n`;\r\n\r\nexport const StyledTabPanel = styled(TabPanel)`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const StyledTabs = styled(Tabs)`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const StyledValidationMessages = styled(ValidationMessages)`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst NumberInput = ({ min, step, error, dataCy, ...other }) => {\r\n  return (\r\n    <TextField\r\n      type=\"number\"\r\n      inputProps={{ min, step, 'data-cy': dataCy }}\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst TextInput = ({ error, dataCy, values, ...other }) => {\r\n  return (\r\n    <TextField\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      inputProps={{ 'data-cy': dataCy }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { ALL_SONARQUBE_METRICS } from '../../../constants';\r\n\r\nimport {\r\n  Input,\r\n  InputLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n  ListItemText,\r\n  Select,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\n\r\nimport { StyledFormControl } from './../../styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst SonarQubeMetricsInput = ({ onChange, value, error, dataCy }) => {\r\n  const inputId = 'sonarqube-metrics-input';\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledFormControl error={hasError(error)} theme={theme}>\r\n      <InputLabel htmlFor={inputId}>Metrics</InputLabel>\r\n      <Select\r\n        multiple\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input id={inputId} />}\r\n        renderValue={value => `${value.length} selected`}\r\n        data-cy={dataCy}\r\n      >\r\n        {ALL_SONARQUBE_METRICS.map(name => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={value.includes(name)} />\r\n            <ListItemText primary={name} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {hasError(error) && <FormHelperText>{error}</FormHelperText>}\r\n    </StyledFormControl>\r\n  );\r\n};\r\n\r\nexport default SonarQubeMetricsInput;\r\n","import React from 'react';\nimport { MenuItem } from '@material-ui/core';\n\nimport DropdownField from '../../DropdownField';\nimport { StyledFormControlForDropdown } from '../../styled';\n\n/**\n * Displays dropdown field using passed array of objects with the following properties: display, value.\n * Example: [\n *  {\n *      display: \"name1\"\n *      value: \"value1\"\n *  },\n *  {\n *      display: \"name2\"\n *      value: \"value2\"\n *  }\n * ]\n */\nconst DisplayValueSelect = props => {\n  return (\n    <StyledFormControlForDropdown>\n      <DropdownField {...props}>\n        {items =>\n          items.map(item => (\n            <MenuItem key={item.value} value={item.value}>\n              {item.display}\n            </MenuItem>\n          ))\n        }\n      </DropdownField>\n    </StyledFormControlForDropdown>\n  );\n};\n\nexport default DisplayValueSelect;\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst MultilineTextInput = ({ error, dataCy, values, ...other }) => {\r\n  return (\r\n    <TextField\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      multiline={true}\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      inputProps={{ 'data-cy': dataCy }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MultilineTextInput;\r\n","import React from 'react';\r\n\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\n\r\nconst CheckboxInput = ({ value, onChange, dataCy, ...other }) => (\r\n  <FormControlLabel\r\n    control={<Checkbox checked={value} onChange={onChange} data-cy={dataCy} />}\r\n    {...other}\r\n  />\r\n);\r\n\r\nexport default CheckboxInput;\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { AEM_HEALTH_CHECKS } from '../../../constants';\r\n\r\nimport {\r\n  Input,\r\n  InputLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n  ListItemText,\r\n  Select,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\nimport { StyledFormControl } from './../../styled';\r\n\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst AemHealthcheckInput = ({ onChange, value, error, dataCy }) => {\r\n  const theme = useTheme();\r\n  const inputId = 'aemhealthcheck-metrics-input';\r\n\r\n  return (\r\n    <StyledFormControl error={hasError(error)} theme={theme}>\r\n      <InputLabel htmlFor={inputId}>Health Checks</InputLabel>\r\n      <Select\r\n        multiple\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input id={inputId} />}\r\n        renderValue={value => `${value.length} selected`}\r\n        data-cy={dataCy}\r\n      >\r\n        {Object.entries(AEM_HEALTH_CHECKS).map(([name, label]) => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={value.includes(name)} />\r\n            <ListItemText primary={label} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {hasError(error) && (\r\n        <FormHelperText data-cy={`${dataCy}-error`}>{error}</FormHelperText>\r\n      )}\r\n    </StyledFormControl>\r\n  );\r\n};\r\n\r\nexport default AemHealthcheckInput;\r\n","import React from 'react';\r\nimport { elementType, func, string } from 'prop-types';\r\n\r\nconst conditionallyHidden = (Component, conditionField, condition) => ({\r\n  values,\r\n  ...other\r\n}) => {\r\n  if (values[conditionField] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return condition(values[conditionField]) ? (\r\n    <Component values={values} {...other} />\r\n  ) : null;\r\n};\r\n\r\nconditionallyHidden.propTypes = {\r\n  Component: elementType,\r\n  condition: func,\r\n  conditionField: string\r\n};\r\n\r\nexport default conditionallyHidden;\r\n","import React from 'react';\r\n\r\nimport { FormControlLabel, FormControl, Switch } from '@material-ui/core';\r\n\r\nconst SwitchInput = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  checkboxValue,\r\n  dataCy,\r\n  ...other\r\n}) => {\r\n  return (\r\n    <FormControl margin=\"normal\">\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={value}\r\n            onChange={onChange}\r\n            color=\"primary\"\r\n            value={checkboxValue}\r\n            inputProps={{ 'data-cy': dataCy }}\r\n            {...other}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SwitchInput;\r\n","import styled from '@emotion/styled/macro';\r\nimport NumberInput from './NumberInput';\r\n\r\nexport const StyledNumberInput = styled(NumberInput)`\r\n  flex-basis: calc(50% - 18px);\r\n`;\r\n","import { string, number, boolean, array } from 'yup';\r\n\r\nimport {\r\n  DATE_FORMATS,\r\n  GMT_TIMEZONES,\r\n  TIME_FORMATS\r\n} from '../types/WorldClockWidget/helpers';\r\nimport { parseWidgetTypes, transformMinValueToHalf } from './helpers';\r\nimport {\r\n  REQUEST_METHODS,\r\n  TEXT_SIZES,\r\n  validationMessages as vm\r\n} from '../../../constants';\r\nimport { uniqueTitleTestCreator } from '../../validation';\r\nimport widgetTypes from '../../widgets';\r\n\r\nimport EndpointInput from './EndpointInput';\r\nimport NumberInput from './NumberInput';\r\nimport TextInput from './TextInput';\r\nimport SonarQubeMetricsInput from './SonarQubeMetricsInput';\r\nimport DisplayValueSelect from './DisplayValueSelect';\r\nimport MultilineTextInput from './MultilineTextInput';\r\nimport CheckboxInput from './CheckboxInput';\r\nimport AemHealthcheckInput from './AemHealthcheckInput';\r\nimport conditionallyHidden from './conditionallyHidden';\r\nimport SwitchInput from './SwitchInput';\r\nimport { StyledNumberInput } from './styled';\r\n\r\nconst dialogFields = {\r\n  WidgetTypeField: {\r\n    component: DisplayValueSelect,\r\n    name: 'type',\r\n    label: 'Type',\r\n    dropdownItems: parseWidgetTypes(widgetTypes),\r\n    validator: () => string().required(vm.FIELD_REQUIRED())\r\n  },\r\n  TitleField: {\r\n    component: TextInput,\r\n    name: 'title',\r\n    label: 'Title',\r\n    initialValue: 'Title',\r\n    validator: ({ max }) =>\r\n      string()\r\n        .trim()\r\n        .max(max, vm.STRING_LENGTH('Title', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  UniqueTitleField: {\r\n    component: TextInput,\r\n    name: 'title',\r\n    label: 'Title',\r\n    initialValue: 'Title',\r\n    validator: ({ max, boardId, boards }) =>\r\n      string()\r\n        .trim()\r\n        .max(max, vm.STRING_LENGTH('Title', max))\r\n        .test(uniqueTitleTestCreator(boardId, boards))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  ColumnField: {\r\n    component: NumberInput,\r\n    name: 'columns',\r\n    label: 'Columns',\r\n    initialValue: 1,\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Columns', min))\r\n        .max(max, vm.NUMBER_MAX('Columns', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  ColumnFieldSm: {\r\n    component: StyledNumberInput,\r\n    name: 'columns',\r\n    label: 'Columns',\r\n    initialValue: 1,\r\n    valueUpdater: transformMinValueToHalf(),\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Columns', min))\r\n        .max(max, vm.NUMBER_MAX('Columns', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  RowFieldSm: {\r\n    component: StyledNumberInput,\r\n    name: 'rows',\r\n    label: 'Rows',\r\n    initialValue: 1,\r\n    valueUpdater: transformMinValueToHalf(),\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Rows', min))\r\n        .max(max, vm.NUMBER_MAX('Rows', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  NewLineField: {\r\n    component: SwitchInput,\r\n    name: 'goNewLine',\r\n    label: 'Go to new line',\r\n    checkboxValue: 'goNewLine',\r\n    validator: () => boolean()\r\n  },\r\n  DisabledField: {\r\n    component: SwitchInput,\r\n    name: 'disabled',\r\n    label: 'Disabled',\r\n    checkboxValue: 'disabled',\r\n    validator: () => boolean()\r\n  },\r\n  AutoSwitchField: {\r\n    component: SwitchInput,\r\n    name: 'autoSwitch',\r\n    label: 'Auto Switch',\r\n    checkboxValue: 'autoSwitch',\r\n    validator: () => boolean()\r\n  },\r\n  SwitchInterval: {\r\n    component: conditionallyHidden(NumberInput, 'autoSwitch', value => value),\r\n    name: 'switchInterval',\r\n    label: 'Switch Interval',\r\n    validator: ({ min }) =>\r\n      number().when('autoSwitch', {\r\n        is: true,\r\n        then: number()\r\n          .min(min, vm.NUMBER_MIN('Switch interval', min))\r\n          .required(),\r\n        otherwise: number().notRequired()\r\n      })\r\n  },\r\n  EndpointField: {\r\n    component: EndpointInput,\r\n    name: 'endpoint',\r\n    label: 'Endpoint',\r\n    itemsUrl: '/api/endpoints',\r\n    validator: () => string()\r\n  },\r\n  SchedulePeriod: {\r\n    component: NumberInput,\r\n    name: 'schedulePeriod',\r\n    label: 'Schedule Period [sec] (if 0 will run once)',\r\n    min: 0,\r\n    step: 10,\r\n    initialValue: 120,\r\n    validator: ({ min }) =>\r\n      number().min(min, vm.NUMBER_MIN('Schedule period', min))\r\n  },\r\n  Path: {\r\n    component: TextInput,\r\n    name: 'path',\r\n    label: 'Path',\r\n    validator: () => string()\r\n  },\r\n  URL: {\r\n    component: TextInput,\r\n    name: 'url',\r\n    label: 'URL',\r\n    validator: () => string().url(vm.INVALID_URL())\r\n  },\r\n  UrlForContent: {\r\n    component: TextInput,\r\n    name: 'content.url',\r\n    label: 'URL',\r\n    validator: () => string().url(vm.INVALID_URL())\r\n  },\r\n  IdString: {\r\n    component: TextInput,\r\n    name: 'idString',\r\n    label: 'ID',\r\n    validator: () => string()\r\n  },\r\n  IdNumber: {\r\n    component: NumberInput,\r\n    name: 'idNumber',\r\n    label: 'ID',\r\n    step: 1,\r\n    validator: () => number()\r\n  },\r\n  Key: {\r\n    component: TextInput,\r\n    name: 'keyString',\r\n    label: 'Key',\r\n    validator: () => string()\r\n  },\r\n  SonarQubeMetricsInput: {\r\n    component: SonarQubeMetricsInput,\r\n    name: 'selectedMetrics',\r\n    initialValue: [\r\n      'blocker_violations',\r\n      'critical_violations',\r\n      'major_violations',\r\n      'minor_violations'\r\n    ],\r\n    validator: ({ minArrayLength = 0 }) =>\r\n      array()\r\n        .ensure()\r\n        .min(minArrayLength, vm.FIELD_MIN_ITEMS())\r\n        .of(string())\r\n  },\r\n  AemHealthcheckInput: {\r\n    component: AemHealthcheckInput,\r\n    name: 'selectedHealthChecks',\r\n    initialValue: [\r\n      'slingJobs',\r\n      'systemchecks',\r\n      'inactiveBundles',\r\n      'DiskSpaceHealthCheck'\r\n    ],\r\n    validator: ({ minArrayLength = 0 }) =>\r\n      array()\r\n        .ensure()\r\n        .min(minArrayLength, vm.FIELD_MIN_ITEMS())\r\n        .of(string())\r\n  },\r\n  StatusCode: {\r\n    component: NumberInput,\r\n    name: 'expectedStatusCode',\r\n    label: 'Expected Status Code',\r\n    min: 0,\r\n    step: 1,\r\n    initialValue: 200,\r\n    validator: () =>\r\n      number()\r\n        .lessThan(600)\r\n        .moreThan(99)\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  TimeZoneId: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.timeZoneId',\r\n    label: 'Timezone',\r\n    dropdownItems: GMT_TIMEZONES,\r\n    initialValue: GMT_TIMEZONES[0].value,\r\n    validator: () => string()\r\n  },\r\n  DateFormat: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.dateFormat',\r\n    label: 'Date Format',\r\n    dropdownItems: DATE_FORMATS,\r\n    initialValue: DATE_FORMATS[1].value,\r\n    validator: () => string()\r\n  },\r\n  TimeFormat: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.timeFormat',\r\n    label: 'Time Format',\r\n    dropdownItems: TIME_FORMATS,\r\n    initialValue: TIME_FORMATS[1].value,\r\n    validator: () => string()\r\n  },\r\n  DisplayDate: {\r\n    component: CheckboxInput,\r\n    name: 'content.displayDate',\r\n    label: 'Display date',\r\n    initialValue: true,\r\n    validator: () => boolean()\r\n  },\r\n  DisplayTime: {\r\n    component: CheckboxInput,\r\n    name: 'content.displayTime',\r\n    label: 'Display time',\r\n    initialValue: true,\r\n    validator: () => boolean()\r\n  },\r\n  Text: {\r\n    component: MultilineTextInput,\r\n    name: 'content.text',\r\n    label: 'Text',\r\n    validator: () => string()\r\n  },\r\n  RequestBody: {\r\n    component: MultilineTextInput,\r\n    name: 'body',\r\n    label: 'Request Body',\r\n    validator: () => string()\r\n  },\r\n  ResponseBody: {\r\n    component: MultilineTextInput,\r\n    name: 'expectedResponseBody',\r\n    label: 'Response Body Fragment',\r\n    validator: () => string()\r\n  },\r\n  TextSize: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.textSize',\r\n    label: 'Text Size',\r\n    dropdownItems: TEXT_SIZES,\r\n    initialValue: TEXT_SIZES[3].value,\r\n    validator: () => string()\r\n  },\r\n  RequestMethod: {\r\n    component: DisplayValueSelect,\r\n    name: 'requestMethod',\r\n    label: 'Request Method',\r\n    dropdownItems: REQUEST_METHODS,\r\n    initialValue: REQUEST_METHODS[0].value,\r\n    validator: () => string()\r\n  },\r\n  TextOrientation: {\r\n    component: CheckboxInput,\r\n    name: 'content.isVertical',\r\n    label: 'Vertical Text',\r\n    initialValue: false,\r\n    validator: () => boolean()\r\n  }\r\n};\r\n\r\nexport default dialogFields;\r\n","import { object } from 'yup';\r\n\r\nimport { splitPropsGroupName } from '../../helpers';\r\n\r\nimport dialogFields from '../widgets/dialogFields';\r\nimport { validationMessages as vm } from '../../constants';\r\n\r\nexport const createValidationSchema = (fields, constraints) => {\r\n  const validators = Array.prototype\r\n    .concat(...fields)\r\n    .reduce((schema, fieldName) => {\r\n      const { name, validator } = dialogFields[fieldName];\r\n      const [groupName, propName] = splitPropsGroupName(name);\r\n      const constraint =\r\n        constraints[fieldName] !== undefined ? constraints[fieldName] : {};\r\n      let newSchema;\r\n\r\n      if (groupName) {\r\n        const groupSchema =\r\n          schema[groupName] !== undefined ? schema[groupName] : object({});\r\n\r\n        newSchema = {\r\n          ...schema,\r\n          [groupName]: groupSchema.shape({ [propName]: validator(constraint) })\r\n        };\r\n      } else {\r\n        newSchema = { ...schema, [propName]: validator(constraint) };\r\n      }\r\n\r\n      return newSchema;\r\n    }, {});\r\n\r\n  const newValidationSchema = object().shape(validators);\r\n\r\n  return newValidationSchema;\r\n};\r\n\r\nexport const uniqueTitleTestCreator = (boardId, boards) => ({\r\n  name: 'uniqueTitle',\r\n  params: { boards, boardId },\r\n  message: vm.UNIQUE_FIELD(),\r\n  exclusive: true,\r\n  test: title =>\r\n    boards.every(board => board.title !== title || board.id === boardId)\r\n});\r\n","import { createValidationSchema } from '../validation';\r\n\r\nimport widgetTypes from '../widgets';\r\n\r\nexport const createWidgetValidationSchema = (\r\n  type,\r\n  fields,\r\n  constraints = {}\r\n) => {\r\n  const widgetType = widgetTypes[type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const allFields = [...fields, ...dialogFieldNames];\r\n  const widgetConstraints =\r\n    widgetType && widgetType.validationConstraints\r\n      ? widgetType.validationConstraints\r\n      : {};\r\n\r\n  const allConstraints = { ...widgetConstraints, ...constraints };\r\n\r\n  return createValidationSchema(allFields, allConstraints);\r\n};\r\n","import React from 'react';\r\n\r\nimport { camelToKebab, createValueRef } from './helpers';\r\n\r\nimport { StyledFieldset } from '../styled';\r\nimport { Box } from '@material-ui/core';\r\nimport dialogFields from '../widgets/dialogFields';\r\n\r\nconst DynamicForm = ({ values, fields, handleChange, errors, rootName }) => {\r\n  const createField = field => {\r\n    const {\r\n      component: DialogField,\r\n      name,\r\n      initialValue = '',\r\n      valueUpdater,\r\n      validator,\r\n      ...dialogFieldProps\r\n    } = dialogFields[field];\r\n\r\n    const valueRef = createValueRef(values, initialValue, name);\r\n\r\n    return (\r\n      <DialogField\r\n        key={name}\r\n        values={values}\r\n        value={valueRef}\r\n        onChange={handleChange(name, valueUpdater)}\r\n        error={errors[name]}\r\n        dataCy={`${rootName}-${camelToKebab(name)}-input`}\r\n        {...dialogFieldProps}\r\n      />\r\n    );\r\n  };\r\n\r\n  const createGroupedFields = groupedFields => {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        {groupedFields.map(field => {\r\n          return createField(field);\r\n        })}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledFieldset component=\"fieldset\">\r\n        {fields.map(field => {\r\n          if (typeof field === 'string') {\r\n            return createField(field);\r\n          } else {\r\n            return createGroupedFields(field);\r\n          }\r\n        })}\r\n      </StyledFieldset>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n","import { splitPropsGroupName } from '../../helpers';\r\n\r\nexport const camelToKebab = string =>\r\n  string.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase();\r\n\r\nexport const createValueRef = (values, initialValue, name) => {\r\n  const [groupName, propName] = splitPropsGroupName(name);\r\n\r\n  if (groupName) {\r\n    if (!values[groupName]) {\r\n      values[groupName] = {};\r\n    }\r\n\r\n    if (values[groupName][propName] === undefined) {\r\n      values[groupName][propName] = initialValue;\r\n    }\r\n\r\n    return values[groupName][propName];\r\n  }\r\n\r\n  if (values[propName] === undefined) {\r\n    values[propName] = initialValue;\r\n  }\r\n\r\n  return values[propName];\r\n};\r\n","import React from 'react';\r\nimport { func, object, string } from 'prop-types';\r\n\r\nimport widgetTypes from '../widgets';\r\n\r\nimport DynamicForm from '../DynamicForm';\r\n\r\nconst WidgetTypeForm = ({ values, type, handleChange, errors, ...other }) => {\r\n  const widgetType = widgetTypes[type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const hasDialogFields = dialogFieldNames.length !== 0;\r\n\r\n  return (\r\n    hasDialogFields && (\r\n      <DynamicForm\r\n        values={values}\r\n        handleChange={handleChange}\r\n        fields={dialogFieldNames}\r\n        errors={errors}\r\n        {...other}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nWidgetTypeForm.propTypes = {\r\n  handleChange: func.isRequired,\r\n  type: string.isRequired,\r\n  values: object.isRequired\r\n};\r\n\r\nexport default WidgetTypeForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { string, number, bool } from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport widgetTypes from '../widgets';\r\nimport { useFormData } from '../../hooks';\r\n\r\nimport { createWidgetValidationSchema } from './validators';\r\nimport {\r\n  WIDGET_TITLE_LENGTH_LIMIT,\r\n  WIDGET_COLUMNS_MIN,\r\n  WIDGET_ROWS_MIN,\r\n  WIDGET_ROWS_MAX\r\n} from '../../constants';\r\n\r\nimport { Tab, Button } from '@material-ui/core';\r\nimport DynamicForm from '../DynamicForm';\r\nimport WidgetTypeForm from '../WidgetTypeForm';\r\nimport { StyledTabPanel, StyledTabs, StyledCancelButton } from './styled';\r\n\r\nconst WidgetForm = ({ handleSubmit, handleCancel, ...initialFormValues }) => {\r\n  const boardColumns = useSelector(\r\n    ({ ui, boards }) => boards.boardsById[ui.currentBoard].columns\r\n  );\r\n\r\n  const generalFields = [\r\n    'WidgetTypeField',\r\n    'TitleField',\r\n    ['ColumnFieldSm', 'RowFieldSm'],\r\n    'NewLineField',\r\n    'DisabledField'\r\n  ];\r\n  const constraints = {\r\n    TitleField: { max: WIDGET_TITLE_LENGTH_LIMIT },\r\n    ColumnFieldSm: { min: WIDGET_COLUMNS_MIN, max: boardColumns },\r\n    RowFieldSm: { min: WIDGET_ROWS_MIN, max: WIDGET_ROWS_MAX }\r\n  };\r\n\r\n  const {\r\n    values,\r\n    handleChange,\r\n    withValidation,\r\n    errors,\r\n    setValidationSchema\r\n  } = useFormData(initialFormValues, {\r\n    initialSchema: createWidgetValidationSchema(\r\n      initialFormValues.type,\r\n      generalFields,\r\n      constraints\r\n    ),\r\n    onChange: true\r\n  });\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const widgetType = widgetTypes[values.type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const hasDialogFields = dialogFieldNames.length !== 0;\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const validationSchema = createWidgetValidationSchema(\r\n      values.type,\r\n      generalFields,\r\n      constraints\r\n    );\r\n    setValidationSchema(validationSchema);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.type]);\r\n\r\n  return (\r\n    <form onSubmit={withValidation(handleSubmit)} noValidate=\"novalidate\">\r\n      <StyledTabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        variant=\"fullWidth\"\r\n      >\r\n        <Tab label=\"General\" data-cy=\"widget-form-general-tab\" />\r\n        {hasDialogFields && (\r\n          <Tab label={widgetType.name} data-cy=\"widget-form-dynamic-tab\" />\r\n        )}\r\n      </StyledTabs>\r\n      <StyledTabPanel value={tabValue} index={0}>\r\n        <DynamicForm\r\n          values={values}\r\n          fields={generalFields}\r\n          handleChange={handleChange}\r\n          errors={errors}\r\n          rootName=\"widget-form\"\r\n        />\r\n      </StyledTabPanel>\r\n      {hasDialogFields && (\r\n        <StyledTabPanel value={tabValue} index={1}>\r\n          <WidgetTypeForm\r\n            type={values.type}\r\n            values={values}\r\n            errors={errors}\r\n            handleChange={handleChange}\r\n            rootName=\"widget-form\"\r\n          />\r\n        </StyledTabPanel>\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        data-cy=\"widget-form-submit-button\"\r\n      >\r\n        Save\r\n      </Button>\r\n      <StyledCancelButton\r\n        handleCancelClick={handleCancel}\r\n        data-cy=\"widget-form-cancel-button\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nWidgetForm.propTypes = {\r\n  disabled: bool,\r\n  columns: number,\r\n  goNewLine: bool,\r\n  rows: number,\r\n  title: string,\r\n  type: string\r\n};\r\n\r\nWidgetForm.defaultProps = {\r\n  disabled: false,\r\n  columns: 1,\r\n  goNewLine: false,\r\n  rows: 1,\r\n  title: 'Default Widget',\r\n  type: 'DefaultWidget'\r\n};\r\n\r\nexport default WidgetForm;\r\n","import React from 'react';\r\nimport { func } from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addNewWidget } from '../actions/thunks';\r\n\r\nimport WidgetForm from './WidgetForm';\r\n\r\nconst AddWidget = ({ closeDialog }) => {\r\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddWidget = values => {\r\n    dispatch(addNewWidget({ currentBoardId, values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <WidgetForm handleSubmit={handleAddWidget} handleCancel={closeDialog} />\r\n  );\r\n};\r\n\r\nAddWidget.propTypes = {\r\n  closeDialog: func.isRequired\r\n};\r\n\r\nexport default AddWidget;\r\n","import React, { forwardRef } from 'react';\r\nimport { bool, number, object, string } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { mapStatusToColor } from './helpers';\r\nimport { COLUMN_MULTIPLIER, ROW_MULTIPLIER } from '../../constants';\r\n\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nexport const StyledCard = styled(\r\n  forwardRef(\r\n    (\r\n      {\r\n        status,\r\n        columns,\r\n        goNewLine,\r\n        isLoggedIn,\r\n        isDragging,\r\n        isOver,\r\n        rows,\r\n        theme,\r\n        ...other\r\n      },\r\n      ref\r\n    ) => <Card {...other} ref={ref} />\r\n  )\r\n)`\r\n  background: ${({ isDragging, status, theme }) =>\r\n    !isDragging\r\n      ? mapStatusToColor(status, theme)\r\n      : theme.palette.background.paper};\r\n  box-shadow: none;\r\n  cursor: ${({ isLoggedIn }) => (isLoggedIn ? 'move' : 'default')};\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-column-start: ${({ goNewLine }) => goNewLine === true && 1};\r\n  grid-column-end: span ${({ columns }) => columns * COLUMN_MULTIPLIER};\r\n  grid-row-end: span ${({ rows }) => rows * ROW_MULTIPLIER};\r\n  position: relative;\r\n\r\n  ${({ isDragging, isOver, theme }) =>\r\n    isDragging &&\r\n    `\r\n    &::before {\r\n      background: ${theme.palette.background.paper};\r\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\r\n      border-radius: inherit;\r\n      content: '';\r\n      display: block;\r\n      height: 100%;\r\n      position: absolute;\r\n      z-index: 2;\r\n      opacity: ${isDragging ? 1 : 0};\r\n      width: 100%;\r\n    }\r\n  `}\r\n`;\r\n\r\nStyledCard.propTypes = {\r\n  columns: number.isRequired,\r\n  goNewLine: bool.isRequired,\r\n  rows: number.isRequired,\r\n  status: string.isRequired,\r\n  theme: object.isRequired\r\n};\r\n\r\nexport const StyledCardHeader = styled(CardHeader)`\r\n  z-index: 1;\r\n`;\r\n\r\nexport const StyledCardContent = styled(CardContent)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nexport const ErrorMessage = ({ errorMessage, errorCause }) => {\n  return (\n    <>\n      <Typography paragraph>{errorMessage}</Typography>\n      <Typography variant=\"caption\" paragraph>\n        {errorCause}\n      </Typography>\n    </>\n  );\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { object, string } from 'prop-types';\n\nimport widgetTypes from './widgets';\n\nconst WidgetContent = ({ id, type, content }) => {\n  const notFoundMessage = 'Widget type not found';\n  const WidgetType = widgetTypes[type]\n    ? widgetTypes[type].component\n    : () => notFoundMessage;\n\n  return <WidgetType id={id} {...content} />;\n};\n\nWidgetContent.propTypes = {\n  content: object,\n  type: string.isRequired\n};\n\nexport default WidgetContent;\n","import styled from '@emotion/styled/macro';\n\nimport { Typography } from '@material-ui/core';\n\nexport const StyledTypography = styled(Typography)`\n  display: flex;\n  flex: 1;\n  align-items: flex-end;\n`;\n","import React from 'react';\n\nimport { StyledTypography } from './styled';\n\nconst LastUpdate = ({ lastUpdateTime }) => {\n  return (\n    <StyledTypography\n      align=\"left\"\n      color=\"textSecondary\"\n      variant=\"caption\"\n      gutterBottom={false}\n    >\n      Last update: {lastUpdateTime}\n    </StyledTypography>\n  );\n};\n\nexport default LastUpdate;\n","import React from 'react';\n\nimport { StyledCardContent } from './styled';\nimport ErrorMessage from '../ErrorMessage';\nimport WidgetContent from '../WidgetContent';\nimport LastUpdate from '../LastUpdate';\n\nexport const mapStatusToColor = (status, theme) => theme.palette.status[status];\n\nexport const renderCardContent = (\n  content,\n  showUpdateTime,\n  disabled,\n  id,\n  type\n) => {\n  return (\n    <StyledCardContent>\n      {content && content.errorMessage ? (\n        <ErrorMessage {...content} />\n      ) : !disabled ? (\n        <WidgetContent id={id} type={type} content={content} />\n      ) : (\n        'Disabled'\n      )}\n      {showUpdateTime && (\n        <LastUpdate lastUpdateTime={new Date().toLocaleString()} />\n      )}\n    </StyledCardContent>\n  );\n};\n","import React from 'react';\r\nimport { func, object, string, bool, number } from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { saveWidget } from '../actions/thunks';\r\n\r\nimport WidgetForm from './WidgetForm';\r\n\r\nconst EditWidget = ({ closeDialog, id, widgetTypeData, ...widgetData }) => {\r\n  const initialFormValues = { ...widgetData, ...widgetTypeData };\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditWidget = values => {\r\n    dispatch(saveWidget({ id, values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <WidgetForm\r\n      handleSubmit={handleEditWidget}\r\n      handleCancel={closeDialog}\r\n      {...initialFormValues}\r\n    />\r\n  );\r\n};\r\n\r\nEditWidget.propTypes = {\r\n  closeDialog: func.isRequired,\r\n  disabled: bool.isRequired,\r\n  columns: number.isRequired,\r\n  goNewLine: bool.isRequired,\r\n  id: string.isRequired,\r\n  rows: number.isRequired,\r\n  title: string.isRequired,\r\n  type: string.isRequired,\r\n  widgetTypeData: object.isRequired\r\n};\r\n\r\nexport default EditWidget;\r\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { func } from 'prop-types';\n\nimport { getIsAuthenticated } from '../selectors';\n\nimport { Menu, MenuList, IconButton } from '@material-ui/core';\nimport { MoreVert } from '@material-ui/icons';\n\nconst MoreMenu = ({ children }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  const handleMoreButtonClick = ({ currentTarget }) =>\n    setAnchorEl(currentTarget);\n\n  const handleMoreMenuClose = () => setAnchorEl(null);\n\n  if (!isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <>\n      <IconButton\n        onClick={handleMoreButtonClick}\n        aria-label=\"More\"\n        aria-controls=\"more-menu\"\n        aria-haspopup=\"true\"\n        data-cy=\"more-menu-button\"\n      >\n        <MoreVert />\n      </IconButton>\n      <Menu\n        onClose={handleMoreMenuClose}\n        anchorEl={anchorEl}\n        id=\"more-menu\"\n        keepMounted\n        open={Boolean(anchorEl)}\n      >\n        <MenuList>{children(handleMoreMenuClose)}</MenuList>\n      </Menu>\n    </>\n  );\n};\n\nMoreMenu.propTypes = {\n  children: func.isRequired\n};\n\nexport default MoreMenu;\n","import styled from '@emotion/styled/macro';\nimport { Box, Button } from '@material-ui/core';\n\nexport const StyledCancelButton = styled(Button)`\n  margin-left: 1em;\n`;\n\nexport const StyledButtonBox = styled(Box)`\n  margin-top: 1em;\n`;\n","import React from 'react';\nimport { func, string } from 'prop-types';\n\nimport { Button, Typography } from '@material-ui/core/index';\nimport AppDialog from '../AppDialog';\nimport { StyledButtonBox, StyledCancelButton } from './styled';\n\nconst ConfirmationDialog = props => {\n  const {\n    open,\n    title,\n    content,\n    handleOk,\n    labelOk,\n    handleCancel,\n    labelCancel\n  } = props;\n\n  return (\n    <AppDialog\n      handleDialogClose={handleCancel}\n      open={open}\n      title={title}\n      data-cy=\"confirmation-dialog\"\n    >\n      <>\n        <Typography id=\"confirmation-dialog-content\">{content}</Typography>\n        <StyledButtonBox display=\"flex\" justifyContent=\"flex-end\">\n          <Button\n            onClick={handleOk}\n            variant=\"contained\"\n            color=\"primary\"\n            autoFocus\n            data-cy=\"confirmation-dialog-ok\"\n          >\n            {labelOk}\n          </Button>\n          {handleCancel && (\n            <StyledCancelButton\n              onClick={handleCancel}\n              variant=\"outlined\"\n              color=\"primary\"\n              data-cy=\"confirmation-dialog-cancel\"\n            >\n              {labelCancel}\n            </StyledCancelButton>\n          )}\n        </StyledButtonBox>\n      </>\n    </AppDialog>\n  );\n};\n\nConfirmationDialog.propTypes = {\n  handleOk: func.isRequired,\n  content: string,\n  labelOk: string,\n  labelCancel: string\n};\n\nConfirmationDialog.defaultProps = {\n  content: '',\n  labelOk: 'OK',\n  labelCancel: 'Cancel'\n};\n\nexport default ConfirmationDialog;\n","import React, { useRef } from 'react';\nimport { string } from 'prop-types';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTheme } from '@material-ui/styles';\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport { useToggle } from '../../hooks';\nimport { removeWidget, reorderWidgets } from '../../actions/thunks';\nimport widgetTypes from '../widgets';\nimport { ItemTypes } from '../../constants';\nimport { getIsAuthenticated } from '../../selectors';\nimport { renderCardContent } from './helpers';\n\nimport { MenuItem } from '@material-ui/core';\nimport { StyledCard, StyledCardHeader } from './styled';\nimport AppDialog from '../AppDialog';\nimport EditWidget from '../EditWidget';\nimport MoreMenu from '../MoreMenu';\nimport ConfirmationDialog from '../ConfirmationDialog';\nimport WarningIcon from '@material-ui/icons/Warning';\n\nconst Widget = ({ id, index }) => {\n  const widgetData = useSelector(\n    state => state.widgets.widgetsById[id],\n    shallowEqual\n  );\n  const {\n    id: widgetId,\n    isUpdating,\n    disabled,\n    type,\n    status,\n    title,\n    content,\n    config: { columns, goNewLine, rows },\n    ...widgetTypeData\n  } = widgetData;\n  const showUpdateTime = widgetTypes[type]\n    ? widgetTypes[type].showUpdateTime\n    : false;\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const [\n    confirmationDialogOpened,\n    openConfirmationDialog,\n    closeConfirmationDialog\n  ] = useToggle();\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\n  const ref = useRef(null);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.WIDGET, id, index },\n    canDrag: isAuthenticated,\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const [{ isOver }, drop] = useDrop({\n    accept: ItemTypes.WIDGET,\n    hover(item, monitor) {\n      if (!ref.current) {\n        return;\n      }\n\n      const { id: sourceId, index: sourceIndex } = item;\n      const targetIndex = index;\n\n      if (sourceIndex === targetIndex) {\n        return;\n      }\n\n      const { left, right } = ref.current.getBoundingClientRect();\n      const dropTargetMiddleX = right - (right - left) / 2;\n      const { x: dragSourceMouseX } = monitor.getClientOffset();\n\n      if (\n        (sourceIndex < targetIndex && dragSourceMouseX < dropTargetMiddleX) ||\n        (sourceIndex > targetIndex && dragSourceMouseX > dropTargetMiddleX)\n      ) {\n        return;\n      }\n\n      dispatch(reorderWidgets(sourceId, targetIndex));\n      item.index = targetIndex;\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      dropResult: monitor.getSourceClientOffset()\n    })\n  });\n\n  drag(drop(ref));\n\n  const handleEditClick = closeMenu => () => {\n    openDialog();\n    closeMenu();\n  };\n\n  const handleDeleteClick = closeMenu => () => {\n    openConfirmationDialog();\n    closeMenu();\n  };\n\n  const deleteWidget = () => {\n    dispatch(removeWidget(id));\n    closeConfirmationDialog();\n  };\n\n  return (\n    <>\n      <StyledCard\n        status={status}\n        columns={columns}\n        goNewLine={goNewLine}\n        rows={rows}\n        theme={theme}\n        isLoggedIn={isAuthenticated}\n        isDragging={isDragging}\n        isOver={isOver}\n        ref={ref}\n      >\n        <StyledCardHeader\n          avatar={status === 'ERROR_CONFIGURATION' && <WarningIcon />}\n          title={title}\n          titleTypographyProps={{\n            component: 'h3',\n            variant: 'subtitle2',\n            color: 'textPrimary'\n          }}\n          action={\n            <MoreMenu>\n              {closeMenu => (\n                <>\n                  <MenuItem\n                    onClick={handleEditClick(closeMenu)}\n                    data-cy=\"widget-edit\"\n                  >\n                    Edit\n                  </MenuItem>\n                  <MenuItem\n                    onClick={handleDeleteClick(closeMenu)}\n                    data-cy=\"widget-delete\"\n                  >\n                    Delete\n                  </MenuItem>\n                </>\n              )}\n            </MoreMenu>\n          }\n        />\n        {renderCardContent(content, showUpdateTime, disabled, id, type)}\n      </StyledCard>\n      <AppDialog\n        disableBackdropClick={true}\n        handleDialogClose={handleDialogClose}\n        open={dialogOpened}\n        title={`Edit ${title}`}\n        data-cy=\"widget-edit-dialog\"\n      >\n        <EditWidget\n          closeDialog={handleDialogClose}\n          content={content}\n          id={id}\n          title={title}\n          disabled={disabled}\n          type={type}\n          columns={columns}\n          goNewLine={goNewLine}\n          rows={rows}\n          widgetTypeData={widgetTypeData}\n        />\n      </AppDialog>\n      <ConfirmationDialog\n        open={confirmationDialogOpened}\n        title={`Delete ${title}`}\n        content={`Are you sure you want to delete ${title}?`}\n        handleOk={deleteWidget}\n        labelOk=\"Delete\"\n        handleCancel={closeConfirmationDialog}\n      />\n    </>\n  );\n};\n\nWidget.propTypes = {\n  id: string.isRequired\n};\n\nexport default Widget;\n","import React from 'react';\nimport { array } from 'prop-types';\n\nimport Widget from './Widget';\n\nconst WidgetList = ({ widgets: widgetIds }) => {\n  return widgetIds.map((widgetId, index) => (\n    <Widget key={widgetId} id={widgetId} index={index} />\n  ));\n};\n\nWidgetList.propTypes = {\n  widgets: array.isRequired\n};\n\nexport default WidgetList;\n","import { Link } from '@reach/router';\n\nimport styled from '@emotion/styled/macro';\n\nexport const StyledLink = styled(Link)`\n  font-size: 16px;\n  color: inherit;\n  text-decoration: none;\n  border-bottom: 2px solid;\n  padding-bottom: 4px;\n  border-color: #ff8a65;\n`;\n","import React from 'react';\nimport { string, bool } from 'prop-types';\n\nimport { StyledLink } from './styled';\n\nconst ErrorPage = ({ title, tip, homeLink, className }) => (\n  <div className={className}>\n    <div>\n      <h1>{title}</h1>\n      <h3>{tip}</h3>\n\n      {homeLink && (\n        <p>\n          You could go back to the <StyledLink to=\"/\">Home page</StyledLink>\n        </p>\n      )}\n    </div>\n  </div>\n);\n\nErrorPage.propTypes = {\n  title: string,\n  tip: string,\n  homeLink: bool\n};\n\nexport default ErrorPage;\n","import React from 'react';\n\nimport ErrorPage from './ErrorPage';\n\nconst NotFound = ({ className }) => (\n  <ErrorPage\n    title=\"Page not found\"\n    tip=\"Maybe you forget to save a new board?\"\n    homeLink\n    className={className}\n  />\n);\n\nexport default NotFound;\n","import styled from '@emotion/styled/macro';\r\n\r\nimport CancelButton from '../CancelButton';\r\n\r\nexport const StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { string, number, bool } from 'prop-types';\r\n\r\nimport { useFormData } from '../../hooks';\r\nimport { getBoards } from '../../selectors';\r\nimport { createValidationSchema } from '../validation';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport DynamicForm from '../DynamicForm';\r\nimport { StyledCancelButton } from './styled';\r\n\r\nimport {\r\n  BOARD_TITLE_LENGTH_LIMIT,\r\n  BOARD_COLUMNS_MIN,\r\n  BOARD_COLUMNS_MAX,\r\n  SWITCH_INTERVAL_MIN\r\n} from '../../constants';\r\n\r\nconst BoardForm = ({\r\n  handleSubmit,\r\n  handleCancel,\r\n  boardId,\r\n  ...initialFormValues\r\n}) => {\r\n  const boards = useSelector(getBoards);\r\n  const formFields = [\r\n    'UniqueTitleField',\r\n    'ColumnField',\r\n    'AutoSwitchField',\r\n    'SwitchInterval'\r\n  ];\r\n  const constraints = {\r\n    UniqueTitleField: {\r\n      max: BOARD_TITLE_LENGTH_LIMIT,\r\n      boardId: boardId,\r\n      boards: boards\r\n    },\r\n    ColumnField: {\r\n      min: BOARD_COLUMNS_MIN,\r\n      max: BOARD_COLUMNS_MAX\r\n    },\r\n    SwitchInterval: {\r\n      min: SWITCH_INTERVAL_MIN\r\n    }\r\n  };\r\n\r\n  const validationSchema = createValidationSchema(formFields, constraints);\r\n  const { values, handleChange, withValidation, errors } = useFormData(\r\n    initialFormValues,\r\n    { initialSchema: validationSchema, onChange: true }\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={withValidation(handleSubmit)} noValidate=\"novalidate\">\r\n      <DynamicForm\r\n        fields={formFields}\r\n        values={values}\r\n        handleChange={handleChange}\r\n        errors={errors}\r\n        rootName=\"board-form\"\r\n      />\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        data-cy=\"board-form-submit-button\"\r\n      >\r\n        Save\r\n      </Button>\r\n      <StyledCancelButton\r\n        handleCancelClick={handleCancel}\r\n        data-cy=\"board-form-cancel-button\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nBoardForm.propTypes = {\r\n  autoSwitch: bool,\r\n  columns: number,\r\n  switchInterval: number,\r\n  title: string\r\n};\r\n\r\nBoardForm.defaultProps = {\r\n  autoSwitch: true,\r\n  columns: 8,\r\n  switchInterval: 60,\r\n  title: 'Board'\r\n};\r\n\r\nexport default BoardForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useToggle } from '../hooks';\r\nimport { addNewBoard } from '../actions/thunks';\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport AppDialog from './AppDialog';\r\nimport BoardForm from './BoardForm';\r\n\r\nconst AddBoard = () => {\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const handleAddBoardClick = event => {\r\n    event.stopPropagation();\r\n    openDialog();\r\n  };\r\n\r\n  const handleAddActionClick = values => {\r\n    dispatch(addNewBoard(values));\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={handleAddBoardClick}\r\n        color=\"primary\"\r\n        data-cy=\"add-board-add-button\"\r\n      >\r\n        <Add />\r\n      </IconButton>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title=\"Add new board\"\r\n      >\r\n        <BoardForm\r\n          handleSubmit={handleAddActionClick}\r\n          handleCancel={handleDialogClose}\r\n        />\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddBoard;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport AddBoard from './AddBoard';\r\n\r\nconst NoBoards = ({ className }) => {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <h1>No boards found</h1>\r\n        {isAuthenticated && <h3>Add first board</h3>}\r\n        <AddBoard />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoBoards;\r\n","import styled from '@emotion/styled/macro';\r\nimport { getColumns } from './helpers';\r\nimport NotFound from '../NotFound';\r\nimport NoBoards from '../NoBoards';\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  grid-template-columns: repeat(${getColumns}, 1fr);\r\n  grid-auto-rows: 0.5fr;\r\n`;\r\n\r\nconst BaseNoData = component => styled(component)`\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n\r\n  > div {\r\n    padding: 0 15px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const StyledNotFound = styled(BaseNoData(NotFound))`\r\n  background: #211f39;\r\n  z-index: 2000;\r\n`;\r\n\r\nexport const StyledNoBoards = BaseNoData(NoBoards);\r\n","import { COLUMN_MULTIPLIER } from '../../constants';\r\n\r\nexport const getColumns = props => props.columns * COLUMN_MULTIPLIER;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setCurrentBoard } from '../../actions/actionCreators';\r\n\r\nimport WidgetList from '../WidgetList';\r\nimport { StyledContainer, StyledNotFound, StyledNoBoards } from './styled';\r\n\r\nconst Board = ({ boardId, className }) => {\r\n  const currentBoard = useSelector(({ boards }) => boards.boardsById[boardId]);\r\n  const allBoardsLength = useSelector(({ boards }) => boards.allBoards).length;\r\n  const { columns, widgets } = currentBoard || {};\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    boardId && dispatch(setCurrentBoard(boardId));\r\n  }, [dispatch, boardId]);\r\n\r\n  if (allBoardsLength === 0) {\r\n    return <StyledNoBoards />;\r\n  }\r\n\r\n  if (!currentBoard) {\r\n    return <StyledNotFound />;\r\n  }\r\n\r\n  return (\r\n    <StyledContainer className={className} columns={columns}>\r\n      <WidgetList widgets={widgets} />\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Board from './Board';\n\nconst IndexBoard = () => {\n  const [firstBoardId] = useSelector(({ boards }) => boards.allBoards);\n\n  return <Board boardId={firstBoardId} />;\n};\n\nexport default IndexBoard;\n","import styled from '@emotion/styled/macro';\n\nimport { Typography } from '@material-ui/core';\n\nexport const StyledTimer = styled(Typography)`\n  margin-right: 20px;\n`;\n","import React, { useEffect } from 'react';\r\n\r\nimport { useBoardSwitching, usePrevious } from './hooks';\r\nimport { formatTime } from './helpers';\r\n\r\nimport { IconButton, Tooltip } from '@material-ui/core';\r\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from '@material-ui/icons';\r\nimport { StyledTimer } from './styled';\r\n\r\nconst BoardSwitcher = ({ className }) => {\r\n  const {\r\n    handleBoardsSwitch,\r\n    handlePlayToggle,\r\n    handleResetTimeElapsed,\r\n    hasBoardsToSwitch,\r\n    isPlaying,\r\n    isDisable,\r\n    nextBoardTitle,\r\n    prevBoardTitle,\r\n    switchInterval,\r\n    timeElapsed\r\n  } = useBoardSwitching();\r\n  const timeLeft = switchInterval - timeElapsed;\r\n  const previousSwitchInterval = usePrevious(switchInterval);\r\n\r\n  useEffect(() => {\r\n    if (previousSwitchInterval !== switchInterval) {\r\n      handleResetTimeElapsed();\r\n    }\r\n  });\r\n\r\n  if (!hasBoardsToSwitch || isDisable) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <StyledTimer>{formatTime(timeLeft)}</StyledTimer>\r\n      <Tooltip title={prevBoardTitle} placement=\"bottom-end\">\r\n        <IconButton\r\n          onClick={handleBoardsSwitch('prev')}\r\n          color=\"inherit\"\r\n          aria-label=\"Next board\"\r\n          edge=\"start\"\r\n        >\r\n          <SkipPrevious />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <IconButton\r\n        onClick={handlePlayToggle}\r\n        color=\"inherit\"\r\n        aria-label=\"Auto switch boards\"\r\n        edge=\"start\"\r\n      >\r\n        {isPlaying ? <Pause /> : <PlayArrow />}\r\n      </IconButton>\r\n      <Tooltip title={nextBoardTitle} placement=\"bottom-end\">\r\n        <IconButton\r\n          onClick={handleBoardsSwitch('next')}\r\n          color=\"inherit\"\r\n          aria-label=\"Next board\"\r\n          edge=\"start\"\r\n        >\r\n          <SkipNext />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardSwitcher;\r\n","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport {\r\n  getSwitcherBoards,\r\n  getSwitchInterval,\r\n  getBoardTitle,\r\n  getCurrentBoardId\r\n} from '../../selectors';\r\nimport { getPrevAndNextIndex } from './helpers';\r\n\r\nexport const useBoardSwitching = () => {\r\n  const switcherBoards = useSelector(getSwitcherBoards);\r\n  const currentBoardId = useSelector(getCurrentBoardId);\r\n  const hasBoardsToSwitch = switcherBoards.length > 1;\r\n  const boardIndex = switcherBoards.includes(currentBoardId)\r\n    ? switcherBoards.indexOf(currentBoardId)\r\n    : 0;\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [prevBoardIndex, nextBoardIndex] = getPrevAndNextIndex(\r\n    switcherBoards,\r\n    boardIndex\r\n  );\r\n  const switchInterval = useSelector(state =>\r\n    getSwitchInterval(state, switcherBoards[boardIndex])\r\n  );\r\n  const prevBoardTitle = useSelector(state =>\r\n    getBoardTitle(state, switcherBoards[prevBoardIndex])\r\n  );\r\n  const nextBoardTitle = useSelector(state =>\r\n    getBoardTitle(state, switcherBoards[nextBoardIndex])\r\n  );\r\n  const isDisable = !switcherBoards.includes(currentBoardId);\r\n\r\n  const switchBoard = useCallback(\r\n    direction => {\r\n      const switchDirection = {\r\n        next: nextBoardIndex,\r\n        prev: prevBoardIndex\r\n      };\r\n      const currentBoardIndex = switchDirection[direction];\r\n\r\n      navigate(switcherBoards[currentBoardIndex] || switcherBoards[0]);\r\n    },\r\n    [nextBoardIndex, prevBoardIndex, switcherBoards]\r\n  );\r\n\r\n  const handleBoardsSwitch = direction => () => {\r\n    if (!hasBoardsToSwitch) {\r\n      return;\r\n    }\r\n\r\n    switchBoard(direction);\r\n    setTimeElapsed(0);\r\n    setIsPlaying(false);\r\n  };\r\n\r\n  const handlePlayToggle = () => {\r\n    setIsPlaying(prevState => !prevState);\r\n  };\r\n\r\n  const handleResetTimeElapsed = () => {\r\n    setTimeElapsed(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      const interval = setInterval(() => {\r\n        setTimeElapsed(prevState => prevState + 1);\r\n\r\n        if (timeElapsed >= switchInterval) {\r\n          switchBoard('next');\r\n          setTimeElapsed(0);\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isPlaying, timeElapsed, switchInterval, switchBoard]);\r\n\r\n  return {\r\n    handleBoardsSwitch,\r\n    handlePlayToggle,\r\n    handleResetTimeElapsed,\r\n    hasBoardsToSwitch,\r\n    isPlaying,\r\n    isDisable,\r\n    nextBoardTitle,\r\n    prevBoardTitle,\r\n    switchInterval,\r\n    timeElapsed\r\n  };\r\n};\r\n\r\nexport const usePrevious = value => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref.current;\r\n};\r\n","export const formatTime = timeInSec => {\n  const seconds = timeInSec % 60;\n  const minutes = Math.floor(timeInSec / 60);\n  const leadingZero = seconds < 10 ? 0 : '';\n\n  return `${minutes}:${leadingZero}${seconds}`;\n};\n\nexport const getPrevAndNextIndex = (array, currentIndex) => {\n  const lastIndex = array.length - 1;\n  const nextIndex = currentIndex < lastIndex ? currentIndex + 1 : 0;\n  const prevIndex = currentIndex > 0 ? currentIndex - 1 : lastIndex;\n\n  return [prevIndex, nextIndex];\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useToggle } from '../../hooks';\nimport { login, logout } from '../../actions/thunks';\nimport { clearLoginErrorMessage } from '../../actions/actionCreators';\nimport { getIsAuthenticated } from '../../selectors';\n\nimport { Button, IconButton, TextField, Typography } from '@material-ui/core';\nimport { AccountCircle, PowerSettingsNew } from '@material-ui/icons';\nimport AppDialog from './../AppDialog';\nimport { StyledFieldset } from '../styled';\nimport { getCredentials } from './helpers';\n\nconst UserLogin = () => {\n  const dispatch = useDispatch();\n  const errorMsg = useSelector(({ app }) => app.loginErrorMessage);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      handleDialogClose();\n    }\n  }, [isAuthenticated, handleDialogClose]);\n\n  const handleLoginButtonClick = () => {\n    const credentials = getCredentials();\n    dispatch(login(credentials));\n  };\n\n  const handleLoginOnEnterPress = event => {\n    if (event.key === 'Enter') {\n      handleLoginButtonClick();\n    }\n  };\n\n  const handleLoginDialogOpen = () => {\n    openDialog(true);\n  };\n\n  const handleLogout = () => {\n    dispatch(logout());\n  };\n\n  function closeDialog() {\n    handleDialogClose();\n    dispatch(clearLoginErrorMessage());\n  }\n\n  return (\n    <>\n      {!isAuthenticated && (\n        <IconButton\n          onClick={handleLoginDialogOpen}\n          aria-label=\"Login\"\n          color=\"inherit\"\n          edge=\"start\"\n          data-cy=\"user-login-login-icon\"\n        >\n          <AccountCircle />\n        </IconButton>\n      )}\n      {isAuthenticated && (\n        <IconButton\n          onClick={handleLogout}\n          aria-label=\"Logout\"\n          color=\"inherit\"\n          edge=\"start\"\n          data-cy=\"user-login-logout-icon\"\n        >\n          <PowerSettingsNew />\n        </IconButton>\n      )}\n      <AppDialog\n        handleDialogClose={closeDialog}\n        open={dialogOpened}\n        title=\"User Login\"\n      >\n        <StyledFieldset component=\"fieldset\">\n          {errorMsg && (\n            <Typography color=\"error\" data-cy=\"user-login-error-messages\">\n              {errorMsg}\n            </Typography>\n          )}\n          <TextField\n            autoFocus\n            id=\"username\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            label=\"Username\"\n            margin=\"normal\"\n            onKeyPress={handleLoginOnEnterPress}\n            inputProps={{ 'data-cy': 'user-login-username-input' }}\n          />\n          <TextField\n            id=\"password\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            type=\"password\"\n            label=\"Password\"\n            margin=\"normal\"\n            onKeyPress={handleLoginOnEnterPress}\n            inputProps={{ 'data-cy': 'user-login-password-input' }}\n          />\n          <Button\n            color=\"primary\"\n            onClick={handleLoginButtonClick}\n            variant=\"contained\"\n            data-cy=\"user-login-submit-button\"\n          >\n            Login\n          </Button>\n        </StyledFieldset>\n      </AppDialog>\n    </>\n  );\n};\n\nexport default UserLogin;\n","export const getCredentials = () => {\n  const usernameField = document.getElementById('username');\n  const passwordField = document.getElementById('password');\n  return {\n    username: usernameField ? usernameField.value : '',\n    password: passwordField ? passwordField.value : ''\n  };\n};\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { func } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { setSize } from '../helpers';\r\n\r\nimport { AppBar, Container, Toolbar, IconButton } from '@material-ui/core';\r\nimport { DashboardRounded } from '@material-ui/icons';\r\nimport { StyledTitle } from './styled';\r\n\r\nimport BoardSwitcher from './BoardSwitcher';\r\nimport UserLogin from './UserLogin';\r\n\r\nconst StyledBoardSwitcher = styled(BoardSwitcher)`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  background-color: #211f39;\r\n  box-shadow: none;\r\n`;\r\n\r\nconst StyledToolbar = styled(Toolbar)`\r\n  min-height: ${setSize(10)};\r\n`;\r\n\r\nconst NavBar = ({ handleDrawerToggle }) => {\r\n  const theme = useTheme();\r\n  const noBoardsFound =\r\n    useSelector(({ boards }) => boards.allBoards).length === 0;\r\n  const title = useSelector(({ ui, boards }) =>\r\n    ui.currentBoard && boards.boardsById[ui.currentBoard]\r\n      ? boards.boardsById[ui.currentBoard].title\r\n      : ''\r\n  );\r\n\r\n  return (\r\n    <StyledAppBar position=\"fixed\">\r\n      <Container maxWidth=\"xl\">\r\n        <StyledToolbar disableGutters theme={theme}>\r\n          <IconButton\r\n            onClick={handleDrawerToggle(true)}\r\n            aria-label=\"Open boards drawer\"\r\n            color=\"inherit\"\r\n            edge=\"start\"\r\n            data-cy=\"navbar-show-drawer-button\"\r\n          >\r\n            <DashboardRounded />\r\n          </IconButton>\r\n          <UserLogin />\r\n          {!noBoardsFound && (\r\n            <StyledTitle\r\n              component=\"h2\"\r\n              variant=\"h3\"\r\n              theme={theme}\r\n              data-cy=\"navbar-title-header\"\r\n            >\r\n              {title}\r\n            </StyledTitle>\r\n          )}\r\n          <StyledBoardSwitcher />\r\n        </StyledToolbar>\r\n      </Container>\r\n    </StyledAppBar>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  handleDrawerToggle: func.isRequired\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\nimport { CheckCircle, Error, Info, Warning } from '@material-ui/icons';\n\nconst IconVariant = ({ variant }) => {\n  const iconByVariant = {\n    success: CheckCircle,\n    warning: Warning,\n    error: Error,\n    info: Info\n  };\n\n  const Icon =\n    variant in iconByVariant ? iconByVariant[variant] : iconByVariant['info'];\n\n  return <Icon />;\n};\n\nexport default IconVariant;\n","import React from 'react';\nimport styled from '@emotion/styled/macro';\n\nimport { mapVariantToColor } from './helpers';\n\nimport { SnackbarContent } from '@material-ui/core';\n\nexport const StyledSnackbarContent = styled(({ theme, variant, ...other }) => (\n  <SnackbarContent {...other} />\n))`\n  background: ${({ theme, variant }) => mapVariantToColor(theme, variant)};\n`;\n","export const mapVariantToColor = (theme, variant) =>\n  theme.palette.snackbarVariant[variant];\n","import React from 'react';\nimport { func, oneOf, string } from 'prop-types';\nimport { useTheme } from '@material-ui/styles';\n\nimport { Box } from '@material-ui/core';\nimport IconVariant from '../IconVariant';\nimport { StyledSnackbarContent } from './styled';\n\nconst SnackbarVariantContent = ({ message, variant }) => {\n  const theme = useTheme();\n\n  return (\n    <StyledSnackbarContent\n      theme={theme}\n      variant={variant}\n      message={\n        <Box display=\"flex\" alignItems=\"center\">\n          <IconVariant variant={variant} />\n          <Box marginLeft={1}>{message}</Box>\n        </Box>\n      }\n    />\n  );\n};\n\nSnackbarVariantContent.propTypes = {\n  variant: oneOf(['error', 'info', 'success', 'warning']).isRequired,\n  message: string,\n  onClose: func\n};\n\nexport default SnackbarVariantContent;\n","import React, { useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useToggle } from '../hooks';\nimport { createGetNotification } from '../selectors';\nimport { deleteNotification } from '../actions/actionCreators';\n\nimport Snackbar from '@material-ui/core/Snackbar/index';\nimport SnackbarVariantContent from './SnackbarVariantContent';\n\nconst SnackbarWithVariant = React.memo(\n  ({ notificationId, vertical, horizontal, 'data-cy': dataCy }) => {\n    const getNotification = useMemo(createGetNotification, []);\n    const { type, message, duration } = useSelector(state =>\n      getNotification(state, notificationId)\n    );\n    const dispatch = useDispatch();\n    const [isOpened, , closeSnackbar] = useToggle(true);\n\n    const handleClose = (event, reason) => {\n      if (reason !== 'timeout') {\n        return;\n      }\n\n      closeSnackbar();\n    };\n\n    const handleExited = () => dispatch(deleteNotification(notificationId));\n\n    return (\n      <Snackbar\n        onClose={handleClose}\n        onExited={handleExited}\n        anchorOrigin={{ vertical, horizontal }}\n        autoHideDuration={duration}\n        disableWindowBlurListener\n        open={isOpened}\n        data-cy={dataCy}\n      >\n        <SnackbarVariantContent variant={type} message={message} />\n      </Snackbar>\n    );\n  }\n);\n\nexport default SnackbarWithVariant;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { getAllNotifications } from '../../selectors';\n\nimport SnackbarWithVariant from '../SnackbarWithVariant';\n\nconst Notifications = () => {\n  const allNotifications = useSelector(getAllNotifications);\n\n  return allNotifications.map(id => (\n    <SnackbarWithVariant\n      horizontal=\"center\"\n      key={id}\n      notificationId={id}\n      vertical=\"top\"\n      data-cy=\"notification-snackbar\"\n    />\n  ));\n};\n\nexport default Notifications;\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { saveBoard } from '../actions/thunks';\r\n\r\nimport BoardForm from './BoardForm';\r\n\r\nconst EditBoard = ({ closeDialog, id, ...initialFormValues }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSaveClick = values => {\r\n    dispatch(saveBoard({ id, ...values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <BoardForm\r\n      {...initialFormValues}\r\n      handleSubmit={handleSaveClick}\r\n      handleCancel={closeDialog}\r\n      boardId={id}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditBoard;\r\n","import React, { forwardRef } from 'react';\nimport styled from '@emotion/styled/macro';\n\nimport { Card, CardActions } from '@material-ui/core';\n\nexport const StyledCard = styled(\n  forwardRef(({ isLoggedIn, isDragging, isOver, theme, ...other }, ref) => (\n    <Card {...other} ref={ref} />\n  ))\n)`\n  background-color: ${({ theme }) => theme.palette.background.board.card}};\n  box-shadow: none;\n  cursor: ${({ isLoggedIn }) => (isLoggedIn ? 'move' : 'default')};\n  position: relative;\n\n  ${({ isDragging, isOver, theme }) =>\n    isDragging &&\n    `\n    &::before {\n      background-color: ${theme.palette.background.board.dragged};\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\n      border-radius: inherit;\n      content: '';\n      display: block;\n      height: 100%;\n      position: absolute;\n      z-index: 2;\n      opacity: ${isDragging ? 1 : 0};\n      width: 100%;\n    }\n  `}\n`;\n\nexport const StyledCardActions = styled(CardActions)`\n  justify-content: flex-end;\n  z-index: 1;\n`;\n","import React, { useRef } from 'react';\r\nimport { object } from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { deleteBoardWithWidgets } from '../../actions/thunks';\r\nimport { reorderBoard } from '../../actions/thunks';\r\nimport { ItemTypes } from '../../constants';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport { Delete, Edit } from '@material-ui/icons';\r\nimport AppDialog from '../AppDialog';\r\nimport EditBoard from '../EditBoard';\r\nimport { StyledCard, StyledCardActions } from './styled';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst BoardCard = ({ boardData, index, className }) => {\r\n  const { autoSwitch, columns, id, switchInterval, title } = boardData;\r\n  const [open, openDialog, handleDialogClose] = useToggle();\r\n  const [\r\n    confirmationDialogOpened,\r\n    openConfirmationDialog,\r\n    closeConfirmationDialog\r\n  ] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const ref = useRef(null);\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.BOARD, id, index },\r\n    canDrag: isAuthenticated,\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.BOARD,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const { id: sourceId, index: sourceIndex } = item;\r\n      const targetIndex = index;\r\n\r\n      if (sourceIndex === targetIndex) {\r\n        return;\r\n      }\r\n\r\n      const { top, bottom } = ref.current.getBoundingClientRect();\r\n      const dropTargetMiddleY = bottom - (bottom - top) / 2;\r\n      const { y: dragSourceMouseY } = monitor.getClientOffset();\r\n\r\n      const hasPointerPassedMiddle =\r\n        (sourceIndex < targetIndex && dragSourceMouseY >= dropTargetMiddleY) ||\r\n        (sourceIndex > targetIndex && dragSourceMouseY <= dropTargetMiddleY);\r\n\r\n      if (!hasPointerPassedMiddle) {\r\n        return;\r\n      }\r\n\r\n      dispatch(reorderBoard(sourceId, targetIndex));\r\n      item.index = targetIndex;\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      dropResult: monitor.getSourceClientOffset()\r\n    })\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  const handleBoardClick = boardId => () => {\r\n    navigate(boardId);\r\n  };\r\n\r\n  const handleEditClick = event => {\r\n    event.stopPropagation();\r\n    openDialog();\r\n  };\r\n\r\n  const handleDeleteClick = event => {\r\n    event.stopPropagation();\r\n    openConfirmationDialog();\r\n  };\r\n\r\n  const deleteBoard = () => {\r\n    dispatch(deleteBoardWithWidgets(id));\r\n    closeConfirmationDialog();\r\n  };\r\n\r\n  return (\r\n    <div className={className} data-cy=\"board-card\">\r\n      <StyledCard\r\n        onClick={handleBoardClick(id)}\r\n        theme={theme}\r\n        isLoggedIn={isAuthenticated}\r\n        isDragging={isDragging}\r\n        isOver={isOver}\r\n        ref={ref}\r\n      >\r\n        <CardHeader\r\n          title={title}\r\n          titleTypographyProps={{\r\n            component: 'h3',\r\n            variant: 'subtitle2',\r\n            color: 'textPrimary'\r\n          }}\r\n          data-cy=\"board-card-header\"\r\n        />\r\n        <CardContent></CardContent>\r\n        {isAuthenticated && (\r\n          <StyledCardActions>\r\n            <IconButton\r\n              onClick={handleEditClick}\r\n              aria-label=\"edit\"\r\n              size=\"small\"\r\n              data-cy=\"board-card-edit-button\"\r\n            >\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleDeleteClick}\r\n              aria-label=\"delete\"\r\n              size=\"small\"\r\n              data-cy=\"board-card-delete-button\"\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </StyledCardActions>\r\n        )}\r\n      </StyledCard>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={open}\r\n        title={`Edit ${title}`}\r\n        data-cy=\"board-card-edit-dialog\"\r\n      >\r\n        <EditBoard\r\n          closeDialog={handleDialogClose}\r\n          autoSwitch={autoSwitch}\r\n          columns={columns}\r\n          id={id}\r\n          switchInterval={switchInterval}\r\n          title={title}\r\n        />\r\n      </AppDialog>\r\n      <ConfirmationDialog\r\n        open={confirmationDialogOpened}\r\n        title={`Delete ${title}`}\r\n        content={`Are you sure you want to delete ${title}?`}\r\n        handleOk={deleteBoard}\r\n        labelOk=\"Delete\"\r\n        handleCancel={closeConfirmationDialog}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nBoardCard.propTypes = {\r\n  boardData: object.isRequired\r\n};\r\n\r\nexport default BoardCard;\r\n","import styled from '@emotion/styled/macro';\n\nimport BoardCard from '../BoardCard';\n\nexport const StyledBoardCard = styled(BoardCard)`\n  margin-bottom: 32px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Box from '@material-ui/core/Box';\nimport { StyledBoardCard } from './styled';\n\nconst BoardList = ({ className }) => {\n  const boards = useSelector(({ boards }) => {\n    const { boardsById, allBoards } = boards;\n\n    return allBoards.map(boardId => boardsById[boardId]);\n  });\n\n  return (\n    <Box className={className}>\n      {boards.map((boardData, index) => (\n        <StyledBoardCard\n          boardData={boardData}\n          key={boardData.id}\n          index={index}\n        />\n      ))}\n    </Box>\n  );\n};\n\nexport default BoardList;\n","import React from 'react';\n\nimport logo from '../assets/images/cogBoard-white.png';\n\nconst Logo = ({ className }) => (\n  <img className={className} src={logo} alt=\"Cogboard logo\" />\n);\n\nexport default Logo;\n","import styled from '@emotion/styled/macro';\n\nimport { Box, Fab } from '@material-ui/core';\nimport BoardList from '../BoardList';\nimport Logo from '../Logo';\n\nexport const StyledActions = styled(Box)`\n  bottom: 50px;\n  position: fixed;\n  right: 50px;\n  z-index: 10000;\n`;\n\nexport const StyledSaveFab = styled(Fab)`\n  margin-right: 16px;\n`;\n\nexport const StyledBoardList = styled(BoardList)`\n  padding: 32px;\n  width: 100%;\n`;\n\nexport const StyledMain = styled.main`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 110px;\n`;\n\nexport const StyledLogo = styled(Logo)`\n  width: 40%;\n  margin-bottom: 32px;\n`;\n\nexport const StyledDrawerContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 32px;\n  width: 250px;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Router } from '@reach/router';\n\nimport { useToggle } from '../../hooks';\nimport { saveData } from '../../actions/thunks';\nimport { getIsAuthenticated } from '../../selectors';\n\nimport { Container, Drawer, Fab } from '@material-ui/core';\nimport { Add, Save } from '@material-ui/icons';\nimport AppDialog from '../AppDialog';\nimport AddWidget from '../AddWidget';\nimport BoardIndex from '../BoardIndex';\nimport Board from '../Board';\nimport NavBar from '../NavBar';\nimport AddBoard from '../AddBoard';\nimport Notifications from '../Notifications';\nimport {\n  StyledActions,\n  StyledBoardList,\n  StyledDrawerContainer,\n  StyledLogo,\n  StyledMain,\n  StyledSaveFab\n} from './styled';\n\nconst MainTemplate = () => {\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\n  const isDataChanged = useSelector(({ app }) => app.isDataChanged);\n  const isAuthenticated = useSelector(getIsAuthenticated);\n  const [drawerOpened, setDrawerOpened] = useState(false);\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\n  const dispatch = useDispatch();\n\n  const handleSaveDataClick = () => {\n    dispatch(saveData());\n  };\n\n  const handleAddWidgetClick = () => {\n    openDialog(true);\n  };\n\n  const handleDrawerToggle = opened => event => {\n    const { type, key } = event;\n\n    if (type === 'keydown' && (key === 'Tab' || key === 'Shift')) {\n      return;\n    }\n\n    setDrawerOpened(opened);\n  };\n\n  return (\n    <>\n      <NavBar handleDrawerToggle={handleDrawerToggle} />\n      <Drawer onClose={handleDrawerToggle(false)} open={drawerOpened}>\n        <StyledDrawerContainer\n          onClick={handleDrawerToggle(false)}\n          onKeyDown={handleDrawerToggle(false)}\n          role=\"presentation\"\n        >\n          <StyledLogo />\n          <AddBoard />\n          <StyledBoardList />\n        </StyledDrawerContainer>\n      </Drawer>\n      <StyledMain>\n        <Container maxWidth=\"xl\">\n          <Router>\n            <BoardIndex path=\"/\" />\n            <Board path=\"/:boardId\" />\n          </Router>\n          <StyledActions>\n            {isAuthenticated && isDataChanged && (\n              <StyledSaveFab\n                onClick={handleSaveDataClick}\n                aria-label=\"Save Data\"\n                color=\"secondary\"\n                data-cy=\"main-template-save-data-button\"\n              >\n                <Save />\n              </StyledSaveFab>\n            )}\n            {isAuthenticated && currentBoardId && (\n              <Fab\n                onClick={handleAddWidgetClick}\n                aria-label=\"Add Widget\"\n                color=\"primary\"\n                data-cy=\"main-template-add-widget-button\"\n              >\n                <Add />\n              </Fab>\n            )}\n          </StyledActions>\n        </Container>\n      </StyledMain>\n      <Notifications />\n      <AppDialog\n        disableBackdropClick={true}\n        handleDialogClose={handleDialogClose}\n        open={dialogOpened}\n        title=\"Add new widget\"\n        data-cy=\"main-template-add-widget-dialog\"\n      >\n        <AddWidget closeDialog={handleDialogClose} />\n      </AppDialog>\n    </>\n  );\n};\n\nexport default MainTemplate;\n","import React from 'react';\n\nimport ErrorPage from './ErrorPage';\n\nconst ServerErrorPage = props => (\n  <ErrorPage\n    title=\"Interal Server Error\"\n    tip=\"Ooops... Something gone wrong. For more details check server's logs.\"\n  />\n);\n\nexport default ServerErrorPage;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { DndProvider } from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\nimport { Router } from '@reach/router';\n\nimport { fetchInitialData } from './actions/thunks';\nimport {\n  updateWidget,\n  saveDataSuccess,\n  loginSuccess\n} from './actions/actionCreators';\nimport { theme } from './theme';\n\nimport MainTemplate from './components/MainTemplate';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { isAuthenticated } from './utils/auth';\nimport ServerErrorPage from './components/ServerErrorPage';\n\nfunction App() {\n  const appInitialized = useSelector(({ app }) => app.initialized);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isAuthenticated()) {\n      dispatch(loginSuccess());\n    }\n\n    dispatch(fetchInitialData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (appInitialized) {\n      const socket = new WebSocket(\n        `ws://${window.location.hostname}:${process.env.REACT_APP_WS_PORT}`\n      );\n      const handleMessageReceive = ({ data: dataJson }) => {\n        const { eventType, ...data } = JSON.parse(dataJson);\n\n        if (eventType === 'widget-update') {\n          dispatch(updateWidget(data));\n        } else if (eventType === 'notification-config-save') {\n          dispatch(saveDataSuccess());\n        }\n      };\n\n      socket.addEventListener('message', handleMessageReceive);\n\n      return () => {\n        socket.removeEventListener('message', handleMessageReceive);\n      };\n    }\n  }, [appInitialized, dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <DndProvider backend={HTML5Backend}>\n        <CssBaseline />\n        <Router>\n          <ServerErrorPage path=\"error-page\" />\n          {appInitialized && <MainTemplate path=\"/*\" />}\n        </Router>\n      </DndProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from './reducers';\n\nexport default function configureStore() {\n  const middlewares = [thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, composedEnhancers);\n\n  return store;\n}\n"],"sourceRoot":""}