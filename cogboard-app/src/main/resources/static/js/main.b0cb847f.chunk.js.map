{"version":3,"sources":["assets/images/cogBoard-white.png","reducers/app/initialized.js","actions/types.js","reducers/app/dataFetching.js","reducers/app/isDataChanged.js","reducers/app/isDataSaving.js","reducers/app/loginErrorMessage.js","reducers/app/isAuthenticated.js","reducers/app/logoutReasonMessage.js","reducers/app/index.js","reducers/ui/currentBoard.js","reducers/ui/index.js","reducers/helpers.js","reducers/boards/boardsById.js","reducers/boards/allBoards.js","reducers/boards/index.js","reducers/widgets/widgetsById.js","reducers/widgets/allWidgets.js","reducers/widgets/index.js","reducers/notifications/notificationsById.js","reducers/notifications/allNotifications.js","reducers/notifications/index.js","reducers/index.js","actions/helpers.js","helpers/index.js","constants/index.js","actions/actionCreators.js","utils/auth.js","actions/thunks.js","theme.js","hooks/index.js","selectors/index.js","components/AppDialog.js","components/widgets/types/DefaultWidget.js","components/IframeEmbed.js","components/styled/index.js","components/widgets/types/ExampleWidget.js","components/widgets/types/JenkinsJobWidget.js","components/widgets/types/SonarQubeWidget.js","components/Loader/styled.js","components/Loader/index.js","components/widgets/types/ServiceCheckWidget.js","components/widgets/types/TextWidget/styled.js","components/widgets/types/TextWidget/index.js","components/widgets/types/BambooDeploymentWidget.js","components/widgets/types/BambooPlanWidget.js","components/widgets/types/WorldClockWidget/helpers.js","components/widgets/types/WorldClockWidget/styled.js","components/widgets/types/WorldClockWidget/index.js","components/widgets/types/CheckboxWidget/helpers.js","components/StatusIcon.js","components/widgets/types/CheckboxWidget/index.js","components/widgets/types/AemHealthcheckWidget/index.js","components/widgets/types/IframeEmbedWidget/helpers.js","components/widgets/index.js","components/widgets/types/IframeEmbedWidget/index.js","components/widgets/dialogFields/helpers.js","components/DropdownField.js","components/widgets/dialogFields/EndpointInput.js","components/TabPanel.js","components/ValidationMessages.js","components/CancelButton.js","components/WidgetForm/styled.js","components/widgets/dialogFields/NumberInput.js","components/widgets/dialogFields/TextInput.js","components/widgets/dialogFields/SonarQubeMetricsInput.js","components/widgets/dialogFields/DisplayValueSelect.js","components/widgets/dialogFields/MultilineTextInput.js","components/widgets/dialogFields/CheckboxInput.js","components/widgets/dialogFields/AemHealthcheckInput.js","components/widgets/dialogFields/conditionallyHidden.js","components/widgets/dialogFields/SwitchInput.js","components/widgets/dialogFields/styled.js","components/widgets/dialogFields/index.js","components/validation/index.js","components/WidgetForm/validators.js","components/DynamicForm/index.js","components/DynamicForm/helpers.js","components/WidgetTypeForm/index.js","components/WidgetForm/index.js","components/AddWidget.js","components/Widget/styled.js","components/ErrorMessage.js","components/WidgetContent.js","components/LastUpdate/styled.js","components/LastUpdate/index.js","components/Widget/helpers.js","components/EditWidget.js","components/MoreMenu.js","components/ConfirmationDialog/styled.js","components/ConfirmationDialog/index.js","components/Widget/index.js","components/WidgetList.js","components/ErrorPage/styled.js","components/ErrorPage/index.js","components/NotFound.js","components/BoardForm/styled.js","components/BoardForm/index.js","components/AddBoard.js","components/NoBoards.js","components/Board/styled.js","components/Board/helpers.js","components/Board/index.js","components/BoardIndex.js","components/BoardSwitcher/styled.js","components/BoardSwitcher/index.js","components/BoardSwitcher/hooks.js","components/BoardSwitcher/helpers.js","components/UserLogin/index.js","components/UserLogin/helpers.js","components/NavBar.js","components/IconVariant.js","components/SnackbarVariantContent/styled.js","components/SnackbarVariantContent/helpers.js","components/SnackbarVariantContent/index.js","components/SnackbarWithVariant.js","components/Notifications/index.js","components/EditBoard.js","components/BoardCard/styled.js","components/BoardCard/index.js","components/BoardList/styled.js","components/BoardList/index.js","components/Logo.js","components/MainTemplate/styled.js","components/MainTemplate/index.js","components/ServerErrorPage.js","App.js","serviceWorker.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","initialized","state","arguments","length","undefined","type","dataFetching","isDataChanged","isDataSaving","loginErrorMessage","_ref","payload","isAuthenticated","logoutReasonMessage","app","combineReducers","currentBoard","action","boardId","ui","reorderItems","items","sourceId","targetIndex","withoutSource","filter","itemId","concat","Object","toConsumableArray","slice","boardsById","boards","objectSpread","receiveData","_ref2","entries","reduce","newState","_ref3","_ref4","slicedToArray","boardProps","initBoardProps","_ref5","id","defineProperty","addBoard","_ref6","other","objectWithoutProperties","board","editBoard","_ref7","rest","map","_toPropertyKey","deleteBoard","_ref8","widgets","addWidget","_ref9","widgetId","deleteWidget","_ref10","sortedWidgets","sortWidgets","allBoards","reorderBoards","widgetsById","widget","isUpdating","requestUpdate","content","prevContent","updateWidget","editWidget","widgetsById_toPropertyKey","allWidgets","widgetIds","includes","deleteMultipleWidgets","notificationsById","assoc","pushNotification","dissoc","deleteNotification","allNotifications","append","without","notifications","rootReducer","prefix","setSize","factor","theme","spacing","splitPropsGroupName","propName","split","capitalize","toArray","firstLetter","toUpperCase","join","parseYupErrors","errors","result","inner","forEach","error","path","message","push","hasError","URL","TEXT_SIZES","display","value","REQUEST_METHODS","ItemTypes","AEM_HEALTH_CHECKS","inactiveBundles","asyncIndexHealthCheck","codeCacheHealthCheck","DiskSpaceHealthCheck","logErrorHealthCheck","ObservationQueueLengthHealthCheck","resourceSearchPathErrorHealthCheck","requestsStatus","queriesStatus","queryTraversalLimitsBundle","securitychecks","slingJobs","slingDiscoveryOakSynchronizedClocks","systemchecks","ALL_SONARQUBE_METRICS","INITIAL_BOARD_PROPS","autoSwitch","switchInterval","validationMessages","name","max","min","NOTIFICATIONS","userRole","duration","reason","loginSuccess","clearLoginErrorMessage","data","editData","saveDataSuccess","setCurrentBoard","notification","v4","hasToken","getToken","getUserRole","decode","localStorage","getItem","token","expTimestamp","exp","Date","now","isTokenExpired","checkResponseStatus","response","status","statusText","Promise","resolve","navigate","reject","Error","fetchData","url","method","postConfig","body","JSON","stringify","headers","Content-Type","fetch","then","json","createWidgetId","allIds","intRegex","RegExp","_sort","sort","a","b","Number","match","lastId","intId","replace","mapFormValuesToWidgetData","values","columns","goNewLine","rows","config","withAuthentication","actionCallback","_len","args","Array","_key","dispatch","logout","apply","withDataChanged","_len2","_key2","fetchInitialData","console","login","credentials","setItem","setToken","getState","removeItem","makeWidgetUpdaterThunk","beforeUpdateActionCreator","widgetDataCreator","widgetData","_mapDataToState","title","disabled","generalData","prop","serverData","mapDataToState","addNewWidget","currentBoardId","saveWidget","removeWidget","reorderWidgets","reorderBoard","addNewBoard","saveBoard","deleteBoardWithWidgets","_getState3","firstBoardId","setWidgetState","saveData","_getState","createGradient","start","end","createMuiTheme","palette","background","default","paper","card","dragged","UNKNOWN","OK","IN_PROGRESS","UNSTABLE","ERROR_CONNECTION","ERROR_CONFIGURATION","ERROR","FAIL","snackbarVariant","info","blue","success","green","warning","amber","red","shape","borderRadius","typography","h3","fontWeight","letterSpacing","useToggle","initialState","_useState","useState","_useState2","isOpened","setOpened","useFormData","_useState3","_useState4","setValues","_config$onChange","onChange","_config$initialSchema","initialSchema","_useState5","submited","_useState6","setStatus","_useState7","_useState8","validationSchema","setValidationSchema","_useState9","_useState10","setErrors","setFieldValue","fieldName","fieldValue","newValues","_splitPropsGroupName","_splitPropsGroupName2","groupName","groupValues","validateField","fieldsValues","validateAt","abortEarly","errorsTmp","catch","handleChange","updaterFn","arg","event","_event$target","target","valueType","checkbox","checked","number","withValidation","func","preventDefault","validate","stripUnknown","getNotifications","getBoardsById","getNotificationId","_","notificationId","getIsAuthenticated","createSelector","getCurrentBoardId","getBoard","getBoardTitle","getSwitchInterval","getSwitcherBoards","getNotificationsById","createGetNotification","getAllNotifications","getBoards","StyledDialog","styled_base_browser_esm","props","react_default","createElement","Dialog","assign","classes","styles","StyledDialogContent","DialogContent","AppDialog","children","handleDialogClose","open","disableBackdropClick","stopEventPropagation","stopPropagation","onClick","onClose","onKeyDown","aria-labelledby","PaperProps","data-cy","DialogTitle","defaultProps","DefaultWidget","IframeEmbed","iframe","StyledTypography","Typography","FullWidthButtonOutlined","Button","fullWidth","variant","WidgetButton","WidgetIconButton","IconButton","Caption","paragraph","CaptionWithPointer","StyledFieldset","FormControl","StyledIframe","components_IframeEmbed","frameBorder","allowFullScreen","height","StyledFormControlForDropdown","StyledTitle","StyledFormControl","StyledPopoverText","ExampleWidget","serverTime","ts","toLocaleString","styled_Caption","JenkinsJobWidget","branch","displayName","timestamp","dur","Fragment","href","SonarQubeWidget","metrics","version","date","parse","metric","val","key","StyledCircularProgress","CircularProgress","Loader","text","ServiceCheckWidget","statusCode","statusMessage","expectedStatusCode","expectedResponseBody","anchorEl","setAnchorEl","errorStatus","statusCodeMessage","bodyMessage","popoverOpen","Boolean","components_Loader","size","currentTarget","Popover","anchorOrigin","vertical","horizontal","TypographyVariant","CenterWrapper","StyledPre","RotatedStyledPre","OverflowingText","component","ModifiedWidth","componentWidth","SetWidth","TruncatedText","isVertical","parentDimensions","TruncatedPre","ModifiedPre","TextWidget","textSize","targetRef","useRef","centerWrapperDimensions","useSize","ref","TextWidget_TruncatedText","BambooDeploymentWidget","releaseName","lifeCycleState","deploymentState","BambooPlanWidget","getDateTime","timezone","format","moment","tz","GMT_TIMEZONES","allTimezones","names","duplicatedTimezones","gmtTimezones","parts","parseInt","c","splice","guess","getGmtTimezones","DATE_FORMATS","TIME_FORMATS","TimePre","DatePre","WorldClockWidget","timeZoneId","dateFormat","timeFormat","displayDate","displayTime","initTime","time","setTime","callback","delay","savedCallback","useEffect","current","setInterval","clearInterval","useInterval","getNextStatus","statusArray","statusIndex","findIndex","element","nextStatusIndex","StatusIcon","iconComponents","Check","Close","IndeterminateCheckBoxOutlined","IconComponent","fontSize","CheckboxWidget","useSelector","useDispatch","aria-label","aria-checked","components_StatusIcon","AemHealthcheckWidget","healthChecks","Link","attachHttp","startsWith","widgetTypes","dialogFields","showUpdateTime","validationConstraints","SchedulePeriod","SonarQubeMetricsInput","minArrayLength","Text","IframeEmbedWidget","styled_StyledIframe","AemHealthcheckInput","transformMinValueToHalf","prevValue","Math","floor","ceil","DropdownField","label","dropdownItems","itemsUrl","dataCy","initialLoaded","options","setOptions","loaded","setLoaded","init","Authorization","InputLabel","shrink","htmlFor","Select","input","Input","SelectDisplayProps","EndpointInput","components_DropdownField","endpoints","MenuItem","TabPanel","index","role","hidden","ValidationMessages","className","messages","others","CancelButton","handleCancelClick","color","StyledTabPanel","StyledTabs","Tabs","StyledValidationMessages","StyledCancelButton","NumberInput","step","TextField","inputProps","InputLabelProps","margin","FormHelperTextProps","helperText","TextInput","inputId","useTheme","multiple","renderValue","Checkbox","ListItemText","primary","FormHelperText","DisplayValueSelect","item","MultilineTextInput","multiline","CheckboxInput","FormControlLabel","control","conditionallyHidden","Component","conditionField","condition","SwitchInput","checkboxValue","Switch","StyledNumberInput","WidgetTypeField","sortedWidgetTypes","obj","asc","keyA","keyB","localeCompare","newObj","sortByKey","parseWidgetTypes","validator","string","required","vm","TitleField","initialValue","trim","UniqueTitleField","test","uniqueTitleTestCreator","ColumnField","ColumnFieldSm","valueUpdater","RowFieldSm","NewLineField","boolean","DisabledField","AutoSwitchField","SwitchInterval","when","is","otherwise","notRequired","EndpointField","Path","UrlForContent","IdString","IdNumber","Key","_ref8$minArrayLength","array","ensure","of","_ref9$minArrayLength","StatusCode","lessThan","moreThan","TimeZoneId","DateFormat","TimeFormat","DisplayDate","DisplayTime","RequestBody","ResponseBody","TextSize","RequestMethod","TextOrientation","createValidationSchema","fields","constraints","_Array$prototype","validators","prototype","schema","newSchema","_dialogFields$fieldNa","constraint","groupSchema","object","params","exclusive","every","createWidgetValidationSchema","widgetType","dialogFieldNames","allFields","widgetConstraints","allConstraints","DynamicForm","rootName","createField","field","_dialogFields$field","DialogField","_dialogFields$field$i","dialogFieldProps","valueRef","createValueRef","toLowerCase","groupedFields","Box","justifyContent","WidgetTypeForm","components_DynamicForm","WidgetForm","handleSubmit","handleCancel","initialFormValues","boardColumns","generalFields","_useFormData","tabValue","setTabValue","hasDialogFields","onSubmit","noValidate","newValue","Tab","components_WidgetTypeForm","AddWidget","closeDialog","components_WidgetForm","StyledCard","forwardRef","isLoggedIn","isDragging","isOver","Card","mapStatusToColor","hover","propTypes","isRequired","bool","StyledCardHeader","CardHeader","StyledCardContent","CardContent","ErrorMessage","errorMessage","errorCause","WidgetContent","WidgetType","LastUpdate","lastUpdateTime","styled_StyledTypography","align","gutterBottom","EditWidget","widgetTypeData","MoreMenu","handleMoreMenuClose","aria-controls","aria-haspopup","MoreVert","Menu","keepMounted","MenuList","StyledButtonBox","ConfirmationDialog","handleOk","labelOk","labelCancel","components_AppDialog","core","autoFocus","styled_StyledCancelButton","Widget","shallowEqual","_widgetData$config","_useToggle","_useToggle2","confirmationDialogOpened","openConfirmationDialog","closeConfirmationDialog","_useToggle3","_useToggle4","dialogOpened","openDialog","_useDrag","useDrag","canDrag","collect","monitor","_useDrag2","drag","_useDrop","useDrop","accept","sourceIndex","_ref$current$getBound","getBoundingClientRect","left","right","dropTargetMiddleX","dragSourceMouseX","getClientOffset","x","dropResult","getSourceClientOffset","_useDrop2","drop","handleEditClick","closeMenu","handleDeleteClick","avatar","Warning_default","titleTypographyProps","components_MoreMenu","components_ErrorMessage","components_WidgetContent","components_LastUpdate","renderCardContent","components_EditWidget","components_ConfirmationDialog","WidgetList","components_Widget","StyledLink","ErrorPage","tip","homeLink","to","NotFound","components_ErrorPage","BoardForm","formFields","BoardForm_styled_StyledCancelButton","AddBoard","Add","components_BoardForm","NoBoards","components_AddBoard","StyledContainer","BaseNoData","StyledNotFound","StyledNoBoards","Board","allBoardsLength","components_WidgetList","IndexBoard","_useSelector","components_Board","StyledTimer","BoardSwitcher","_useBoardSwitching","switcherBoards","hasBoardsToSwitch","boardIndex","indexOf","isPlaying","setIsPlaying","timeElapsed","setTimeElapsed","_getPrevAndNextIndex","currentIndex","lastIndex","getPrevAndNextIndex","_getPrevAndNextIndex2","prevBoardIndex","nextBoardIndex","prevBoardTitle","nextBoardTitle","isDisable","switchBoard","useCallback","direction","currentBoardIndex","next","prev","interval","prevState","handleBoardsSwitch","handlePlayToggle","handleResetTimeElapsed","useBoardSwitching","timeLeft","previousSwitchInterval","usePrevious","timeInSec","seconds","minutes","leadingZero","formatTime","Tooltip","placement","edge","SkipPrevious","Pause","PlayArrow","SkipNext","UserLogin","errorMsg","handleLoginButtonClick","usernameField","document","getElementById","passwordField","username","password","getCredentials","handleLoginOnEnterPress","AccountCircle","PowerSettingsNew","onKeyPress","StyledBoardSwitcher","StyledAppBar","AppBar","StyledToolbar","Toolbar","NavBar","handleDrawerToggle","noBoardsFound","position","Container","maxWidth","disableGutters","DashboardRounded","components_UserLogin","IconVariant","iconByVariant","CheckCircle","Warning","Info","Icon","StyledSnackbarContent","SnackbarContent","mapVariantToColor","SnackbarVariantContent","alignItems","components_IconVariant","marginLeft","SnackbarWithVariant","React","memo","getNotification","useMemo","closeSnackbar","Snackbar_default","onExited","autoHideDuration","disableWindowBlurListener","components_SnackbarVariantContent","Notifications","components_SnackbarWithVariant","EditBoard","StyledCardActions","CardActions","BoardCard","boardData","top","bottom","dropTargetMiddleY","dragSourceMouseY","y","styled_StyledCard","Edit","Delete","components_EditBoard","StyledBoardCard","BoardList","Logo","src","logo","alt","StyledActions","StyledSaveFab","Fab","StyledBoardList","StyledMain","StyledLogo","StyledDrawerContainer","MainTemplate","drawerOpened","setDrawerOpened","opened","components_NavBar","Drawer","router_es","BoardIndex","Save","components_Notifications","components_AddWidget","ServerErrorPage","App","appInitialized","socket","WebSocket","window","location","hostname","process","handleMessageReceive","dataJson","_JSON$parse","eventType","addEventListener","removeEventListener","ThemeProvider","esm","backend","HTML5Backend","CssBaseline","components_ServerErrorPage","components_MainTemplate","store","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0cb847f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cogBoard-white.cd833032.png\";","import { RECEIVE_DATA } from '../../actions/types';\r\n\r\nconst initialized = (state = false, { type }) => {\r\n  return type === RECEIVE_DATA ? true : state;\r\n};\r\n\r\nexport default initialized;\r\n","export const INIT_BOARD_PROPS = 'INIT_BOARD_PROPS';\r\nexport const REQUEST_DATA = 'REQUEST_DATA';\r\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\r\nexport const REQUEST_UPDATE = 'REQUEST_UPDATE';\r\nexport const UPDATE_WIDGET = 'UPDATE_WIDGET';\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const EDIT_BOARD = 'EDIT_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const REORDER_BOARDS = 'REORDER_BOARDS';\r\nexport const SET_CURRENT_BOARD = 'SET_CURRENT_BOARD';\r\nexport const ADD_WIDGET = 'ADD_WIDGET';\r\nexport const EDIT_WIDGET = 'EDIT_WIDGET';\r\nexport const DELETE_WIDGET = 'DELETE_WIDGET';\r\nexport const DELETE_MULTIPLE_WIDGETS = 'DELETE_MULTIPLE_WIDGETS';\r\nexport const SORT_WIDGETS = 'SORT_WIDGETS';\r\nexport const DATA_CHANGED = 'DATA_CHANGED';\r\nexport const SAVE_DATA_START = 'SAVE_DATA_START';\r\nexport const SAVE_DATA_SUCCESS = 'SAVE_DATA_SUCCESS';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const CLEAR_LOGIN_ERROR_MESSAGE = 'CLEAR_LOGIN_ERROR_MESSAGE';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const PUSH_NOTIFICATION = 'PUSH_NOTIFICATION';\r\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\r\nexport const SET_LOGOUT_REASON_MESSAGE = 'SET_LOGOUT_REASON_MESSAGE';\r\n","import { REQUEST_DATA } from '../../actions/types';\r\n\r\nconst dataFetching = (state = false, { type }) => {\r\n  return type === REQUEST_DATA ? true : state;\r\n};\r\n\r\nexport default dataFetching;\r\n","import { DATA_CHANGED, SAVE_DATA_SUCCESS } from '../../actions/types';\r\n\r\nconst isDataChanged = (state = false, { type }) => {\r\n  switch (type) {\r\n    case DATA_CHANGED:\r\n      return true;\r\n    case SAVE_DATA_SUCCESS:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isDataChanged;\r\n","import { SAVE_DATA_START, SAVE_DATA_SUCCESS } from '../../actions/types';\r\n\r\nconst isDataSaving = (state = false, { type }) => {\r\n  switch (type) {\r\n    case SAVE_DATA_START:\r\n      return true;\r\n    case SAVE_DATA_SUCCESS:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isDataSaving;\r\n","import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_SUCCESS,\r\n  CLEAR_LOGIN_ERROR_MESSAGE,\r\n  LOGOUT\r\n} from '../../actions/types';\r\n\r\nconst loginErrorMessage = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case LOGIN_FAILURE:\r\n      return payload;\r\n    case LOGIN_SUCCESS:\r\n    case CLEAR_LOGIN_ERROR_MESSAGE:\r\n    case LOGOUT:\r\n      return '';\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginErrorMessage;\r\n","import { LOGIN_SUCCESS, LOGOUT } from '../../actions/types';\r\n\r\nconst isAuthenticated = (state = false, { type }) => {\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return true;\r\n    case LOGOUT:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isAuthenticated;\r\n","import { SET_LOGOUT_REASON_MESSAGE, LOGOUT } from '../../actions/types';\r\n\r\nconst logoutReasonMessage = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case SET_LOGOUT_REASON_MESSAGE:\r\n      return payload;\r\n    case LOGOUT:\r\n      return '';\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default logoutReasonMessage;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport initialized from './initialized';\r\nimport dataFetching from './dataFetching';\r\nimport isDataChanged from './isDataChanged';\r\nimport isDataSaving from './isDataSaving';\r\nimport loginErrorMessage from './loginErrorMessage';\r\nimport isAuthenticated from './isAuthenticated';\r\nimport logoutReasonMessage from './logoutReasonMessage';\r\n\r\nconst app = combineReducers({\r\n  initialized,\r\n  dataFetching,\r\n  isDataChanged,\r\n  isDataSaving,\r\n  loginErrorMessage,\r\n  isAuthenticated,\r\n  logoutReasonMessage\r\n});\r\n\r\nexport default app;\r\n","import { SET_CURRENT_BOARD } from '../../actions/types';\r\n\r\nconst currentBoard = (state = null, action) => {\r\n  const { type, payload: boardId } = action;\r\n\r\n  switch (type) {\r\n    case SET_CURRENT_BOARD:\r\n      return boardId;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentBoard;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport currentBoard from './currentBoard';\r\n\r\nconst ui = combineReducers({\r\n  currentBoard\r\n});\r\n\r\nexport default ui;\r\n","export const reorderItems = (items, sourceId, targetIndex) => {\r\n  const withoutSource = items.filter(itemId => itemId !== sourceId);\r\n  const sortedItems = [\r\n    ...withoutSource.slice(0, targetIndex),\r\n    sourceId,\r\n    ...withoutSource.slice(targetIndex)\r\n  ];\r\n\r\n  return sortedItems;\r\n};\r\n","import {\r\n  RECEIVE_DATA,\r\n  ADD_BOARD,\r\n  EDIT_BOARD,\r\n  DELETE_BOARD,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET,\r\n  SORT_WIDGETS,\r\n  INIT_BOARD_PROPS\r\n} from '../../actions/types';\r\n\r\nimport { reorderItems } from '../helpers';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const {\r\n    boards: { boardsById }\r\n  } = payload;\r\n\r\n  return { ...state, ...boardsById };\r\n};\r\n\r\nconst initBoardProps = (state, { payload }) => {\r\n  return Object.entries(state).reduce((newState, [boardId, boardProps]) => {\r\n    newState[boardId] = { ...payload, ...boardProps };\r\n\r\n    return newState;\r\n  }, {});\r\n};\r\n\r\nconst addBoard = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return { ...state, [id]: payload };\r\n};\r\n\r\nconst editBoard = (state, { payload }) => {\r\n  const { id, ...other } = payload;\r\n  const board = state[id];\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { ...board, ...other }\r\n  };\r\n};\r\n\r\nconst deleteBoard = (state, { payload: id }) => {\r\n  const { [id]: deletedBoard, ...rest } = state;\r\n\r\n  return { ...rest };\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: [...widgets, id]\r\n    }\r\n  };\r\n};\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: widgets.filter(widgetId => widgetId !== id)\r\n    }\r\n  };\r\n};\r\n\r\nconst sortWidgets = (state, { payload }) => {\r\n  const { sourceId, targetIndex, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n  const sortedWidgets = reorderItems(widgets, sourceId, targetIndex);\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: sortedWidgets\r\n    }\r\n  };\r\n};\r\n\r\nconst boardsById = (state = {}, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case INIT_BOARD_PROPS:\r\n      return initBoardProps(state, action);\r\n    case ADD_BOARD:\r\n      return addBoard(state, action);\r\n    case EDIT_BOARD:\r\n      return editBoard(state, action);\r\n    case DELETE_BOARD:\r\n      return deleteBoard(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    case SORT_WIDGETS:\r\n      return sortWidgets(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardsById;\r\n","import {\r\n  RECEIVE_DATA,\r\n  DELETE_BOARD,\r\n  ADD_BOARD,\r\n  REORDER_BOARDS\r\n} from '../../actions/types';\r\nimport { reorderItems } from '../helpers';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const {\r\n    boards: { allBoards }\r\n  } = payload;\r\n\r\n  return [...state, ...allBoards];\r\n};\r\n\r\nconst addBoard = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return [...state, id];\r\n};\r\n\r\nconst deleteBoard = (state, { payload: id }) =>\r\n  state.filter(boardId => boardId !== id);\r\n\r\nconst reorderBoards = (state, { payload }) => {\r\n  const { sourceId, targetIndex } = payload;\r\n  const boards = [...state];\r\n  const sortedBoards = reorderItems(boards, sourceId, targetIndex);\r\n\r\n  return sortedBoards;\r\n};\r\n\r\nconst allBoards = (state = [], action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case ADD_BOARD:\r\n      return addBoard(state, action);\r\n    case DELETE_BOARD:\r\n      return deleteBoard(state, action);\r\n    case REORDER_BOARDS:\r\n      return reorderBoards(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allBoards;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport boardsById from './boardsById';\r\nimport allBoards from './allBoards';\r\n\r\nconst boards = combineReducers({\r\n  boardsById,\r\n  allBoards\r\n});\r\n\r\nexport default boards;\r\n","import {\r\n  RECEIVE_DATA,\r\n  REQUEST_UPDATE,\r\n  UPDATE_WIDGET,\r\n  EDIT_WIDGET,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET\r\n} from '../../actions/types';\r\n\r\nconst requestUpdate = (state, { payload: id }) => {\r\n  const widget = state[id];\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { ...widget, isUpdating: true }\r\n  };\r\n};\r\n\r\nconst receiveData = (state, action) => {\r\n  const { payload } = action;\r\n  const {\r\n    widgets: { widgetsById }\r\n  } = payload;\r\n\r\n  return { ...state, ...widgetsById };\r\n};\r\n\r\nconst updateWidget = (state, { payload }) => {\r\n  const { id, content, ...other } = payload;\r\n  const widget = state[id];\r\n  const prevContent = widget.content;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: {\r\n      ...widget,\r\n      ...other,\r\n      content: { ...prevContent, ...content },\r\n      isUpdating: false\r\n    }\r\n  };\r\n};\r\n\r\nconst editWidget = (state, { payload }) => {\r\n  const { id, content, ...other } = payload;\r\n  const widget = state[id];\r\n  const prevContent = widget.content;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: {\r\n      ...widget,\r\n      ...other,\r\n      content: { ...prevContent, ...content }\r\n    }\r\n  };\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id, boardId, ...other } = payload;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { id, ...other }\r\n  };\r\n};\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n  const { [id]: widgetId, ...rest } = state;\r\n\r\n  return rest;\r\n};\r\n\r\nconst widgetsById = (state = {}, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case REQUEST_UPDATE:\r\n      return requestUpdate(state, action);\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case UPDATE_WIDGET:\r\n      return updateWidget(state, action);\r\n    case EDIT_WIDGET:\r\n      return editWidget(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default widgetsById;\r\n","import {\r\n  RECEIVE_DATA,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET,\r\n  DELETE_MULTIPLE_WIDGETS\r\n} from '../../actions/types';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const {\r\n    widgets: { allWidgets }\r\n  } = payload;\r\n\r\n  return [...state, ...allWidgets];\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return [...state, id];\r\n};\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return state.filter(widgetId => widgetId !== id);\r\n};\r\n\r\nconst deleteMultipleWidgets = (state, { payload }) => {\r\n  const { widgetIds } = payload;\r\n\r\n  return state.filter(widgetId => !widgetIds.includes(widgetId));\r\n};\r\n\r\nconst allWidgets = (state = [], action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    case DELETE_MULTIPLE_WIDGETS:\r\n      return deleteMultipleWidgets(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allWidgets;\r\n","import { combineReducers } from 'redux';\n\nimport widgetsById from './widgetsById';\nimport allWidgets from './allWidgets';\n\nconst widgets = combineReducers({\n  widgetsById,\n  allWidgets\n});\n\nexport default widgets;\n","import { PUSH_NOTIFICATION, DELETE_NOTIFICATION } from '../../actions/types';\r\nimport { assoc, dissoc } from 'ramda';\r\n\r\nconst pushNotification = (state, payload) => {\r\n  const { id } = payload;\r\n\r\n  return assoc(id, payload, state);\r\n};\r\n\r\nconst deleteNotification = (state, payload) => {\r\n  const id = payload;\r\n\r\n  return dissoc(id, state);\r\n};\r\n\r\nconst notificationsById = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case PUSH_NOTIFICATION:\r\n      return pushNotification(state, payload);\r\n    case DELETE_NOTIFICATION:\r\n      return deleteNotification(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notificationsById;\r\n","import { append, without } from 'ramda';\r\n\r\nimport { PUSH_NOTIFICATION, DELETE_NOTIFICATION } from '../../actions/types';\r\n\r\nconst pushNotification = (state, { id }) => append(id, state);\r\n\r\nconst deleteNotification = (state, id) => without([id], state);\r\n\r\nconst allNotifications = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case PUSH_NOTIFICATION:\r\n      return pushNotification(state, payload);\r\n    case DELETE_NOTIFICATION:\r\n      return deleteNotification(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allNotifications;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport notificationsById from './notificationsById';\r\nimport allNotifications from './allNotifications';\r\n\r\nconst notifications = combineReducers({\r\n  notificationsById,\r\n  allNotifications\r\n});\r\n\r\nexport default notifications;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport app from './app';\r\nimport ui from './ui';\r\nimport boards from './boards';\r\nimport widgets from './widgets';\r\nimport notifications from './notifications';\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n  ui,\r\n  boards,\r\n  widgets,\r\n  notifications\r\n});\r\n\r\nexport default rootReducer;\r\n","import { dataChanged, setLogoutReasonMessage } from './actionCreators';\r\nimport { logout } from './thunks';\r\nimport { isAuthenticated } from '../utils/auth';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst checkResponseStatus = response => {\r\n  const { status, statusText } = response;\r\n\r\n  if (status >= 200 && status < 300) {\r\n    return Promise.resolve(response);\r\n  } else if (status >= 500) {\r\n    navigate('/error-page');\r\n    return Promise.reject(new Error(statusText));\r\n  } else {\r\n    return Promise.reject(new Error(statusText));\r\n  }\r\n};\r\n\r\nexport const fetchData = (url, method = 'GET', data = {}, token = '') => {\r\n  const postConfig = {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  if (token) {\r\n    postConfig.headers['Authorization'] = token;\r\n  }\r\n  const init = method !== 'GET' ? postConfig : {};\r\n\r\n  return fetch(url, init)\r\n    .then(checkResponseStatus)\r\n    .then(response => response.json());\r\n};\r\n\r\nconst makeIdCreator = prefix => allIds => {\r\n  const intRegex = new RegExp(/[0-9]\\d*$/, 'g');\r\n  const [lastId] = [...allIds].sort(\r\n    (a, b) => Number(b.match(intRegex)) - Number(a.match(intRegex))\r\n  );\r\n\r\n  if (lastId) {\r\n    const intId = Number(lastId.match(intRegex));\r\n\r\n    return lastId.replace(intRegex, intId + 1);\r\n  } else {\r\n    return `${prefix}1`;\r\n  }\r\n};\r\n\r\nconst createWidgetId = makeIdCreator('widget');\r\n\r\nconst mapFormValuesToWidgetData = values => {\r\n  const { columns, goNewLine, rows, ...other } = values;\r\n\r\n  return {\r\n    ...other,\r\n    config: {\r\n      columns,\r\n      goNewLine,\r\n      rows\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNewWidgetData = ({\r\n  values,\r\n  allWidgets,\r\n  currentBoardId\r\n}) => ({\r\n  boardId: currentBoardId,\r\n  id: createWidgetId(allWidgets),\r\n  status: 'UNKNOWN',\r\n  ...mapFormValuesToWidgetData(values)\r\n});\r\n\r\nexport const createEditWidgetData = ({ id, values }) => ({\r\n  id,\r\n  ...mapFormValuesToWidgetData(values)\r\n});\r\n\r\nexport const mapDataToState = data => {\r\n  const { id, title, content, type, disabled, config, ...other } = data;\r\n\r\n  const newWidgetProps = ['status', 'boardId'];\r\n  const generalData = { id, title, config, type, disabled, content };\r\n\r\n  newWidgetProps.forEach(prop => {\r\n    if (data[prop]) {\r\n      generalData[prop] = data[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    generalData,\r\n    serverData: { id, type, ...other }\r\n  };\r\n};\r\n\r\nexport const withAuthentication = actionCallback => (...args) => dispatch => {\r\n  if (!isAuthenticated()) {\r\n    dispatch(setLogoutReasonMessage('session expired'));\r\n    dispatch(logout());\r\n\r\n    return;\r\n  }\r\n\r\n  dispatch(actionCallback.apply(null, args));\r\n};\r\n\r\nexport const withDataChanged = actionCallback => (...args) => dispatch => {\r\n  dispatch(actionCallback.apply(null, args));\r\n  dispatch(dataChanged());\r\n};\r\n","export const setSize = factor => ({ theme }) => `${theme.spacing(factor)}px`;\r\n\r\nexport const splitPropsGroupName = propName => {\r\n  return propName.includes('.') ? propName.split('.') : [undefined, propName];\r\n};\r\n\r\nexport const sortByKey = (obj, key, asc = true) =>\r\n  Object.entries(obj)\r\n    .sort(([, { [key]: keyA }], [, { [key]: keyB }]) =>\r\n      asc ? keyA.localeCompare(keyB) : keyB.localeCompare(keyA)\r\n    )\r\n    .reduce((newObj, [key, value]) => {\r\n      newObj[key] = value;\r\n\r\n      return newObj;\r\n    }, {});\r\n\r\nexport const capitalize = ([firstLetter, ...rest]) =>\r\n  [firstLetter.toUpperCase(), ...rest].join('');\r\n\r\nexport const parseYupErrors = errors => {\r\n  let result = {};\r\n  errors.inner.forEach(error => {\r\n    const { path, message } = error;\r\n\r\n    if (path in result) {\r\n      result[path].push(message);\r\n    } else {\r\n      result[path] = [message];\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport const trimLeadingZeros = inputValue => String(parseInt(inputValue));\r\n\r\nexport const hasError = error => error !== undefined;\r\n","import { capitalize } from '../helpers';\r\n\r\nexport const URL = {\r\n  LOAD_DATA: '/api/config',\r\n  SAVE_DATA: '/api/config/save',\r\n  UPDATE_WIDGET: '/api/widget/update',\r\n  DELETE_WIDGET: '/api/widget/delete',\r\n  LOGIN: '/api/login'\r\n};\r\nexport const COLUMN_MULTIPLIER = 2;\r\nexport const ROW_MULTIPLIER = 2;\r\nexport const BOARD_COLUMNS_MIN = 4;\r\nexport const BOARD_COLUMNS_DEFAULT = 8;\r\nexport const BOARD_COLUMNS_MAX = 20;\r\nexport const BOARD_TITLE_LENGTH_LIMIT = 25;\r\nexport const SWITCH_INTERVAL_MIN = 3;\r\n\r\nexport const WIDGET_COLUMNS_MIN = 0.5;\r\nexport const WIDGET_ROWS_MIN = 0.5;\r\nexport const WIDGET_ROWS_MAX = 4;\r\n\r\nexport const WIDGET_TITLE_LENGTH_LIMIT = 25;\r\n\r\nexport const TEXT_SIZES = [\r\n  {\r\n    display: 'XXL',\r\n    value: 'h2'\r\n  },\r\n  {\r\n    display: 'XL',\r\n    value: 'h3'\r\n  },\r\n  {\r\n    display: 'L',\r\n    value: 'h4'\r\n  },\r\n  {\r\n    display: 'M',\r\n    value: 'h5'\r\n  },\r\n  {\r\n    display: 'S',\r\n    value: 'h6'\r\n  },\r\n  {\r\n    display: 'XS',\r\n    value: 'subtitle1'\r\n  },\r\n  {\r\n    display: 'XXS',\r\n    value: 'subtitle2'\r\n  }\r\n];\r\n\r\nexport const REQUEST_METHODS = [\r\n  {\r\n    display: 'GET',\r\n    value: 'get'\r\n  },\r\n  {\r\n    display: 'PUT',\r\n    value: 'put'\r\n  },\r\n  {\r\n    display: 'POST',\r\n    value: 'post'\r\n  },\r\n  {\r\n    display: 'DELETE',\r\n    value: 'delete'\r\n  }\r\n];\r\n\r\nexport const ItemTypes = {\r\n  WIDGET: 'widget',\r\n  BOARD: 'board'\r\n};\r\n\r\nexport const AEM_HEALTH_CHECKS = {\r\n  inactiveBundles: 'Active Bundles',\r\n  asyncIndexHealthCheck: 'Async Index Health Check',\r\n  codeCacheHealthCheck: 'Code Cache Health Check',\r\n  DiskSpaceHealthCheck: 'Disk Space',\r\n  logErrorHealthCheck: 'Log Errors',\r\n  ObservationQueueLengthHealthCheck: 'Observation Queue Length',\r\n  resourceSearchPathErrorHealthCheck: 'Resource Search Path Errors',\r\n  requestsStatus: 'Request Performance',\r\n  queriesStatus: 'Query Performance',\r\n  queryTraversalLimitsBundle: 'Query Traversal Limits',\r\n  securitychecks: 'Security Checks',\r\n  slingJobs: 'Sling Jobs',\r\n  slingDiscoveryOakSynchronizedClocks: 'Synchronized Clocks',\r\n  systemchecks: 'System Maintenance'\r\n};\r\n\r\nexport const ALL_SONARQUBE_METRICS = [\r\n  'blocker_violations',\r\n  'critical_violations',\r\n  'major_violations',\r\n  'minor_violations',\r\n  'info_violations',\r\n  'bugs',\r\n  'code_smells',\r\n  'vulnerabilities'\r\n];\r\n\r\n// props will be added to old configs on app init\r\n\r\nexport const INITIAL_BOARD_PROPS = {\r\n  autoSwitch: false,\r\n  switchInterval: 0\r\n};\r\n\r\nexport const validationMessages = {\r\n  STRING_LENGTH: (name, max) =>\r\n    `${name} length must be less or equal to ${max}.`,\r\n  FIELD_REQUIRED: () => 'This field is required',\r\n  NUMBER_MIN: (name, min) => `${name} number cannot be less than ${min}.`,\r\n  NUMBER_MAX: (name, max) => `${name} number cannot be more than ${max}.`,\r\n  INVALID_URL: () => 'Invalid URL',\r\n  FIELD_MIN_ITEMS: () => 'This field must have at least 1 item.',\r\n  UNIQUE_FIELD: () => 'This field must be unique.'\r\n};\r\nexport const NOTIFICATIONS = {\r\n  LOGIN: userRole => ({\r\n    type: 'success',\r\n    message: `Logged in as ${userRole}`,\r\n    duration: 3000\r\n  }),\r\n  LOGOUT: (userRole, reason = '') => ({\r\n    type: 'info',\r\n    message: `${capitalize(userRole)} logged out${\r\n      reason ? ' - ' : ''\r\n    }${reason}`,\r\n    duration: 3000\r\n  })\r\n};\r\n","import { v4 } from 'uuid';\r\nimport {\r\n  REQUEST_DATA,\r\n  RECEIVE_DATA,\r\n  REQUEST_UPDATE,\r\n  ADD_BOARD,\r\n  EDIT_BOARD,\r\n  DELETE_BOARD,\r\n  SET_CURRENT_BOARD,\r\n  UPDATE_WIDGET,\r\n  EDIT_WIDGET,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET,\r\n  DELETE_MULTIPLE_WIDGETS,\r\n  SORT_WIDGETS,\r\n  REORDER_BOARDS,\r\n  DATA_CHANGED,\r\n  SAVE_DATA_START,\r\n  SAVE_DATA_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  CLEAR_LOGIN_ERROR_MESSAGE,\r\n  LOGOUT,\r\n  INIT_BOARD_PROPS,\r\n  PUSH_NOTIFICATION,\r\n  DELETE_NOTIFICATION,\r\n  SET_LOGOUT_REASON_MESSAGE\r\n} from './types';\r\nimport { INITIAL_BOARD_PROPS } from '../constants';\r\n\r\nexport const requestData = () => ({\r\n  type: REQUEST_DATA\r\n});\r\n\r\nexport const loginSuccess = () => ({\r\n  type: LOGIN_SUCCESS\r\n});\r\n\r\nexport const loginFailure = data => ({\r\n  type: LOGIN_FAILURE,\r\n  payload: data\r\n});\r\n\r\nexport const clearLoginErrorMessage = () => ({\r\n  type: CLEAR_LOGIN_ERROR_MESSAGE\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT\r\n});\r\n\r\nexport const receiveData = state => ({\r\n  type: RECEIVE_DATA,\r\n  payload: state\r\n});\r\n\r\nexport const requestUpdate = id => ({\r\n  type: REQUEST_UPDATE,\r\n  payload: id\r\n});\r\n\r\nexport const updateWidget = data => ({\r\n  type: UPDATE_WIDGET,\r\n  payload: data\r\n});\r\n\r\nexport const addBoard = data => ({\r\n  type: ADD_BOARD,\r\n  payload: {\r\n    id: `board-${v4()}`,\r\n    theme: 'default',\r\n    widgets: [],\r\n    ...data\r\n  }\r\n});\r\n\r\nexport const deleteBoard = id => ({\r\n  type: DELETE_BOARD,\r\n  payload: id\r\n});\r\n\r\nexport const editBoard = editData => ({\r\n  type: EDIT_BOARD,\r\n  payload: editData\r\n});\r\n\r\nexport const reorderBoards = (sourceId, targetIndex) => ({\r\n  type: REORDER_BOARDS,\r\n  payload: { sourceId, targetIndex }\r\n});\r\n\r\nexport const editWidget = editData => ({\r\n  type: EDIT_WIDGET,\r\n  payload: editData\r\n});\r\n\r\nexport const addWidget = widgetData => ({\r\n  type: ADD_WIDGET,\r\n  payload: widgetData\r\n});\r\n\r\nexport const deleteWidget = (id, boardId) => ({\r\n  type: DELETE_WIDGET,\r\n  payload: { id, boardId }\r\n});\r\n\r\nexport const deleteMultipleWidgets = (widgetIds, boardId = '') => ({\r\n  type: DELETE_MULTIPLE_WIDGETS,\r\n  payload: { widgetIds, boardId }\r\n});\r\n\r\nexport const sortWidgets = payload => ({\r\n  type: SORT_WIDGETS,\r\n  payload\r\n});\r\n\r\nexport const dataChanged = () => ({\r\n  type: DATA_CHANGED\r\n});\r\n\r\nexport const saveDataStart = () => ({\r\n  type: SAVE_DATA_START\r\n});\r\n\r\nexport const saveDataSuccess = () => ({\r\n  type: SAVE_DATA_SUCCESS\r\n});\r\n\r\nexport const setCurrentBoard = id => ({\r\n  type: SET_CURRENT_BOARD,\r\n  payload: id\r\n});\r\n\r\nexport const initBoardProps = () => ({\r\n  type: INIT_BOARD_PROPS,\r\n  payload: { ...INITIAL_BOARD_PROPS }\r\n});\r\n\r\nexport const pushNotification = notification => ({\r\n  type: PUSH_NOTIFICATION,\r\n  payload: {\r\n    id: v4(),\r\n    ...notification\r\n  }\r\n});\r\n\r\nexport const deleteNotification = id => ({\r\n  type: DELETE_NOTIFICATION,\r\n  payload: id\r\n});\r\n\r\nexport const setLogoutReasonMessage = reason => ({\r\n  type: SET_LOGOUT_REASON_MESSAGE,\r\n  payload: reason\r\n});\r\n","import decode from 'jwt-decode';\r\n\r\nconst tokenName = 'token';\r\n\r\nconst hasToken = () => !!getToken();\r\n\r\nconst isTokenExpired = token => {\r\n  const expTimestamp = decode(token).exp * 1000;\r\n\r\n  return Date.now() > expTimestamp;\r\n};\r\n\r\nexport const getUserRole = () =>\r\n  hasToken() ? decode(getToken()).name : undefined;\r\n\r\nexport const getToken = () => localStorage.getItem(tokenName);\r\n\r\nexport const setToken = token => localStorage.setItem(tokenName, token);\r\n\r\nexport const removeToken = () => localStorage.removeItem(tokenName);\r\n\r\nexport const isAuthenticated = () => hasToken() && !isTokenExpired(getToken());\r\n","import { navigate } from '@reach/router';\r\n\r\nimport {\r\n  requestData,\r\n  receiveData,\r\n  requestUpdate,\r\n  addBoard,\r\n  editBoard,\r\n  deleteBoard,\r\n  reorderBoards,\r\n  setCurrentBoard,\r\n  updateWidget,\r\n  addWidget,\r\n  editWidget,\r\n  deleteMultipleWidgets,\r\n  sortWidgets,\r\n  dataChanged,\r\n  saveDataStart,\r\n  deleteWidget,\r\n  loginSuccess,\r\n  loginFailure,\r\n  logout as logoutUser,\r\n  initBoardProps,\r\n  pushNotification\r\n} from './actionCreators';\r\nimport {\r\n  fetchData,\r\n  createNewWidgetData,\r\n  createEditWidgetData,\r\n  mapDataToState,\r\n  withAuthentication,\r\n  withDataChanged\r\n} from './helpers';\r\nimport { URL, NOTIFICATIONS } from '../constants';\r\nimport { setToken, removeToken, getToken, getUserRole } from '../utils/auth';\r\n\r\nexport const fetchInitialData = () => dispatch => {\r\n  dispatch(requestData());\r\n\r\n  return fetchData(URL.LOAD_DATA).then(data => {\r\n    dispatch(receiveData(data));\r\n    dispatch(initBoardProps());\r\n  }, console.error);\r\n};\r\n\r\nexport const saveDataThunk = () => (dispatch, getState) => {\r\n  const { boards, widgets } = getState();\r\n  const data = { boards, widgets };\r\n  const token = getToken();\r\n\r\n  return fetchData(URL.SAVE_DATA, 'POST', data, token).then(\r\n    () => dispatch(saveDataStart()),\r\n    console.error\r\n  );\r\n};\r\n\r\nexport const login = credentials => dispatch => {\r\n  return fetchData(URL.LOGIN, 'POST', credentials).then(\r\n    ({ token }) => {\r\n      setToken(token);\r\n      dispatch(loginSuccess());\r\n      dispatch(pushNotification(NOTIFICATIONS.LOGIN(getUserRole())));\r\n    },\r\n    ({ message }) => dispatch(loginFailure(message))\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  const userRole = getUserRole();\r\n  const {\r\n    app: { logoutReasonMessage }\r\n  } = getState();\r\n\r\n  removeToken();\r\n\r\n  dispatch(logoutUser());\r\n  dispatch(\r\n    pushNotification(NOTIFICATIONS.LOGOUT(userRole, logoutReasonMessage))\r\n  );\r\n};\r\n\r\nconst deleteBoardWithWidgetsThunk = id => (dispatch, getState) => {\r\n  const { ui, boards } = getState();\r\n  const { widgets } = boards.boardsById[id];\r\n  const { currentBoard } = ui;\r\n\r\n  dispatch(deleteBoard(id));\r\n\r\n  const [firstBoardId] = getState().boards.allBoards;\r\n\r\n  if (id === currentBoard) {\r\n    dispatch(setCurrentBoard(firstBoardId || null));\r\n    navigate(firstBoardId || '/');\r\n  }\r\n\r\n  dispatch(deleteMultipleWidgets(widgets));\r\n};\r\n\r\nconst makeWidgetUpdaterThunk = (\r\n  beforeUpdateActionCreator,\r\n  widgetDataCreator\r\n) => data => (dispatch, getState) => {\r\n  const allWidgets = getState().widgets.allWidgets;\r\n  const token = getToken();\r\n  const widgetData = widgetDataCreator({ ...data, allWidgets });\r\n  const { id } = widgetData;\r\n  const { generalData, serverData } = mapDataToState(widgetData);\r\n\r\n  dispatch(beforeUpdateActionCreator(generalData));\r\n  dispatch(dataChanged());\r\n  dispatch(requestUpdate(id));\r\n\r\n  return fetchData(URL.UPDATE_WIDGET, 'POST', serverData, token).then(\r\n    () => dispatch(updateWidget(serverData)),\r\n    console.error\r\n  );\r\n};\r\n\r\nconst removeWidgetThunk = id => (dispatch, getState) => {\r\n  const { currentBoard: boardId } = getState().ui;\r\n  const token = getToken();\r\n\r\n  return fetchData(URL.DELETE_WIDGET, 'POST', { id }, token).then(\r\n    () => dispatch(deleteWidget(id, boardId)),\r\n    console.error\r\n  );\r\n};\r\n\r\nconst reorderWidgetsThunk = (sourceId, targetIndex) => (dispatch, getState) => {\r\n  const { currentBoard: boardId } = getState().ui;\r\n\r\n  dispatch(sortWidgets({ sourceId, targetIndex, boardId }));\r\n};\r\n\r\nexport const addNewWidget = withAuthentication(\r\n  makeWidgetUpdaterThunk(addWidget, createNewWidgetData)\r\n);\r\nexport const saveWidget = withAuthentication(\r\n  makeWidgetUpdaterThunk(editWidget, createEditWidgetData)\r\n);\r\nexport const removeWidget = withAuthentication(\r\n  withDataChanged(removeWidgetThunk)\r\n);\r\nexport const reorderWidgets = withDataChanged(reorderWidgetsThunk);\r\nexport const reorderBoard = withDataChanged(reorderBoards);\r\nexport const addNewBoard = withDataChanged(addBoard);\r\nexport const saveBoard = withDataChanged(editBoard);\r\nexport const deleteBoardWithWidgets = withDataChanged(\r\n  deleteBoardWithWidgetsThunk\r\n);\r\nexport const setWidgetState = withDataChanged(editWidget);\r\nexport const saveData = withAuthentication(saveDataThunk);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { amber, blue, green, red } from '@material-ui/core/colors/index';\r\n\r\nconst gradientAngle = 45;\r\n\r\nconst createGradient = (start, end) =>\r\n  `linear-gradient(${gradientAngle}deg, ${start}, ${end})`;\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    background: {\r\n      default: '#211F39',\r\n      paper: '#26243E',\r\n      board: {\r\n        card: '#5c6bc0',\r\n        dragged: '#353b61'\r\n      }\r\n    },\r\n    status: {\r\n      UNKNOWN: '#26243E',\r\n      OK: createGradient('#519657', '#81c784'),\r\n      IN_PROGRESS: createGradient('#009faf', '#4dd0e1'),\r\n      UNSTABLE: createGradient('#c75b39', '#ff8a65'),\r\n      ERROR_CONNECTION: createGradient('#af4448', '#e57373'),\r\n      ERROR_CONFIGURATION: createGradient('#af4448', '#e57373'),\r\n      ERROR: createGradient('#af4448', '#e57373'),\r\n      FAIL: createGradient('#af4448', '#e57373')\r\n    },\r\n    snackbarVariant: {\r\n      info: blue[100],\r\n      success: green[300],\r\n      warning: amber[700],\r\n      error: red[800]\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 10\r\n  },\r\n  typography: {\r\n    h3: {\r\n      fontWeight: 500,\r\n      letterSpacing: 2\r\n    }\r\n  }\r\n});\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nimport { splitPropsGroupName, parseYupErrors } from '../helpers';\r\n\r\nexport const useToggle = (initialState = false) => {\r\n  const [isOpened, setOpened] = useState(initialState);\r\n\r\n  const handleOpen = () => setOpened(true);\r\n  const handleClose = () => setOpened(false);\r\n\r\n  return [isOpened, handleOpen, handleClose];\r\n};\r\n\r\nexport const useFormData = (data, config = {}) => {\r\n  const [values, setValues] = useState(data);\r\n  const { onChange = null, initialSchema = null } = config;\r\n  const [status, setStatus] = useState({\r\n    submited: false,\r\n    onChange: onChange\r\n  });\r\n  const [validationSchema, setValidationSchema] = useState(initialSchema);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (fieldName, updaterFn = arg => arg) => event => {\r\n    const {\r\n      target: { type, value, checked }\r\n    } = event;\r\n    const valueType = {\r\n      checkbox: checked,\r\n      number: Number(value)\r\n    };\r\n    const fieldValue = valueType[type] !== undefined ? valueType[type] : value;\r\n\r\n    setFieldValue(fieldName, updaterFn(fieldValue));\r\n  };\r\n\r\n  const setFieldValue = (fieldName, fieldValue) => {\r\n    const [groupName, propName] = splitPropsGroupName(fieldName);\r\n    let newValues;\r\n\r\n    if (groupName) {\r\n      const groupValues = values[groupName];\r\n\r\n      newValues = {\r\n        ...values,\r\n        [groupName]: { ...groupValues, [propName]: fieldValue }\r\n      };\r\n    } else {\r\n      newValues = { ...values, [propName]: fieldValue };\r\n    }\r\n\r\n    validateField(fieldName, newValues);\r\n\r\n    setValues(newValues);\r\n  };\r\n\r\n  const validateField = (fieldName, fieldsValues) => {\r\n    if (status.submited || status.onChange) {\r\n      validationSchema\r\n        .validateAt(fieldName, fieldsValues, { abortEarly: false })\r\n        .then(() => {\r\n          if (fieldName in errors) {\r\n            const errorsTmp = { ...errors };\r\n\r\n            delete errorsTmp[fieldName];\r\n            setErrors(errorsTmp);\r\n          }\r\n        })\r\n        .catch(error => setErrors({ ...errors, ...parseYupErrors(error) }));\r\n    }\r\n  };\r\n\r\n  const withValidation = func => event => {\r\n    event.preventDefault();\r\n    setStatus({ ...status, submited: true });\r\n\r\n    if (validationSchema) {\r\n      validationSchema\r\n        .validate(values, { abortEarly: false, stripUnknown: true })\r\n        .then(value => func(value))\r\n        .catch(errors => setErrors(parseYupErrors(errors)));\r\n    } else {\r\n      func(values);\r\n    }\r\n  };\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    withValidation,\r\n    errors,\r\n    validationSchema,\r\n    setValidationSchema\r\n  };\r\n};\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getApp = ({ app }) => app;\r\n\r\nconst getUi = ({ ui }) => ui;\r\n\r\nconst getNotifications = ({ notifications }) => notifications;\r\n\r\nconst getBoardsById = ({ boards }) => boards.boardsById;\r\n\r\nconst getAllBoards = ({ boards }) => boards.allBoards;\r\n\r\nconst getBoardId = (_, boardId) => boardId;\r\n\r\nconst getNotificationId = (_, notificationId) => notificationId;\r\n\r\nexport const getIsAuthenticated = createSelector(\r\n  [getApp],\r\n  ({ isAuthenticated }) => isAuthenticated\r\n);\r\n\r\nexport const getCurrentBoardId = createSelector(\r\n  [getUi],\r\n  ({ currentBoard }) => currentBoard\r\n);\r\n\r\nconst getBoard = createSelector(\r\n  [getBoardsById, getBoardId],\r\n  (boardsById, boardId) => boardsById[boardId]\r\n);\r\n\r\nexport const getBoardTitle = createSelector(\r\n  [getBoard],\r\n  board => board && board.title\r\n);\r\n\r\nexport const getSwitchInterval = createSelector(\r\n  [getBoard],\r\n  board => board && board.switchInterval\r\n);\r\n\r\nexport const getSwitcherBoards = createSelector(\r\n  [getAllBoards, getBoardsById],\r\n  (allBoards, boardsById) =>\r\n    allBoards.filter(boardId => boardsById[boardId].autoSwitch)\r\n);\r\n\r\nexport const getNotificationsById = createSelector(\r\n  [getNotifications],\r\n  ({ notificationsById }) => notificationsById\r\n);\r\n\r\nexport const createGetNotification = () =>\r\n  createSelector(\r\n    [getNotificationsById, getNotificationId],\r\n    (notificationsById, notificationId) => notificationsById[notificationId]\r\n  );\r\n\r\nexport const getAllNotifications = createSelector(\r\n  [getNotifications],\r\n  ({ allNotifications }) => allNotifications\r\n);\r\n\r\nexport const getBoards = createSelector(\r\n  [getBoardsById],\r\n  boardsById => Object.values(boardsById)\r\n);\r\n","import React from 'react';\r\nimport { bool, element, func, string } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\r\n\r\nconst StyledDialog = styled(props => (\r\n  <Dialog classes={{ paper: 'paper' }} {...props} />\r\n))`\r\n  .paper {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst StyledDialogContent = styled(DialogContent)`\r\n  padding-bottom: 16px;\r\n`;\r\n\r\nconst AppDialog = props => {\r\n  const {\r\n    children,\r\n    handleDialogClose,\r\n    open,\r\n    title,\r\n    disableBackdropClick\r\n  } = props;\r\n\r\n  const stopEventPropagation = event => event.stopPropagation();\r\n\r\n  return (\r\n    <StyledDialog\r\n      disableBackdropClick={disableBackdropClick}\r\n      onClick={stopEventPropagation}\r\n      onClose={handleDialogClose}\r\n      onKeyDown={stopEventPropagation}\r\n      aria-labelledby=\"app-dialog-title\"\r\n      open={open}\r\n      PaperProps={{ 'data-cy': props['data-cy'] }}\r\n    >\r\n      <DialogTitle id=\"app-dialog-title\" data-cy=\"app-dialog-title\">\r\n        {title}\r\n      </DialogTitle>\r\n      <StyledDialogContent data-cy=\"app-dialog-content\">\r\n        {children}\r\n      </StyledDialogContent>\r\n    </StyledDialog>\r\n  );\r\n};\r\n\r\nAppDialog.propTypes = {\r\n  handleDialogClose: func.isRequired,\r\n  children: element.isRequired,\r\n  open: bool.isRequired,\r\n  title: string\r\n};\r\n\r\nAppDialog.defaultProps = {\r\n  title: ''\r\n};\r\n\r\nexport default AppDialog;\r\n","const DefaultWidget = () => {\r\n  return null;\r\n};\r\n\r\nexport default DefaultWidget;\r\n","import React from 'react';\r\nimport Iframe from 'react-iframe';\r\nimport { string } from 'prop-types';\r\n\r\nconst IframeEmbed = props => {\r\n  const { url } = props;\r\n\r\n  return <Iframe {...props} url={url} />;\r\n};\r\n\r\nIframeEmbed.propTypes = {\r\n  url: string.isRequired\r\n};\r\n\r\nexport default IframeEmbed;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { Button, FormControl, Typography, IconButton } from '@material-ui/core';\r\n\r\nimport IframeEmbed from '../IframeEmbed';\r\nimport { setSize } from '../../helpers';\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst FullWidthButtonOutlined = props => (\r\n  <Button {...props} fullWidth variant=\"outlined\" target=\"_blank\" />\r\n);\r\n\r\nexport const WidgetButton = styled(FullWidthButtonOutlined)`\r\n  margin-top: auto;\r\n`;\r\n\r\nexport const WidgetIconButton = styled(IconButton)`\r\n  border-radius: 0;\r\n  height: 100%;\r\n  left: 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 100%;\r\n`;\r\n\r\nexport const Caption = props => (\r\n  <StyledTypography {...props} variant=\"caption\" paragraph />\r\n);\r\n\r\nexport const CaptionWithPointer = styled(Caption)`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StyledFieldset = styled(FormControl)`\r\n  display: flex;\r\n  margin-bottom: 32px;\r\n  min-width: 300px;\r\n`;\r\n\r\nexport const StyledIframe = props => (\r\n  <IframeEmbed {...props} frameBorder={0} allowFullScreen height=\"100%\" />\r\n);\r\n\r\nexport const StyledFormControlForDropdown = styled(FormControl)`\r\n  display: flex;\r\n  margin-bottom: 12px;\r\n  min-width: 300px;\r\n`;\r\n\r\nexport const StyledTitle = styled(Typography)`\r\n  align-self: center;\r\n  flex-grow: 1;\r\n  font-size: 2rem;\r\n  margin-left: 1rem;\r\n  margin-top: 1rem;\r\n  overflow: hidden;\r\n  padding-right: 2rem;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n\r\n  &::after {\r\n    background-color: #ff8a65;\r\n    content: '';\r\n    display: block;\r\n    height: 2px;\r\n    margin-top: ${setSize(2)};\r\n    margin-left: 3px;\r\n    width: ${setSize(10)};\r\n  }\r\n`;\r\n\r\nexport const StyledFormControl = styled(FormControl)`\r\n  margin: ${setSize(1)};\r\n  min-width: 120px;\r\n  max-width: 300px;\r\n`;\r\n\r\nexport const StyledPopoverText = styled(Typography)`\r\n  background: #fff;\r\n  color: #000;\r\n  padding: 1rem;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Caption } from '../../styled';\r\n\r\nconst ExampleWidget = ({ serverTime }) => {\r\n  const ts = serverTime ? new Date(serverTime).toLocaleString() : '';\r\n\r\n  return <Caption>{ts}</Caption>;\r\n};\r\n\r\nexport default ExampleWidget;\r\n","import React from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Caption, WidgetButton } from '../../styled';\r\n\r\nconst JenkinsJobWidget = ({\r\n  branch,\r\n  displayName,\r\n  duration,\r\n  timestamp,\r\n  url\r\n}) => {\r\n  const ts = timestamp ? new Date(timestamp).toLocaleString() : '';\r\n  const dur = duration ? `${duration / 1000} [s]` : '';\r\n\r\n  return (\r\n    <>\r\n      <Caption>{ts}</Caption>\r\n      <Caption>Duration: {dur}</Caption>\r\n      <Caption>{branch}</Caption>\r\n      <WidgetButton href={url}>{displayName}</WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nJenkinsJobWidget.propTypes = {\r\n  duration: number.isRequired,\r\n  displayName: string.isRequired,\r\n  url: string.isRequired,\r\n  timestamp: number.isRequired,\r\n  branch: string\r\n};\r\n\r\nJenkinsJobWidget.defaultProps = {\r\n  branch: 'unknown'\r\n};\r\n\r\nexport default JenkinsJobWidget;\r\n","import React from 'react';\r\nimport { number, string, object } from 'prop-types';\r\n\r\nimport { Caption, WidgetButton } from '../../styled';\r\n\r\nconst SonarQubeWidget = props => {\r\n  const { metrics, id, url, version, date } = props;\r\n  const ts = date ? new Date(Date.parse(date)).toLocaleString() : '';\r\n\r\n  return (\r\n    <>\r\n      <Caption>{ts}</Caption>\r\n      <Caption>Version: {version}</Caption>\r\n      {Object.entries(metrics).map(([metric, val]) => (\r\n        <Caption key={metric}>\r\n          {metric.replace('_', ' ')}: {val}\r\n        </Caption>\r\n      ))}\r\n      <WidgetButton href={url}>#{id}</WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nSonarQubeWidget.propTypes = {\r\n  metrics: object,\r\n  id: number.isRequired,\r\n  url: string.isRequired,\r\n  version: string,\r\n  date: string\r\n};\r\n\r\nSonarQubeWidget.defaultProps = {\r\n  metrics: {},\r\n  version: '-',\r\n  date: ''\r\n};\r\n\r\nexport default SonarQubeWidget;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport const StyledCircularProgress = styled(CircularProgress)`\r\n  margin-left: 8px;\r\n`;\r\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { StyledCircularProgress } from './styled';\n\nconst Loader = ({ text, ...other }) => (\n  <>\n    <Typography variant=\"caption\">{text}</Typography>\n    <StyledCircularProgress {...other} />\n  </>\n);\n\nexport default Loader;\n","import React, { useState } from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Popover } from '@material-ui/core';\r\nimport {\r\n  Caption,\r\n  CaptionWithPointer,\r\n  WidgetButton,\r\n  StyledPopoverText\r\n} from '../../styled';\r\nimport Loader from '../../Loader';\r\n\r\nconst ServiceCheckWidget = props => {\r\n  const {\r\n    statusCode,\r\n    statusMessage,\r\n    expectedStatusCode,\r\n    body,\r\n    expectedResponseBody,\r\n    url\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const errorStatus = expectedStatusCode !== statusCode;\r\n  const statusCodeMessage = errorStatus\r\n    ? `${expectedStatusCode} expected, got ${statusCode}`\r\n    : statusCode;\r\n  const errorBody = !expectedResponseBody && expectedResponseBody !== body;\r\n  const bodyMessage = errorBody ? 'FAIL' : 'OK';\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const popoverOpen = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      {errorStatus && <Caption>{statusMessage}</Caption>}\r\n      <Caption>\r\n        <WidgetButton href={url}>\r\n          {!statusCode ? (\r\n            <Loader text=\"Pending update\" size={20} />\r\n          ) : (\r\n            statusCodeMessage\r\n          )}\r\n        </WidgetButton>\r\n      </Caption>\r\n\r\n      {expectedResponseBody && (\r\n        <>\r\n          <CaptionWithPointer title={body} onClick={handleClick}>\r\n            Response: {bodyMessage}\r\n          </CaptionWithPointer>\r\n          <Popover\r\n            open={popoverOpen}\r\n            onClose={handlePopoverClose}\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left'\r\n            }}\r\n          >\r\n            <StyledPopoverText>{body}</StyledPopoverText>\r\n          </Popover>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nServiceCheckWidget.propTypes = {\r\n  statusCode: number,\r\n  statusMessage: string,\r\n  timestamp: number,\r\n  expectedStatusCode: number,\r\n  body: string,\r\n  expectedResponseBody: string\r\n};\r\n\r\nServiceCheckWidget.defaultProps = {\r\n  statusCode: 0,\r\n  statusMessage: '',\r\n  expectedStatusCode: 200,\r\n  body: '',\r\n  expectedResponseBody: '',\r\n  timestamp: 0\r\n};\r\n\r\nexport default ServiceCheckWidget;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const TypographyVariant = styled(Typography)`\r\n  height: 100%;\r\n`;\r\n\r\nexport const CenterWrapper = styled.div`\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledPre = styled.pre`\r\n  font-family: inherit;\r\n`;\r\n\r\nexport const RotatedStyledPre = styled(StyledPre)`\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nexport const OverflowingText = component => styled(component)`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const SetWidth = (component, componentWidth) => styled(component)`\r\n  min-width: ${componentWidth}px;\r\n  max-width: ${componentWidth}px;\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport { useSize } from 'react-hook-size';\r\nimport { bool, string } from 'prop-types';\r\n\r\nimport {\r\n  TypographyVariant,\r\n  CenterWrapper,\r\n  StyledPre,\r\n  RotatedStyledPre,\r\n  OverflowingText,\r\n  SetWidth\r\n} from './styled';\r\n\r\nexport const ModifiedWidth = (component, height) => {\r\n  if (height) {\r\n    return SetWidth(component, height);\r\n  }\r\n\r\n  return component;\r\n};\r\n\r\nconst TruncatedText = ({ isVertical, parentDimensions, children }) => {\r\n  let TruncatedPre = null;\r\n\r\n  if (isVertical && parentDimensions !== null) {\r\n    const { height } = parentDimensions;\r\n    const ModifiedPre = ModifiedWidth(RotatedStyledPre, height);\r\n    TruncatedPre = OverflowingText(ModifiedPre);\r\n  } else {\r\n    TruncatedPre = OverflowingText(StyledPre);\r\n  }\r\n\r\n  return <TruncatedPre>{children}</TruncatedPre>;\r\n};\r\n\r\nconst TextWidget = ({ text, textSize, isVertical }) => {\r\n  const targetRef = useRef();\r\n  const centerWrapperDimensions = useSize(targetRef);\r\n\r\n  return (\r\n    <TypographyVariant variant={textSize}>\r\n      <CenterWrapper ref={targetRef}>\r\n        <TruncatedText\r\n          isVertical={isVertical}\r\n          parentDimensions={centerWrapperDimensions}\r\n        >\r\n          {text}\r\n        </TruncatedText>\r\n      </CenterWrapper>\r\n    </TypographyVariant>\r\n  );\r\n};\r\n\r\nTextWidget.propTypes = {\r\n  text: string.isRequired,\r\n  textSize: string.isRequired,\r\n  isVertical: bool.isRequired\r\n};\r\n\r\nexport default TextWidget;\r\n","import React from 'react';\r\nimport { string } from 'prop-types';\r\nimport { Caption, WidgetButton } from '../../styled';\r\n\r\nconst BambooDeploymentWidget = ({\r\n  url,\r\n  releaseName,\r\n  lifeCycleState,\r\n  deploymentState\r\n}) => {\r\n  return (\r\n    <>\r\n      <Caption>Artifact: {releaseName}</Caption>\r\n      <Caption>Deployment state: {deploymentState}</Caption>\r\n      <Caption>Lifecycle state: {lifeCycleState}</Caption>\r\n      <WidgetButton href={url}>Deployment logs</WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nBambooDeploymentWidget.propTypes = {\r\n  url: string.isRequired,\r\n  releaseName: string.isRequired,\r\n  lifeCycleState: string.isRequired,\r\n  deploymentState: string.isRequired\r\n};\r\n\r\nexport default BambooDeploymentWidget;\r\n","import React from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Caption, WidgetButton } from '../../styled';\r\n\r\nconst BambooPlanWidget = ({ url, number, lifeCycleState }) => {\r\n  return (\r\n    <>\r\n      <Caption>State: {lifeCycleState}</Caption>\r\n      <WidgetButton href={url}>#{number}</WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nBambooPlanWidget.propTypes = {\r\n  url: string.isRequired,\r\n  number: number.isRequired,\r\n  lifeCycleState: string.isRequired\r\n};\r\n\r\nexport default BambooPlanWidget;\r\n","import moment from 'moment-timezone';\r\n\r\nexport const getDateTime = (timezone, format) => {\r\n  return moment.tz(new Date(), timezone).format(format);\r\n};\r\n\r\nconst getGmtTimezones = () => {\r\n  const allTimezones = moment.tz.names();\r\n  const duplicatedTimezones = ['Etc/GMT', 'Etc/GMT+0', 'Etc/GMT0'];\r\n\r\n  const gmtSort = (a, b) => {\r\n    const parts = {\r\n      a: a.split('T'),\r\n      b: b.split('T')\r\n    };\r\n    return parseInt(parts.b[1]) - parseInt(parts.a[1]);\r\n  };\r\n\r\n  const gmtTimezones = allTimezones\r\n    .filter(\r\n      timezone =>\r\n        timezone.includes('Etc/GMT') && !duplicatedTimezones.includes(timezone)\r\n    )\r\n    .sort(gmtSort)\r\n    .map(timezone => {\r\n      const displayName = timezone\r\n        .replace('Etc/', '')\r\n        .replace(/[+-]/g, c => (c === '+' ? '-' : '+')); //swap '+' sign with '-' sign to preserve correct time\r\n      return {\r\n        display: displayName,\r\n        value: timezone\r\n      };\r\n    });\r\n\r\n  gmtTimezones.splice(0, 0, {\r\n    display: 'Current time zone',\r\n    value: moment.tz.guess()\r\n  });\r\n\r\n  return gmtTimezones;\r\n};\r\n\r\nexport const GMT_TIMEZONES = getGmtTimezones();\r\n\r\nexport const DATE_FORMATS = [\r\n  {\r\n    display: '29/08/2019',\r\n    value: 'DD/MM/YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29/08/2019',\r\n    value: 'dddd, DD/MM/YYYY'\r\n  },\r\n  {\r\n    display: '29 Aug 2019',\r\n    value: 'DD MMM YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29 Aug 2019',\r\n    value: 'dddd, DD MMM YYYY'\r\n  },\r\n  {\r\n    display: '29th August 2019',\r\n    value: 'Do MMMM YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29th August 2019',\r\n    value: 'dddd, Do MMMM YYYY'\r\n  }\r\n];\r\n\r\nexport const TIME_FORMATS = [\r\n  {\r\n    display: '12-hour (AM/PM)',\r\n    value: 'h:mm:ss a'\r\n  },\r\n  {\r\n    display: '24-hour',\r\n    value: 'HH:mm:ss'\r\n  }\r\n];\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const TimePre = styled.pre`\r\n  font-weight: bold;\r\n  font-family: inherit;\r\n  font-size: 180%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const DatePre = styled.pre`\r\n  font-family: inherit;\r\n  margin: 0.25em 0 auto;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { string } from 'prop-types';\r\n\r\nimport { useInterval } from '../../../../hooks';\r\nimport { getDateTime } from './helpers';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport { DatePre, TimePre } from './styled';\r\n\r\nconst WorldClockWidget = props => {\r\n  const {\r\n    timeZoneId,\r\n    dateFormat,\r\n    timeFormat,\r\n    displayDate,\r\n    displayTime,\r\n    textSize\r\n  } = props;\r\n\r\n  const date = getDateTime(timeZoneId, dateFormat);\r\n\r\n  const initTime = getDateTime(timeZoneId, timeFormat);\r\n  const [time, setTime] = useState(initTime);\r\n\r\n  useInterval(() => {\r\n    setTime(getDateTime(timeZoneId, timeFormat));\r\n  }, 1000);\r\n\r\n  return (\r\n    <Typography variant={textSize}>\r\n      {displayTime && <TimePre>{time}</TimePre>}\r\n      {displayDate && <DatePre>{date}</DatePre>}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nWorldClockWidget.propTypes = {\r\n  timeZoneId: string.isRequired,\r\n  dateFormat: string.isRequired,\r\n  timeFormat: string.isRequired,\r\n  textSize: string\r\n};\r\n\r\nWorldClockWidget.defaultProps = {\r\n  textSize: 'h5'\r\n};\r\n\r\nexport default WorldClockWidget;\r\n","const getNextStatus = status => {\r\n  const statusArray = ['OK', 'FAIL', 'UNKNOWN'];\r\n  const statusIndex = statusArray.findIndex(element => element === status);\r\n\r\n  let nextStatusIndex = 0;\r\n\r\n  if (statusIndex !== -1) {\r\n    nextStatusIndex =\r\n      statusIndex < statusArray.length - 1 ? statusIndex + 1 : 0;\r\n  } else {\r\n    nextStatusIndex = statusArray.findIndex(element => element === 'UNKNOWN');\r\n  }\r\n\r\n  return statusArray[nextStatusIndex];\r\n};\r\n\r\nexport default getNextStatus;\r\n","import React from 'react';\r\nimport {\r\n  Check,\r\n  Close,\r\n  IndeterminateCheckBoxOutlined\r\n} from '@material-ui/icons';\r\n\r\nconst StatusIcon = ({ status, size }) => {\r\n  const iconComponents = {\r\n    OK: Check,\r\n    FAIL: Close,\r\n    UNKNOWN: IndeterminateCheckBoxOutlined\r\n  };\r\n\r\n  const IconComponent =\r\n    status in iconComponents\r\n      ? iconComponents[status]\r\n      : iconComponents['UNKNOWN'];\r\n\r\n  return <IconComponent fontSize={size} />;\r\n};\r\n\r\nexport default StatusIcon;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setWidgetState } from '../../../../actions/thunks';\r\nimport getNextStatus from './helpers';\r\n\r\nimport { WidgetIconButton } from '../../../styled';\r\nimport StatusIcon from '../../../StatusIcon';\r\n\r\nconst CheckboxWidget = props => {\r\n  const { id } = props;\r\n  const { status } = useSelector(({ widgets }) => widgets.widgetsById[id]);\r\n  const dispatch = useDispatch();\r\n\r\n  const ariaCheckedStatusMap = {\r\n    OK: true,\r\n    FAIL: false,\r\n    UNKNOWN: 'mixed'\r\n  };\r\n\r\n  const handleChangeStatus = () => {\r\n    dispatch(\r\n      setWidgetState({\r\n        id,\r\n        status: getNextStatus(status)\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <WidgetIconButton\r\n      aria-label=\"Toggle status\"\r\n      aria-checked={ariaCheckedStatusMap[status]}\r\n      data-cy=\"checkbox\"\r\n      onClick={handleChangeStatus}\r\n    >\r\n      <StatusIcon size=\"large\" status={status} />\r\n    </WidgetIconButton>\r\n  );\r\n};\r\n\r\nexport default CheckboxWidget;\r\n","import React from 'react';\r\nimport { object } from 'prop-types';\r\n\r\nimport { Link } from '@material-ui/core';\r\nimport { Caption } from '../../../styled';\r\n\r\nimport { AEM_HEALTH_CHECKS } from '../../../../constants';\r\n\r\nconst AemHealthcheckWidget = ({ healthChecks }) => {\r\n  return (\r\n    <>\r\n      {Object.entries(healthChecks).map(([name, data]) => (\r\n        <Link href={data['url']} target=\"_blank\">\r\n          <Caption key={name}>\r\n            {AEM_HEALTH_CHECKS[name]}: {data['status']}\r\n          </Caption>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nAemHealthcheckWidget.propTypes = {\r\n  healthChecks: object\r\n};\r\n\r\nAemHealthcheckWidget.defaultProps = {\r\n  healthChecks: {}\r\n};\r\n\r\nexport default AemHealthcheckWidget;\r\n","const HTTP = 'http://';\r\nconst WWW = 'www';\r\n\r\nexport const attachHttp = url => {\r\n  if (url.startsWith(WWW)) {\r\n    return HTTP + url;\r\n  }\r\n  return url;\r\n};\r\n","import DefaultWidget from './types/DefaultWidget';\r\nimport ExampleWidget from './types/ExampleWidget';\r\nimport JenkinsJobWidget from './types/JenkinsJobWidget';\r\nimport SonarQubeWidget from './types/SonarQubeWidget';\r\nimport ServiceCheckWidget from './types/ServiceCheckWidget';\r\nimport TextWidget from './types/TextWidget';\r\nimport BambooDeploymentWidget from './types/BambooDeploymentWidget';\r\nimport BambooPlanWidget from './types/BambooPlanWidget';\r\nimport WorldClockWidget from './types/WorldClockWidget';\r\nimport CheckboxWidget from './types/CheckboxWidget';\r\nimport AemHealthcheckWidget from './types/AemHealthcheckWidget';\r\nimport IframeEmbedWidget from './types/IframeEmbedWidget';\r\n\r\nconst widgetTypes = {\r\n  DefaultWidget: {\r\n    name: 'Default',\r\n    component: DefaultWidget\r\n  },\r\n  ExampleWidget: {\r\n    name: 'Example',\r\n    component: ExampleWidget,\r\n    dialogFields: ['SchedulePeriod'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  JenkinsJobWidget: {\r\n    name: 'Jenkins Job',\r\n    component: JenkinsJobWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'Path'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  SonarQubeWidget: {\r\n    name: 'SonarQube',\r\n    component: SonarQubeWidget,\r\n    dialogFields: [\r\n      'EndpointField',\r\n      'SchedulePeriod',\r\n      'Key',\r\n      'IdNumber',\r\n      'SonarQubeMetricsInput'\r\n    ],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 },\r\n      SonarQubeMetricsInput: { minArrayLength: 1 }\r\n    }\r\n  },\r\n  ServiceCheckWidget: {\r\n    name: 'Service Check',\r\n    component: ServiceCheckWidget,\r\n    dialogFields: [\r\n      'SchedulePeriod',\r\n      'RequestMethod',\r\n      'EndpointField',\r\n      'Path',\r\n      'RequestBody',\r\n      'ResponseBody',\r\n      'StatusCode'\r\n    ],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  TextWidget: {\r\n    name: 'Text',\r\n    component: TextWidget,\r\n    dialogFields: ['Text', 'TextSize', 'TextOrientation'],\r\n    validationConstraints: {\r\n      Text: { max: 240 }\r\n    }\r\n  },\r\n  BambooPlanWidget: {\r\n    name: 'Bamboo Plan',\r\n    component: BambooPlanWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'IdString'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  BambooDeploymentWidget: {\r\n    name: 'Bamboo Environment Deployment',\r\n    component: BambooDeploymentWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'IdString'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  WorldClockWidget: {\r\n    name: 'World Clock',\r\n    component: WorldClockWidget,\r\n    dialogFields: [\r\n      'TimeZoneId',\r\n      'DateFormat',\r\n      'TimeFormat',\r\n      'DisplayDate',\r\n      'DisplayTime',\r\n      'TextSize'\r\n    ]\r\n  },\r\n  IframeEmbedWidget: {\r\n    name: 'Iframe Embed',\r\n    component: IframeEmbedWidget,\r\n    dialogFields: ['UrlForContent']\r\n  },\r\n  CheckboxWidget: {\r\n    name: 'Checkbox',\r\n    component: CheckboxWidget,\r\n    showUpdateTime: true\r\n  },\r\n  AemHealthcheckWidget: {\r\n    name: 'AEM Healthcheck',\r\n    component: AemHealthcheckWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'AemHealthcheckInput'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 },\r\n      AemHealthcheckInput: { minArrayLength: 1 }\r\n    }\r\n  }\r\n};\r\n\r\nexport default widgetTypes;\r\n","import React from 'react';\r\nimport { string } from 'prop-types';\r\n\r\nimport { attachHttp } from './helpers';\r\n\r\nimport { StyledIframe } from '../../../styled';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst IframeEmbedWidget = ({ url }) => {\r\n  if (url) {\r\n    return <StyledIframe url={attachHttp(url)} />;\r\n  } else {\r\n    return <Typography variant=\"h5\">URL is blank</Typography>;\r\n  }\r\n};\r\n\r\nIframeEmbedWidget.propTypes = {\r\n  url: string.isRequired\r\n};\r\n\r\nexport default IframeEmbedWidget;\r\n","import { sortByKey } from '../../../helpers';\r\n\r\nexport const parseWidgetTypes = widgetTypes => {\r\n  const sortedWidgetTypes = sortByKey(widgetTypes, 'name');\r\n\r\n  return Object.entries(sortedWidgetTypes).reduce((obj, [type, { name }]) => {\r\n    return [\r\n      ...obj,\r\n      {\r\n        display: name,\r\n        value: type\r\n      }\r\n    ];\r\n  }, []);\r\n};\r\n\r\nexport const transformMinValueToHalf = () => {\r\n  let prevValue;\r\n\r\n  return value => {\r\n    if (value < 1) {\r\n      return (prevValue = 0.5);\r\n    }\r\n\r\n    if (prevValue === 0.5) {\r\n      return (prevValue = 1);\r\n    }\r\n\r\n    return (prevValue =\r\n      value < prevValue ? Math.floor(value) : Math.ceil(value));\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { FormControl, InputLabel, Input, Select } from '@material-ui/core';\r\nimport { getToken } from '../utils/auth';\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nconst DropdownField = props => {\r\n  const {\r\n    onChange,\r\n    id,\r\n    label,\r\n    value,\r\n    name,\r\n    children,\r\n    dropdownItems,\r\n    itemsUrl,\r\n    dataCy,\r\n    ...other\r\n  } = props;\r\n  const initialLoaded = !itemsUrl;\r\n  const [options, setOptions] = useState(dropdownItems);\r\n  const [loaded, setLoaded] = useState(initialLoaded);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  useEffect(() => {\r\n    if (itemsUrl) {\r\n      const init = isAuthenticated\r\n        ? {\r\n            headers: {\r\n              Authorization: getToken()\r\n            }\r\n          }\r\n        : undefined;\r\n\r\n      fetch(itemsUrl, init)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setOptions(data);\r\n          setLoaded(true);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  }, [itemsUrl, isAuthenticated]);\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel shrink htmlFor={id}>\r\n        {label}\r\n      </InputLabel>\r\n      <Select\r\n        onChange={onChange}\r\n        value={value}\r\n        input={<Input name={name} id={id} />}\r\n        name={name}\r\n        SelectDisplayProps={other}\r\n        data-cy={dataCy}\r\n      >\r\n        {loaded && children(options)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nDropdownField.defaultProps = {\r\n  value: ''\r\n};\r\n\r\nexport default DropdownField;\r\n","import React from 'react';\r\nimport { string } from 'prop-types';\r\n\r\nimport { MenuItem } from '@material-ui/core';\r\nimport DropdownField from '../../DropdownField';\r\n\r\nconst EndpointInput = props => {\r\n  return (\r\n    <DropdownField {...props}>\r\n      {endpoints =>\r\n        endpoints.map(({ id, label }) => (\r\n          <MenuItem key={id} value={id}>\r\n            {label}\r\n          </MenuItem>\r\n        ))\r\n      }\r\n    </DropdownField>\r\n  );\r\n};\r\n\r\nEndpointInput.propTypes = {\r\n  value: string.isRequired\r\n};\r\n\r\nexport default EndpointInput;\r\n","import React from 'react';\r\nimport { node, any } from 'prop-types';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: node,\r\n  index: any.isRequired,\r\n  value: any.isRequired\r\n};\r\n\r\nexport default TabPanel;\r\n","import React from 'react';\r\n\r\nconst ValidationMessages = ({ className, messages, ...others }) => (\r\n  <>\r\n    {messages !== undefined && (\r\n      <ul className={className} {...others}>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message}</li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default ValidationMessages;\r\n","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst CancelButton = ({ handleCancelClick, className, ...other }) => (\r\n  <Button\r\n    onClick={handleCancelClick}\r\n    className={className}\r\n    variant=\"contained\"\r\n    color=\"secondary\"\r\n    {...other}\r\n  >\r\n    Cancel\r\n  </Button>\r\n);\r\n\r\nexport default CancelButton;\r\n","import styled from '@emotion/styled/macro';\r\nimport { TextField, Tabs } from '@material-ui/core';\r\nimport TabPanel from '../TabPanel';\r\nimport ValidationMessages from '../ValidationMessages';\r\nimport CancelButton from '../CancelButton';\r\n\r\nexport const StyledNumberField = styled(TextField)`\r\n  flex-basis: calc(50% - 18px);\r\n`;\r\n\r\nexport const StyledTabPanel = styled(TabPanel)`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const StyledTabs = styled(Tabs)`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const StyledValidationMessages = styled(ValidationMessages)`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst NumberInput = ({ min, step, error, dataCy, ...other }) => {\r\n  return (\r\n    <TextField\r\n      type=\"number\"\r\n      inputProps={{ min, step, 'data-cy': dataCy }}\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst TextInput = ({ error, dataCy, values, ...other }) => {\r\n  return (\r\n    <TextField\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      inputProps={{ 'data-cy': dataCy }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { ALL_SONARQUBE_METRICS } from '../../../constants';\r\n\r\nimport {\r\n  Input,\r\n  InputLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n  ListItemText,\r\n  Select,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\n\r\nimport { StyledFormControl } from './../../styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst SonarQubeMetricsInput = ({ onChange, value, error, dataCy }) => {\r\n  const inputId = 'sonarqube-metrics-input';\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledFormControl error={hasError(error)} theme={theme}>\r\n      <InputLabel htmlFor={inputId}>Metrics</InputLabel>\r\n      <Select\r\n        multiple\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input id={inputId} />}\r\n        renderValue={value => `${value.length} selected`}\r\n        data-cy={dataCy}\r\n      >\r\n        {ALL_SONARQUBE_METRICS.map(name => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={value.includes(name)} />\r\n            <ListItemText primary={name} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {hasError(error) && <FormHelperText>{error}</FormHelperText>}\r\n    </StyledFormControl>\r\n  );\r\n};\r\n\r\nexport default SonarQubeMetricsInput;\r\n","import React from 'react';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nimport DropdownField from '../../DropdownField';\r\nimport { StyledFormControlForDropdown } from '../../styled';\r\n\r\n/**\r\n * Displays dropdown field using passed array of objects with the following properties: display, value.\r\n * Example: [\r\n *  {\r\n *      display: \"name1\"\r\n *      value: \"value1\"\r\n *  },\r\n *  {\r\n *      display: \"name2\"\r\n *      value: \"value2\"\r\n *  }\r\n * ]\r\n */\r\nconst DisplayValueSelect = props => {\r\n  return (\r\n    <StyledFormControlForDropdown>\r\n      <DropdownField {...props}>\r\n        {items =>\r\n          items.map(item => (\r\n            <MenuItem key={item.value} value={item.value}>\r\n              {item.display}\r\n            </MenuItem>\r\n          ))\r\n        }\r\n      </DropdownField>\r\n    </StyledFormControlForDropdown>\r\n  );\r\n};\r\n\r\nexport default DisplayValueSelect;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst MultilineTextInput = ({ error, dataCy, values, ...other }) => {\r\n  return (\r\n    <TextField\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      multiline={true}\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      inputProps={{ 'data-cy': dataCy }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MultilineTextInput;\r\n","import React from 'react';\r\n\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\n\r\nconst CheckboxInput = ({ value, onChange, dataCy, ...other }) => (\r\n  <FormControlLabel\r\n    control={<Checkbox checked={value} onChange={onChange} data-cy={dataCy} />}\r\n    {...other}\r\n  />\r\n);\r\n\r\nexport default CheckboxInput;\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { AEM_HEALTH_CHECKS } from '../../../constants';\r\n\r\nimport {\r\n  Input,\r\n  InputLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n  ListItemText,\r\n  Select,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\nimport { StyledFormControl } from './../../styled';\r\n\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst AemHealthcheckInput = ({ onChange, value, error, dataCy }) => {\r\n  const theme = useTheme();\r\n  const inputId = 'aemhealthcheck-metrics-input';\r\n\r\n  return (\r\n    <StyledFormControl error={hasError(error)} theme={theme}>\r\n      <InputLabel htmlFor={inputId}>Health Checks</InputLabel>\r\n      <Select\r\n        multiple\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input id={inputId} />}\r\n        renderValue={value => `${value.length} selected`}\r\n        data-cy={dataCy}\r\n      >\r\n        {Object.entries(AEM_HEALTH_CHECKS).map(([name, label]) => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={value.includes(name)} />\r\n            <ListItemText primary={label} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {hasError(error) && (\r\n        <FormHelperText data-cy={`${dataCy}-error`}>{error}</FormHelperText>\r\n      )}\r\n    </StyledFormControl>\r\n  );\r\n};\r\n\r\nexport default AemHealthcheckInput;\r\n","import React from 'react';\r\nimport { elementType, func, string } from 'prop-types';\r\n\r\nconst conditionallyHidden = (Component, conditionField, condition) => ({\r\n  values,\r\n  ...other\r\n}) => {\r\n  if (values[conditionField] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return condition(values[conditionField]) ? (\r\n    <Component values={values} {...other} />\r\n  ) : null;\r\n};\r\n\r\nconditionallyHidden.propTypes = {\r\n  Component: elementType,\r\n  condition: func,\r\n  conditionField: string\r\n};\r\n\r\nexport default conditionallyHidden;\r\n","import React from 'react';\r\n\r\nimport { FormControlLabel, FormControl, Switch } from '@material-ui/core';\r\n\r\nconst SwitchInput = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  checkboxValue,\r\n  dataCy,\r\n  ...other\r\n}) => {\r\n  return (\r\n    <FormControl margin=\"normal\">\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={value}\r\n            onChange={onChange}\r\n            color=\"primary\"\r\n            value={checkboxValue}\r\n            inputProps={{ 'data-cy': dataCy }}\r\n            {...other}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SwitchInput;\r\n","import styled from '@emotion/styled/macro';\r\nimport NumberInput from './NumberInput';\r\n\r\nexport const StyledNumberInput = styled(NumberInput)`\r\n  flex-basis: calc(50% - 18px);\r\n`;\r\n","import { string, number, boolean, array } from 'yup';\r\n\r\nimport {\r\n  DATE_FORMATS,\r\n  GMT_TIMEZONES,\r\n  TIME_FORMATS\r\n} from '../types/WorldClockWidget/helpers';\r\nimport { parseWidgetTypes, transformMinValueToHalf } from './helpers';\r\nimport {\r\n  REQUEST_METHODS,\r\n  TEXT_SIZES,\r\n  validationMessages as vm\r\n} from '../../../constants';\r\nimport { uniqueTitleTestCreator } from '../../validation';\r\nimport widgetTypes from '../../widgets';\r\n\r\nimport EndpointInput from './EndpointInput';\r\nimport NumberInput from './NumberInput';\r\nimport TextInput from './TextInput';\r\nimport SonarQubeMetricsInput from './SonarQubeMetricsInput';\r\nimport DisplayValueSelect from './DisplayValueSelect';\r\nimport MultilineTextInput from './MultilineTextInput';\r\nimport CheckboxInput from './CheckboxInput';\r\nimport AemHealthcheckInput from './AemHealthcheckInput';\r\nimport conditionallyHidden from './conditionallyHidden';\r\nimport SwitchInput from './SwitchInput';\r\nimport { StyledNumberInput } from './styled';\r\n\r\nconst dialogFields = {\r\n  WidgetTypeField: {\r\n    component: DisplayValueSelect,\r\n    name: 'type',\r\n    label: 'Type',\r\n    dropdownItems: parseWidgetTypes(widgetTypes),\r\n    validator: () => string().required(vm.FIELD_REQUIRED())\r\n  },\r\n  TitleField: {\r\n    component: TextInput,\r\n    name: 'title',\r\n    label: 'Title',\r\n    initialValue: 'Title',\r\n    validator: ({ max }) =>\r\n      string()\r\n        .trim()\r\n        .max(max, vm.STRING_LENGTH('Title', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  UniqueTitleField: {\r\n    component: TextInput,\r\n    name: 'title',\r\n    label: 'Title',\r\n    initialValue: 'Title',\r\n    validator: ({ max, boardId, boards }) =>\r\n      string()\r\n        .trim()\r\n        .max(max, vm.STRING_LENGTH('Title', max))\r\n        .test(uniqueTitleTestCreator(boardId, boards))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  ColumnField: {\r\n    component: NumberInput,\r\n    name: 'columns',\r\n    label: 'Columns',\r\n    initialValue: 1,\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Columns', min))\r\n        .max(max, vm.NUMBER_MAX('Columns', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  ColumnFieldSm: {\r\n    component: StyledNumberInput,\r\n    name: 'columns',\r\n    label: 'Columns',\r\n    initialValue: 1,\r\n    valueUpdater: transformMinValueToHalf(),\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Columns', min))\r\n        .max(max, vm.NUMBER_MAX('Columns', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  RowFieldSm: {\r\n    component: StyledNumberInput,\r\n    name: 'rows',\r\n    label: 'Rows',\r\n    initialValue: 1,\r\n    valueUpdater: transformMinValueToHalf(),\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Rows', min))\r\n        .max(max, vm.NUMBER_MAX('Rows', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  NewLineField: {\r\n    component: SwitchInput,\r\n    name: 'goNewLine',\r\n    label: 'Go to new line',\r\n    checkboxValue: 'goNewLine',\r\n    validator: () => boolean()\r\n  },\r\n  DisabledField: {\r\n    component: SwitchInput,\r\n    name: 'disabled',\r\n    label: 'Disabled',\r\n    checkboxValue: 'disabled',\r\n    validator: () => boolean()\r\n  },\r\n  AutoSwitchField: {\r\n    component: SwitchInput,\r\n    name: 'autoSwitch',\r\n    label: 'Auto Switch',\r\n    checkboxValue: 'autoSwitch',\r\n    validator: () => boolean()\r\n  },\r\n  SwitchInterval: {\r\n    component: conditionallyHidden(NumberInput, 'autoSwitch', value => value),\r\n    name: 'switchInterval',\r\n    label: 'Switch Interval',\r\n    validator: ({ min }) =>\r\n      number().when('autoSwitch', {\r\n        is: true,\r\n        then: number()\r\n          .min(min, vm.NUMBER_MIN('Switch interval', min))\r\n          .required(),\r\n        otherwise: number().notRequired()\r\n      })\r\n  },\r\n  EndpointField: {\r\n    component: EndpointInput,\r\n    name: 'endpoint',\r\n    label: 'Endpoint',\r\n    itemsUrl: '/api/endpoints',\r\n    validator: () => string()\r\n  },\r\n  SchedulePeriod: {\r\n    component: NumberInput,\r\n    name: 'schedulePeriod',\r\n    label: 'Schedule Period [sec] (if 0 will run once)',\r\n    min: 0,\r\n    step: 10,\r\n    initialValue: 120,\r\n    validator: ({ min }) =>\r\n      number().min(min, vm.NUMBER_MIN('Schedule period', min))\r\n  },\r\n  Path: {\r\n    component: TextInput,\r\n    name: 'path',\r\n    label: 'Path',\r\n    validator: () => string()\r\n  },\r\n  URL: {\r\n    component: TextInput,\r\n    name: 'url',\r\n    label: 'URL',\r\n    validator: () => string().url(vm.INVALID_URL())\r\n  },\r\n  UrlForContent: {\r\n    component: TextInput,\r\n    name: 'content.url',\r\n    label: 'URL',\r\n    validator: () => string().url(vm.INVALID_URL())\r\n  },\r\n  IdString: {\r\n    component: TextInput,\r\n    name: 'idString',\r\n    label: 'ID',\r\n    validator: () => string()\r\n  },\r\n  IdNumber: {\r\n    component: NumberInput,\r\n    name: 'idNumber',\r\n    label: 'ID',\r\n    step: 1,\r\n    validator: () => number()\r\n  },\r\n  Key: {\r\n    component: TextInput,\r\n    name: 'keyString',\r\n    label: 'Key',\r\n    validator: () => string()\r\n  },\r\n  SonarQubeMetricsInput: {\r\n    component: SonarQubeMetricsInput,\r\n    name: 'selectedMetrics',\r\n    initialValue: [\r\n      'blocker_violations',\r\n      'critical_violations',\r\n      'major_violations',\r\n      'minor_violations'\r\n    ],\r\n    validator: ({ minArrayLength = 0 }) =>\r\n      array()\r\n        .ensure()\r\n        .min(minArrayLength, vm.FIELD_MIN_ITEMS())\r\n        .of(string())\r\n  },\r\n  AemHealthcheckInput: {\r\n    component: AemHealthcheckInput,\r\n    name: 'selectedHealthChecks',\r\n    initialValue: [\r\n      'slingJobs',\r\n      'systemchecks',\r\n      'inactiveBundles',\r\n      'DiskSpaceHealthCheck'\r\n    ],\r\n    validator: ({ minArrayLength = 0 }) =>\r\n      array()\r\n        .ensure()\r\n        .min(minArrayLength, vm.FIELD_MIN_ITEMS())\r\n        .of(string())\r\n  },\r\n  StatusCode: {\r\n    component: NumberInput,\r\n    name: 'expectedStatusCode',\r\n    label: 'Expected Status Code',\r\n    min: 0,\r\n    step: 1,\r\n    initialValue: 200,\r\n    validator: () =>\r\n      number()\r\n        .lessThan(600)\r\n        .moreThan(99)\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  TimeZoneId: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.timeZoneId',\r\n    label: 'Timezone',\r\n    dropdownItems: GMT_TIMEZONES,\r\n    initialValue: GMT_TIMEZONES[0].value,\r\n    validator: () => string()\r\n  },\r\n  DateFormat: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.dateFormat',\r\n    label: 'Date Format',\r\n    dropdownItems: DATE_FORMATS,\r\n    initialValue: DATE_FORMATS[1].value,\r\n    validator: () => string()\r\n  },\r\n  TimeFormat: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.timeFormat',\r\n    label: 'Time Format',\r\n    dropdownItems: TIME_FORMATS,\r\n    initialValue: TIME_FORMATS[1].value,\r\n    validator: () => string()\r\n  },\r\n  DisplayDate: {\r\n    component: CheckboxInput,\r\n    name: 'content.displayDate',\r\n    label: 'Display date',\r\n    initialValue: true,\r\n    validator: () => boolean()\r\n  },\r\n  DisplayTime: {\r\n    component: CheckboxInput,\r\n    name: 'content.displayTime',\r\n    label: 'Display time',\r\n    initialValue: true,\r\n    validator: () => boolean()\r\n  },\r\n  Text: {\r\n    component: MultilineTextInput,\r\n    name: 'content.text',\r\n    label: 'Text',\r\n    validator: () => string()\r\n  },\r\n  RequestBody: {\r\n    component: MultilineTextInput,\r\n    name: 'body',\r\n    label: 'Request Body',\r\n    validator: () => string()\r\n  },\r\n  ResponseBody: {\r\n    component: MultilineTextInput,\r\n    name: 'expectedResponseBody',\r\n    label: 'Response Body Fragment',\r\n    validator: () => string()\r\n  },\r\n  TextSize: {\r\n    component: DisplayValueSelect,\r\n    name: 'content.textSize',\r\n    label: 'Text Size',\r\n    dropdownItems: TEXT_SIZES,\r\n    initialValue: TEXT_SIZES[3].value,\r\n    validator: () => string()\r\n  },\r\n  RequestMethod: {\r\n    component: DisplayValueSelect,\r\n    name: 'requestMethod',\r\n    label: 'Request Method',\r\n    dropdownItems: REQUEST_METHODS,\r\n    initialValue: REQUEST_METHODS[0].value,\r\n    validator: () => string()\r\n  },\r\n  TextOrientation: {\r\n    component: CheckboxInput,\r\n    name: 'content.isVertical',\r\n    label: 'Vertical Text',\r\n    initialValue: false,\r\n    validator: () => boolean()\r\n  }\r\n};\r\n\r\nexport default dialogFields;\r\n","import { object } from 'yup';\r\n\r\nimport { splitPropsGroupName } from '../../helpers';\r\n\r\nimport dialogFields from '../widgets/dialogFields';\r\nimport { validationMessages as vm } from '../../constants';\r\n\r\nexport const createValidationSchema = (fields, constraints) => {\r\n  const validators = Array.prototype\r\n    .concat(...fields)\r\n    .reduce((schema, fieldName) => {\r\n      const { name, validator } = dialogFields[fieldName];\r\n      const [groupName, propName] = splitPropsGroupName(name);\r\n      const constraint =\r\n        constraints[fieldName] !== undefined ? constraints[fieldName] : {};\r\n      let newSchema;\r\n\r\n      if (groupName) {\r\n        const groupSchema =\r\n          schema[groupName] !== undefined ? schema[groupName] : object({});\r\n\r\n        newSchema = {\r\n          ...schema,\r\n          [groupName]: groupSchema.shape({ [propName]: validator(constraint) })\r\n        };\r\n      } else {\r\n        newSchema = { ...schema, [propName]: validator(constraint) };\r\n      }\r\n\r\n      return newSchema;\r\n    }, {});\r\n\r\n  const newValidationSchema = object().shape(validators);\r\n\r\n  return newValidationSchema;\r\n};\r\n\r\nexport const uniqueTitleTestCreator = (boardId, boards) => ({\r\n  name: 'uniqueTitle',\r\n  params: { boards, boardId },\r\n  message: vm.UNIQUE_FIELD(),\r\n  exclusive: true,\r\n  test: title =>\r\n    boards.every(board => board.title !== title || board.id === boardId)\r\n});\r\n","import { createValidationSchema } from '../validation';\r\n\r\nimport widgetTypes from '../widgets';\r\n\r\nexport const createWidgetValidationSchema = (\r\n  type,\r\n  fields,\r\n  constraints = {}\r\n) => {\r\n  const widgetType = widgetTypes[type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const allFields = [...fields, ...dialogFieldNames];\r\n  const widgetConstraints =\r\n    widgetType && widgetType.validationConstraints\r\n      ? widgetType.validationConstraints\r\n      : {};\r\n\r\n  const allConstraints = { ...widgetConstraints, ...constraints };\r\n\r\n  return createValidationSchema(allFields, allConstraints);\r\n};\r\n","import React from 'react';\r\n\r\nimport { camelToKebab, createValueRef } from './helpers';\r\n\r\nimport { StyledFieldset } from '../styled';\r\nimport { Box } from '@material-ui/core';\r\nimport dialogFields from '../widgets/dialogFields';\r\n\r\nconst DynamicForm = ({ values, fields, handleChange, errors, rootName }) => {\r\n  const createField = field => {\r\n    const {\r\n      component: DialogField,\r\n      name,\r\n      initialValue = '',\r\n      valueUpdater,\r\n      validator,\r\n      ...dialogFieldProps\r\n    } = dialogFields[field];\r\n\r\n    const valueRef = createValueRef(values, initialValue, name);\r\n\r\n    return (\r\n      <DialogField\r\n        key={name}\r\n        values={values}\r\n        value={valueRef}\r\n        onChange={handleChange(name, valueUpdater)}\r\n        error={errors[name]}\r\n        dataCy={`${rootName}-${camelToKebab(name)}-input`}\r\n        {...dialogFieldProps}\r\n      />\r\n    );\r\n  };\r\n\r\n  const createGroupedFields = groupedFields => {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        {groupedFields.map(field => {\r\n          return createField(field);\r\n        })}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledFieldset component=\"fieldset\">\r\n        {fields.map(field => {\r\n          if (typeof field === 'string') {\r\n            return createField(field);\r\n          } else {\r\n            return createGroupedFields(field);\r\n          }\r\n        })}\r\n      </StyledFieldset>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n","import { splitPropsGroupName } from '../../helpers';\r\n\r\nexport const camelToKebab = string =>\r\n  string.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase();\r\n\r\nexport const createValueRef = (values, initialValue, name) => {\r\n  const [groupName, propName] = splitPropsGroupName(name);\r\n\r\n  if (groupName) {\r\n    if (!values[groupName]) {\r\n      values[groupName] = {};\r\n    }\r\n\r\n    if (values[groupName][propName] === undefined) {\r\n      values[groupName][propName] = initialValue;\r\n    }\r\n\r\n    return values[groupName][propName];\r\n  }\r\n\r\n  if (values[propName] === undefined) {\r\n    values[propName] = initialValue;\r\n  }\r\n\r\n  return values[propName];\r\n};\r\n","import React from 'react';\r\nimport { func, object, string } from 'prop-types';\r\n\r\nimport widgetTypes from '../widgets';\r\n\r\nimport DynamicForm from '../DynamicForm';\r\n\r\nconst WidgetTypeForm = ({ values, type, handleChange, errors, ...other }) => {\r\n  const widgetType = widgetTypes[type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const hasDialogFields = dialogFieldNames.length !== 0;\r\n\r\n  return (\r\n    hasDialogFields && (\r\n      <DynamicForm\r\n        values={values}\r\n        handleChange={handleChange}\r\n        fields={dialogFieldNames}\r\n        errors={errors}\r\n        {...other}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nWidgetTypeForm.propTypes = {\r\n  handleChange: func.isRequired,\r\n  type: string.isRequired,\r\n  values: object.isRequired\r\n};\r\n\r\nexport default WidgetTypeForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { string, number, bool } from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport widgetTypes from '../widgets';\r\nimport { useFormData } from '../../hooks';\r\n\r\nimport { createWidgetValidationSchema } from './validators';\r\nimport {\r\n  WIDGET_TITLE_LENGTH_LIMIT,\r\n  WIDGET_COLUMNS_MIN,\r\n  WIDGET_ROWS_MIN,\r\n  WIDGET_ROWS_MAX\r\n} from '../../constants';\r\n\r\nimport { Tab, Button } from '@material-ui/core';\r\nimport DynamicForm from '../DynamicForm';\r\nimport WidgetTypeForm from '../WidgetTypeForm';\r\nimport { StyledTabPanel, StyledTabs, StyledCancelButton } from './styled';\r\n\r\nconst WidgetForm = ({ handleSubmit, handleCancel, ...initialFormValues }) => {\r\n  const boardColumns = useSelector(\r\n    ({ ui, boards }) => boards.boardsById[ui.currentBoard].columns\r\n  );\r\n\r\n  const generalFields = [\r\n    'WidgetTypeField',\r\n    'TitleField',\r\n    ['ColumnFieldSm', 'RowFieldSm'],\r\n    'NewLineField',\r\n    'DisabledField'\r\n  ];\r\n  const constraints = {\r\n    TitleField: { max: WIDGET_TITLE_LENGTH_LIMIT },\r\n    ColumnFieldSm: { min: WIDGET_COLUMNS_MIN, max: boardColumns },\r\n    RowFieldSm: { min: WIDGET_ROWS_MIN, max: WIDGET_ROWS_MAX }\r\n  };\r\n\r\n  const {\r\n    values,\r\n    handleChange,\r\n    withValidation,\r\n    errors,\r\n    setValidationSchema\r\n  } = useFormData(initialFormValues, {\r\n    initialSchema: createWidgetValidationSchema(\r\n      initialFormValues.type,\r\n      generalFields,\r\n      constraints\r\n    ),\r\n    onChange: true\r\n  });\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const widgetType = widgetTypes[values.type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const hasDialogFields = dialogFieldNames.length !== 0;\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const validationSchema = createWidgetValidationSchema(\r\n      values.type,\r\n      generalFields,\r\n      constraints\r\n    );\r\n    setValidationSchema(validationSchema);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.type]);\r\n\r\n  return (\r\n    <form onSubmit={withValidation(handleSubmit)} noValidate=\"novalidate\">\r\n      <StyledTabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        variant=\"fullWidth\"\r\n      >\r\n        <Tab label=\"General\" data-cy=\"widget-form-general-tab\" />\r\n        {hasDialogFields && (\r\n          <Tab label={widgetType.name} data-cy=\"widget-form-dynamic-tab\" />\r\n        )}\r\n      </StyledTabs>\r\n      <StyledTabPanel value={tabValue} index={0}>\r\n        <DynamicForm\r\n          values={values}\r\n          fields={generalFields}\r\n          handleChange={handleChange}\r\n          errors={errors}\r\n          rootName=\"widget-form\"\r\n        />\r\n      </StyledTabPanel>\r\n      {hasDialogFields && (\r\n        <StyledTabPanel value={tabValue} index={1}>\r\n          <WidgetTypeForm\r\n            type={values.type}\r\n            values={values}\r\n            errors={errors}\r\n            handleChange={handleChange}\r\n            rootName=\"widget-form\"\r\n          />\r\n        </StyledTabPanel>\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        data-cy=\"widget-form-submit-button\"\r\n      >\r\n        Save\r\n      </Button>\r\n      <StyledCancelButton\r\n        handleCancelClick={handleCancel}\r\n        data-cy=\"widget-form-cancel-button\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nWidgetForm.propTypes = {\r\n  disabled: bool,\r\n  columns: number,\r\n  goNewLine: bool,\r\n  rows: number,\r\n  title: string,\r\n  type: string\r\n};\r\n\r\nWidgetForm.defaultProps = {\r\n  disabled: false,\r\n  columns: 1,\r\n  goNewLine: false,\r\n  rows: 1,\r\n  title: 'Default Widget',\r\n  type: 'DefaultWidget'\r\n};\r\n\r\nexport default WidgetForm;\r\n","import React from 'react';\r\nimport { func } from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addNewWidget } from '../actions/thunks';\r\n\r\nimport WidgetForm from './WidgetForm';\r\n\r\nconst AddWidget = ({ closeDialog }) => {\r\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddWidget = values => {\r\n    dispatch(addNewWidget({ currentBoardId, values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <WidgetForm handleSubmit={handleAddWidget} handleCancel={closeDialog} />\r\n  );\r\n};\r\n\r\nAddWidget.propTypes = {\r\n  closeDialog: func.isRequired\r\n};\r\n\r\nexport default AddWidget;\r\n","import React, { forwardRef } from 'react';\r\nimport { bool, number, object, string } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { mapStatusToColor } from './helpers';\r\nimport { COLUMN_MULTIPLIER, ROW_MULTIPLIER } from '../../constants';\r\n\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nexport const StyledCard = styled(\r\n  forwardRef(\r\n    (\r\n      {\r\n        status,\r\n        columns,\r\n        goNewLine,\r\n        isLoggedIn,\r\n        isDragging,\r\n        isOver,\r\n        rows,\r\n        theme,\r\n        ...other\r\n      },\r\n      ref\r\n    ) => <Card {...other} ref={ref} />\r\n  )\r\n)`\r\n  background: ${({ isDragging, status, theme }) =>\r\n    !isDragging\r\n      ? mapStatusToColor(status, theme)\r\n      : theme.palette.background.paper};\r\n  box-shadow: none;\r\n  cursor: ${({ isLoggedIn }) => (isLoggedIn ? 'move' : 'default')};\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-column-start: ${({ goNewLine }) => goNewLine === true && 1};\r\n  grid-column-end: span ${({ columns }) => columns * COLUMN_MULTIPLIER};\r\n  grid-row-end: span ${({ rows }) => rows * ROW_MULTIPLIER};\r\n  position: relative;\r\n\r\n  ${({ isDragging, isOver, theme }) =>\r\n    isDragging &&\r\n    `\r\n    &::before {\r\n      background: ${theme.palette.background.paper};\r\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\r\n      border-radius: inherit;\r\n      content: '';\r\n      display: block;\r\n      height: 100%;\r\n      position: absolute;\r\n      z-index: 2;\r\n      opacity: ${isDragging ? 1 : 0};\r\n      width: 100%;\r\n    }\r\n  `}\r\n`;\r\n\r\nStyledCard.propTypes = {\r\n  columns: number.isRequired,\r\n  goNewLine: bool.isRequired,\r\n  rows: number.isRequired,\r\n  status: string.isRequired,\r\n  theme: object.isRequired\r\n};\r\n\r\nexport const StyledCardHeader = styled(CardHeader)`\r\n  z-index: 1;\r\n`;\r\n\r\nexport const StyledCardContent = styled(CardContent)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const ErrorMessage = ({ errorMessage, errorCause }) => {\r\n  return (\r\n    <>\r\n      <Typography paragraph>{errorMessage}</Typography>\r\n      <Typography variant=\"caption\" paragraph>\r\n        {errorCause}\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport { object, string } from 'prop-types';\r\n\r\nimport widgetTypes from './widgets';\r\n\r\nconst WidgetContent = ({ id, type, content }) => {\r\n  const notFoundMessage = 'Widget type not found';\r\n  const WidgetType = widgetTypes[type]\r\n    ? widgetTypes[type].component\r\n    : () => notFoundMessage;\r\n\r\n  return <WidgetType id={id} {...content} />;\r\n};\r\n\r\nWidgetContent.propTypes = {\r\n  content: object,\r\n  type: string.isRequired\r\n};\r\n\r\nexport default WidgetContent;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const StyledTypography = styled(Typography)`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: flex-end;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledTypography } from './styled';\r\n\r\nconst LastUpdate = ({ lastUpdateTime }) => {\r\n  return (\r\n    <StyledTypography\r\n      align=\"left\"\r\n      color=\"textSecondary\"\r\n      variant=\"caption\"\r\n      gutterBottom={false}\r\n    >\r\n      Last update: {lastUpdateTime}\r\n    </StyledTypography>\r\n  );\r\n};\r\n\r\nexport default LastUpdate;\r\n","import React from 'react';\r\n\r\nimport { StyledCardContent } from './styled';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport WidgetContent from '../WidgetContent';\r\nimport LastUpdate from '../LastUpdate';\r\n\r\nexport const mapStatusToColor = (status, theme) => theme.palette.status[status];\r\n\r\nexport const renderCardContent = (\r\n  content,\r\n  showUpdateTime,\r\n  disabled,\r\n  id,\r\n  type\r\n) => {\r\n  return (\r\n    <StyledCardContent>\r\n      {content && content.errorMessage ? (\r\n        <ErrorMessage {...content} />\r\n      ) : !disabled ? (\r\n        <WidgetContent id={id} type={type} content={content} />\r\n      ) : (\r\n        'Disabled'\r\n      )}\r\n      {showUpdateTime && (\r\n        <LastUpdate lastUpdateTime={new Date().toLocaleString()} />\r\n      )}\r\n    </StyledCardContent>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { func, object, string, bool, number } from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { saveWidget } from '../actions/thunks';\r\n\r\nimport WidgetForm from './WidgetForm';\r\n\r\nconst EditWidget = ({ closeDialog, id, widgetTypeData, ...widgetData }) => {\r\n  const initialFormValues = { ...widgetData, ...widgetTypeData };\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditWidget = values => {\r\n    dispatch(saveWidget({ id, values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <WidgetForm\r\n      handleSubmit={handleEditWidget}\r\n      handleCancel={closeDialog}\r\n      {...initialFormValues}\r\n    />\r\n  );\r\n};\r\n\r\nEditWidget.propTypes = {\r\n  closeDialog: func.isRequired,\r\n  disabled: bool.isRequired,\r\n  columns: number.isRequired,\r\n  goNewLine: bool.isRequired,\r\n  id: string.isRequired,\r\n  rows: number.isRequired,\r\n  title: string.isRequired,\r\n  type: string.isRequired,\r\n  widgetTypeData: object.isRequired\r\n};\r\n\r\nexport default EditWidget;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { func } from 'prop-types';\r\n\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport { Menu, MenuList, IconButton } from '@material-ui/core';\r\nimport { MoreVert } from '@material-ui/icons';\r\n\r\nconst MoreMenu = ({ children }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const handleMoreButtonClick = ({ currentTarget }) =>\r\n    setAnchorEl(currentTarget);\r\n\r\n  const handleMoreMenuClose = () => setAnchorEl(null);\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={handleMoreButtonClick}\r\n        aria-label=\"More\"\r\n        aria-controls=\"more-menu\"\r\n        aria-haspopup=\"true\"\r\n        data-cy=\"more-menu-button\"\r\n      >\r\n        <MoreVert />\r\n      </IconButton>\r\n      <Menu\r\n        onClose={handleMoreMenuClose}\r\n        anchorEl={anchorEl}\r\n        id=\"more-menu\"\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n      >\r\n        <MenuList>{children(handleMoreMenuClose)}</MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nMoreMenu.propTypes = {\r\n  children: func.isRequired\r\n};\r\n\r\nexport default MoreMenu;\r\n","import styled from '@emotion/styled/macro';\r\nimport { Box, Button } from '@material-ui/core';\r\n\r\nexport const StyledCancelButton = styled(Button)`\r\n  margin-left: 1em;\r\n`;\r\n\r\nexport const StyledButtonBox = styled(Box)`\r\n  margin-top: 1em;\r\n`;\r\n","import React from 'react';\r\nimport { func, string } from 'prop-types';\r\n\r\nimport { Button, Typography } from '@material-ui/core/index';\r\nimport AppDialog from '../AppDialog';\r\nimport { StyledButtonBox, StyledCancelButton } from './styled';\r\n\r\nconst ConfirmationDialog = props => {\r\n  const {\r\n    open,\r\n    title,\r\n    content,\r\n    handleOk,\r\n    labelOk,\r\n    handleCancel,\r\n    labelCancel\r\n  } = props;\r\n\r\n  return (\r\n    <AppDialog\r\n      handleDialogClose={handleCancel}\r\n      open={open}\r\n      title={title}\r\n      data-cy=\"confirmation-dialog\"\r\n    >\r\n      <>\r\n        <Typography id=\"confirmation-dialog-content\">{content}</Typography>\r\n        <StyledButtonBox display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button\r\n            onClick={handleOk}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            data-cy=\"confirmation-dialog-ok\"\r\n          >\r\n            {labelOk}\r\n          </Button>\r\n          {handleCancel && (\r\n            <StyledCancelButton\r\n              onClick={handleCancel}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              data-cy=\"confirmation-dialog-cancel\"\r\n            >\r\n              {labelCancel}\r\n            </StyledCancelButton>\r\n          )}\r\n        </StyledButtonBox>\r\n      </>\r\n    </AppDialog>\r\n  );\r\n};\r\n\r\nConfirmationDialog.propTypes = {\r\n  handleOk: func.isRequired,\r\n  content: string,\r\n  labelOk: string,\r\n  labelCancel: string\r\n};\r\n\r\nConfirmationDialog.defaultProps = {\r\n  content: '',\r\n  labelOk: 'OK',\r\n  labelCancel: 'Cancel'\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import React, { useRef } from 'react';\r\nimport { string } from 'prop-types';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { removeWidget, reorderWidgets } from '../../actions/thunks';\r\nimport widgetTypes from '../widgets';\r\nimport { ItemTypes } from '../../constants';\r\nimport { getIsAuthenticated } from '../../selectors';\r\nimport { renderCardContent } from './helpers';\r\n\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { StyledCard, StyledCardHeader } from './styled';\r\nimport AppDialog from '../AppDialog';\r\nimport EditWidget from '../EditWidget';\r\nimport MoreMenu from '../MoreMenu';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst Widget = ({ id, index }) => {\r\n  const widgetData = useSelector(\r\n    state => state.widgets.widgetsById[id],\r\n    shallowEqual\r\n  );\r\n  const {\r\n    id: widgetId,\r\n    isUpdating,\r\n    disabled,\r\n    type,\r\n    status,\r\n    title,\r\n    content,\r\n    config: { columns, goNewLine, rows },\r\n    ...widgetTypeData\r\n  } = widgetData;\r\n  const showUpdateTime = widgetTypes[type]\r\n    ? widgetTypes[type].showUpdateTime\r\n    : false;\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const [\r\n    confirmationDialogOpened,\r\n    openConfirmationDialog,\r\n    closeConfirmationDialog\r\n  ] = useToggle();\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const ref = useRef(null);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.WIDGET, id, index },\r\n    canDrag: isAuthenticated,\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.WIDGET,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const { id: sourceId, index: sourceIndex } = item;\r\n      const targetIndex = index;\r\n\r\n      if (sourceIndex === targetIndex) {\r\n        return;\r\n      }\r\n\r\n      const { left, right } = ref.current.getBoundingClientRect();\r\n      const dropTargetMiddleX = right - (right - left) / 2;\r\n      const { x: dragSourceMouseX } = monitor.getClientOffset();\r\n\r\n      if (\r\n        (sourceIndex < targetIndex && dragSourceMouseX < dropTargetMiddleX) ||\r\n        (sourceIndex > targetIndex && dragSourceMouseX > dropTargetMiddleX)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      dispatch(reorderWidgets(sourceId, targetIndex));\r\n      item.index = targetIndex;\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      dropResult: monitor.getSourceClientOffset()\r\n    })\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  const handleEditClick = closeMenu => () => {\r\n    openDialog();\r\n    closeMenu();\r\n  };\r\n\r\n  const handleDeleteClick = closeMenu => () => {\r\n    openConfirmationDialog();\r\n    closeMenu();\r\n  };\r\n\r\n  const deleteWidget = () => {\r\n    dispatch(removeWidget(id));\r\n    closeConfirmationDialog();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledCard\r\n        status={status}\r\n        columns={columns}\r\n        goNewLine={goNewLine}\r\n        rows={rows}\r\n        theme={theme}\r\n        isLoggedIn={isAuthenticated}\r\n        isDragging={isDragging}\r\n        isOver={isOver}\r\n        ref={ref}\r\n      >\r\n        <StyledCardHeader\r\n          avatar={status === 'ERROR_CONFIGURATION' && <WarningIcon />}\r\n          title={title}\r\n          titleTypographyProps={{\r\n            component: 'h3',\r\n            variant: 'subtitle2',\r\n            color: 'textPrimary'\r\n          }}\r\n          action={\r\n            <MoreMenu>\r\n              {closeMenu => (\r\n                <>\r\n                  <MenuItem\r\n                    onClick={handleEditClick(closeMenu)}\r\n                    data-cy=\"widget-edit\"\r\n                  >\r\n                    Edit\r\n                  </MenuItem>\r\n                  <MenuItem\r\n                    onClick={handleDeleteClick(closeMenu)}\r\n                    data-cy=\"widget-delete\"\r\n                  >\r\n                    Delete\r\n                  </MenuItem>\r\n                </>\r\n              )}\r\n            </MoreMenu>\r\n          }\r\n        />\r\n        {renderCardContent(content, showUpdateTime, disabled, id, type)}\r\n      </StyledCard>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title={`Edit ${title}`}\r\n        data-cy=\"widget-edit-dialog\"\r\n      >\r\n        <EditWidget\r\n          closeDialog={handleDialogClose}\r\n          content={content}\r\n          id={id}\r\n          title={title}\r\n          disabled={disabled}\r\n          type={type}\r\n          columns={columns}\r\n          goNewLine={goNewLine}\r\n          rows={rows}\r\n          widgetTypeData={widgetTypeData}\r\n        />\r\n      </AppDialog>\r\n      <ConfirmationDialog\r\n        open={confirmationDialogOpened}\r\n        title={`Delete ${title}`}\r\n        content={`Are you sure you want to delete ${title}?`}\r\n        handleOk={deleteWidget}\r\n        labelOk=\"Delete\"\r\n        handleCancel={closeConfirmationDialog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nWidget.propTypes = {\r\n  id: string.isRequired\r\n};\r\n\r\nexport default Widget;\r\n","import React from 'react';\r\nimport { array } from 'prop-types';\r\n\r\nimport Widget from './Widget';\r\n\r\nconst WidgetList = ({ widgets: widgetIds }) => {\r\n  return widgetIds.map((widgetId, index) => (\r\n    <Widget key={widgetId} id={widgetId} index={index} />\r\n  ));\r\n};\r\n\r\nWidgetList.propTypes = {\r\n  widgets: array.isRequired\r\n};\r\n\r\nexport default WidgetList;\r\n","import { Link } from '@reach/router';\r\n\r\nimport styled from '@emotion/styled/macro';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: 16px;\r\n  color: inherit;\r\n  text-decoration: none;\r\n  border-bottom: 2px solid;\r\n  padding-bottom: 4px;\r\n  border-color: #ff8a65;\r\n`;\r\n","import React from 'react';\r\nimport { string, bool } from 'prop-types';\r\n\r\nimport { StyledLink } from './styled';\r\n\r\nconst ErrorPage = ({ title, tip, homeLink, className }) => (\r\n  <div className={className}>\r\n    <div>\r\n      <h1>{title}</h1>\r\n      <h3>{tip}</h3>\r\n\r\n      {homeLink && (\r\n        <p>\r\n          You could go back to the <StyledLink to=\"/\">Home page</StyledLink>\r\n        </p>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nErrorPage.propTypes = {\r\n  title: string,\r\n  tip: string,\r\n  homeLink: bool\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\r\n\r\nimport ErrorPage from './ErrorPage';\r\n\r\nconst NotFound = ({ className }) => (\r\n  <ErrorPage\r\n    title=\"Page not found\"\r\n    tip=\"Maybe you forget to save a new board?\"\r\n    homeLink\r\n    className={className}\r\n  />\r\n);\r\n\r\nexport default NotFound;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport CancelButton from '../CancelButton';\r\n\r\nexport const StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { string, number, bool } from 'prop-types';\r\n\r\nimport { useFormData } from '../../hooks';\r\nimport { getBoards } from '../../selectors';\r\nimport { createValidationSchema } from '../validation';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport DynamicForm from '../DynamicForm';\r\nimport { StyledCancelButton } from './styled';\r\n\r\nimport {\r\n  BOARD_TITLE_LENGTH_LIMIT,\r\n  BOARD_COLUMNS_MIN,\r\n  BOARD_COLUMNS_MAX,\r\n  SWITCH_INTERVAL_MIN\r\n} from '../../constants';\r\n\r\nconst BoardForm = ({\r\n  handleSubmit,\r\n  handleCancel,\r\n  boardId,\r\n  ...initialFormValues\r\n}) => {\r\n  const boards = useSelector(getBoards);\r\n  const formFields = [\r\n    'UniqueTitleField',\r\n    'ColumnField',\r\n    'AutoSwitchField',\r\n    'SwitchInterval'\r\n  ];\r\n  const constraints = {\r\n    UniqueTitleField: {\r\n      max: BOARD_TITLE_LENGTH_LIMIT,\r\n      boardId: boardId,\r\n      boards: boards\r\n    },\r\n    ColumnField: {\r\n      min: BOARD_COLUMNS_MIN,\r\n      max: BOARD_COLUMNS_MAX\r\n    },\r\n    SwitchInterval: {\r\n      min: SWITCH_INTERVAL_MIN\r\n    }\r\n  };\r\n\r\n  const validationSchema = createValidationSchema(formFields, constraints);\r\n  const { values, handleChange, withValidation, errors } = useFormData(\r\n    initialFormValues,\r\n    { initialSchema: validationSchema, onChange: true }\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={withValidation(handleSubmit)} noValidate=\"novalidate\">\r\n      <DynamicForm\r\n        fields={formFields}\r\n        values={values}\r\n        handleChange={handleChange}\r\n        errors={errors}\r\n        rootName=\"board-form\"\r\n      />\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        data-cy=\"board-form-submit-button\"\r\n      >\r\n        Save\r\n      </Button>\r\n      <StyledCancelButton\r\n        handleCancelClick={handleCancel}\r\n        data-cy=\"board-form-cancel-button\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nBoardForm.propTypes = {\r\n  autoSwitch: bool,\r\n  columns: number,\r\n  switchInterval: number,\r\n  title: string\r\n};\r\n\r\nBoardForm.defaultProps = {\r\n  autoSwitch: true,\r\n  columns: 8,\r\n  switchInterval: 60,\r\n  title: 'Board'\r\n};\r\n\r\nexport default BoardForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useToggle } from '../hooks';\r\nimport { addNewBoard } from '../actions/thunks';\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport AppDialog from './AppDialog';\r\nimport BoardForm from './BoardForm';\r\n\r\nconst AddBoard = () => {\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const handleAddBoardClick = event => {\r\n    event.stopPropagation();\r\n    openDialog();\r\n  };\r\n\r\n  const handleAddActionClick = values => {\r\n    dispatch(addNewBoard(values));\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={handleAddBoardClick}\r\n        color=\"primary\"\r\n        data-cy=\"add-board-add-button\"\r\n      >\r\n        <Add />\r\n      </IconButton>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title=\"Add new board\"\r\n      >\r\n        <BoardForm\r\n          handleSubmit={handleAddActionClick}\r\n          handleCancel={handleDialogClose}\r\n        />\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddBoard;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport AddBoard from './AddBoard';\r\n\r\nconst NoBoards = ({ className }) => {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <h1>No boards found</h1>\r\n        {isAuthenticated && <h3>Add first board</h3>}\r\n        <AddBoard />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoBoards;\r\n","import styled from '@emotion/styled/macro';\r\nimport { getColumns } from './helpers';\r\nimport NotFound from '../NotFound';\r\nimport NoBoards from '../NoBoards';\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: grid;\r\n  grid-gap: 20px;\r\n  grid-template-columns: repeat(${getColumns}, 1fr);\r\n  grid-auto-rows: 0.5fr;\r\n`;\r\n\r\nconst BaseNoData = component => styled(component)`\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n\r\n  > div {\r\n    padding: 0 15px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const StyledNotFound = styled(BaseNoData(NotFound))`\r\n  background: #211f39;\r\n  z-index: 2000;\r\n`;\r\n\r\nexport const StyledNoBoards = BaseNoData(NoBoards);\r\n","import { COLUMN_MULTIPLIER } from '../../constants';\r\n\r\nexport const getColumns = props => props.columns * COLUMN_MULTIPLIER;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setCurrentBoard } from '../../actions/actionCreators';\r\n\r\nimport WidgetList from '../WidgetList';\r\nimport { StyledContainer, StyledNotFound, StyledNoBoards } from './styled';\r\n\r\nconst Board = ({ boardId, className }) => {\r\n  const currentBoard = useSelector(({ boards }) => boards.boardsById[boardId]);\r\n  const allBoardsLength = useSelector(({ boards }) => boards.allBoards).length;\r\n  const { columns, widgets } = currentBoard || {};\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    boardId && dispatch(setCurrentBoard(boardId));\r\n  }, [dispatch, boardId]);\r\n\r\n  if (allBoardsLength === 0) {\r\n    return <StyledNoBoards />;\r\n  }\r\n\r\n  if (!currentBoard) {\r\n    return <StyledNotFound />;\r\n  }\r\n\r\n  return (\r\n    <StyledContainer className={className} columns={columns}>\r\n      <WidgetList widgets={widgets} />\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Board from './Board';\r\n\r\nconst IndexBoard = () => {\r\n  const [firstBoardId] = useSelector(({ boards }) => boards.allBoards);\r\n\r\n  return <Board boardId={firstBoardId} />;\r\n};\r\n\r\nexport default IndexBoard;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const StyledTimer = styled(Typography)`\r\n  margin-right: 20px;\r\n`;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport { useBoardSwitching, usePrevious } from './hooks';\r\nimport { formatTime } from './helpers';\r\n\r\nimport { IconButton, Tooltip } from '@material-ui/core';\r\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from '@material-ui/icons';\r\nimport { StyledTimer } from './styled';\r\n\r\nconst BoardSwitcher = ({ className }) => {\r\n  const {\r\n    handleBoardsSwitch,\r\n    handlePlayToggle,\r\n    handleResetTimeElapsed,\r\n    hasBoardsToSwitch,\r\n    isPlaying,\r\n    isDisable,\r\n    nextBoardTitle,\r\n    prevBoardTitle,\r\n    switchInterval,\r\n    timeElapsed\r\n  } = useBoardSwitching();\r\n  const timeLeft = switchInterval - timeElapsed;\r\n  const previousSwitchInterval = usePrevious(switchInterval);\r\n\r\n  useEffect(() => {\r\n    if (previousSwitchInterval !== switchInterval) {\r\n      handleResetTimeElapsed();\r\n    }\r\n  });\r\n\r\n  if (!hasBoardsToSwitch || isDisable) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <StyledTimer>{formatTime(timeLeft)}</StyledTimer>\r\n      <Tooltip title={prevBoardTitle} placement=\"bottom-end\">\r\n        <IconButton\r\n          onClick={handleBoardsSwitch('prev')}\r\n          color=\"inherit\"\r\n          aria-label=\"Next board\"\r\n          edge=\"start\"\r\n        >\r\n          <SkipPrevious />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <IconButton\r\n        onClick={handlePlayToggle}\r\n        color=\"inherit\"\r\n        aria-label=\"Auto switch boards\"\r\n        edge=\"start\"\r\n      >\r\n        {isPlaying ? <Pause /> : <PlayArrow />}\r\n      </IconButton>\r\n      <Tooltip title={nextBoardTitle} placement=\"bottom-end\">\r\n        <IconButton\r\n          onClick={handleBoardsSwitch('next')}\r\n          color=\"inherit\"\r\n          aria-label=\"Next board\"\r\n          edge=\"start\"\r\n        >\r\n          <SkipNext />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardSwitcher;\r\n","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport {\r\n  getSwitcherBoards,\r\n  getSwitchInterval,\r\n  getBoardTitle,\r\n  getCurrentBoardId\r\n} from '../../selectors';\r\nimport { getPrevAndNextIndex } from './helpers';\r\n\r\nexport const useBoardSwitching = () => {\r\n  const switcherBoards = useSelector(getSwitcherBoards);\r\n  const currentBoardId = useSelector(getCurrentBoardId);\r\n  const hasBoardsToSwitch = switcherBoards.length > 1;\r\n  const boardIndex = switcherBoards.includes(currentBoardId)\r\n    ? switcherBoards.indexOf(currentBoardId)\r\n    : 0;\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [prevBoardIndex, nextBoardIndex] = getPrevAndNextIndex(\r\n    switcherBoards,\r\n    boardIndex\r\n  );\r\n  const switchInterval = useSelector(state =>\r\n    getSwitchInterval(state, switcherBoards[boardIndex])\r\n  );\r\n  const prevBoardTitle = useSelector(state =>\r\n    getBoardTitle(state, switcherBoards[prevBoardIndex])\r\n  );\r\n  const nextBoardTitle = useSelector(state =>\r\n    getBoardTitle(state, switcherBoards[nextBoardIndex])\r\n  );\r\n  const isDisable = !switcherBoards.includes(currentBoardId);\r\n\r\n  const switchBoard = useCallback(\r\n    direction => {\r\n      const switchDirection = {\r\n        next: nextBoardIndex,\r\n        prev: prevBoardIndex\r\n      };\r\n      const currentBoardIndex = switchDirection[direction];\r\n\r\n      navigate(switcherBoards[currentBoardIndex] || switcherBoards[0]);\r\n    },\r\n    [nextBoardIndex, prevBoardIndex, switcherBoards]\r\n  );\r\n\r\n  const handleBoardsSwitch = direction => () => {\r\n    if (!hasBoardsToSwitch) {\r\n      return;\r\n    }\r\n\r\n    switchBoard(direction);\r\n    setTimeElapsed(0);\r\n    setIsPlaying(false);\r\n  };\r\n\r\n  const handlePlayToggle = () => {\r\n    setIsPlaying(prevState => !prevState);\r\n  };\r\n\r\n  const handleResetTimeElapsed = () => {\r\n    setTimeElapsed(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      const interval = setInterval(() => {\r\n        setTimeElapsed(prevState => prevState + 1);\r\n\r\n        if (timeElapsed >= switchInterval) {\r\n          switchBoard('next');\r\n          setTimeElapsed(0);\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isPlaying, timeElapsed, switchInterval, switchBoard]);\r\n\r\n  return {\r\n    handleBoardsSwitch,\r\n    handlePlayToggle,\r\n    handleResetTimeElapsed,\r\n    hasBoardsToSwitch,\r\n    isPlaying,\r\n    isDisable,\r\n    nextBoardTitle,\r\n    prevBoardTitle,\r\n    switchInterval,\r\n    timeElapsed\r\n  };\r\n};\r\n\r\nexport const usePrevious = value => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref.current;\r\n};\r\n","export const formatTime = timeInSec => {\r\n  const seconds = timeInSec % 60;\r\n  const minutes = Math.floor(timeInSec / 60);\r\n  const leadingZero = seconds < 10 ? 0 : '';\r\n\r\n  return `${minutes}:${leadingZero}${seconds}`;\r\n};\r\n\r\nexport const getPrevAndNextIndex = (array, currentIndex) => {\r\n  const lastIndex = array.length - 1;\r\n  const nextIndex = currentIndex < lastIndex ? currentIndex + 1 : 0;\r\n  const prevIndex = currentIndex > 0 ? currentIndex - 1 : lastIndex;\r\n\r\n  return [prevIndex, nextIndex];\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { login, logout } from '../../actions/thunks';\r\nimport { clearLoginErrorMessage } from '../../actions/actionCreators';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { Button, IconButton, TextField, Typography } from '@material-ui/core';\r\nimport { AccountCircle, PowerSettingsNew } from '@material-ui/icons';\r\nimport AppDialog from './../AppDialog';\r\nimport { StyledFieldset } from '../styled';\r\nimport { getCredentials } from './helpers';\r\n\r\nconst UserLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const errorMsg = useSelector(({ app }) => app.loginErrorMessage);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      handleDialogClose();\r\n    }\r\n  }, [isAuthenticated, handleDialogClose]);\r\n\r\n  const handleLoginButtonClick = () => {\r\n    const credentials = getCredentials();\r\n    dispatch(login(credentials));\r\n  };\r\n\r\n  const handleLoginOnEnterPress = event => {\r\n    if (event.key === 'Enter') {\r\n      handleLoginButtonClick();\r\n    }\r\n  };\r\n\r\n  const handleLoginDialogOpen = () => {\r\n    openDialog(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  function closeDialog() {\r\n    handleDialogClose();\r\n    dispatch(clearLoginErrorMessage());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isAuthenticated && (\r\n        <IconButton\r\n          onClick={handleLoginDialogOpen}\r\n          aria-label=\"Login\"\r\n          color=\"inherit\"\r\n          edge=\"start\"\r\n          data-cy=\"user-login-login-icon\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n      )}\r\n      {isAuthenticated && (\r\n        <IconButton\r\n          onClick={handleLogout}\r\n          aria-label=\"Logout\"\r\n          color=\"inherit\"\r\n          edge=\"start\"\r\n          data-cy=\"user-login-logout-icon\"\r\n        >\r\n          <PowerSettingsNew />\r\n        </IconButton>\r\n      )}\r\n      <AppDialog\r\n        handleDialogClose={closeDialog}\r\n        open={dialogOpened}\r\n        title=\"User Login\"\r\n      >\r\n        <StyledFieldset component=\"fieldset\">\r\n          {errorMsg && (\r\n            <Typography color=\"error\" data-cy=\"user-login-error-messages\">\r\n              {errorMsg}\r\n            </Typography>\r\n          )}\r\n          <TextField\r\n            autoFocus\r\n            id=\"username\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            label=\"Username\"\r\n            margin=\"normal\"\r\n            onKeyPress={handleLoginOnEnterPress}\r\n            inputProps={{ 'data-cy': 'user-login-username-input' }}\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            onKeyPress={handleLoginOnEnterPress}\r\n            inputProps={{ 'data-cy': 'user-login-password-input' }}\r\n          />\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleLoginButtonClick}\r\n            variant=\"contained\"\r\n            data-cy=\"user-login-submit-button\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </StyledFieldset>\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","export const getCredentials = () => {\r\n  const usernameField = document.getElementById('username');\r\n  const passwordField = document.getElementById('password');\r\n  return {\r\n    username: usernameField ? usernameField.value : '',\r\n    password: passwordField ? passwordField.value : ''\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { func } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { setSize } from '../helpers';\r\n\r\nimport { AppBar, Container, Toolbar, IconButton } from '@material-ui/core';\r\nimport { DashboardRounded } from '@material-ui/icons';\r\nimport { StyledTitle } from './styled';\r\n\r\nimport BoardSwitcher from './BoardSwitcher';\r\nimport UserLogin from './UserLogin';\r\n\r\nconst StyledBoardSwitcher = styled(BoardSwitcher)`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  background-color: #211f39;\r\n  box-shadow: none;\r\n`;\r\n\r\nconst StyledToolbar = styled(Toolbar)`\r\n  min-height: ${setSize(10)};\r\n`;\r\n\r\nconst NavBar = ({ handleDrawerToggle }) => {\r\n  const theme = useTheme();\r\n  const noBoardsFound =\r\n    useSelector(({ boards }) => boards.allBoards).length === 0;\r\n  const title = useSelector(({ ui, boards }) =>\r\n    ui.currentBoard && boards.boardsById[ui.currentBoard]\r\n      ? boards.boardsById[ui.currentBoard].title\r\n      : ''\r\n  );\r\n\r\n  return (\r\n    <StyledAppBar position=\"fixed\">\r\n      <Container maxWidth=\"xl\">\r\n        <StyledToolbar disableGutters theme={theme}>\r\n          <IconButton\r\n            onClick={handleDrawerToggle(true)}\r\n            aria-label=\"Open boards drawer\"\r\n            color=\"inherit\"\r\n            edge=\"start\"\r\n            data-cy=\"navbar-show-drawer-button\"\r\n          >\r\n            <DashboardRounded />\r\n          </IconButton>\r\n          <UserLogin />\r\n          {!noBoardsFound && (\r\n            <StyledTitle\r\n              component=\"h2\"\r\n              variant=\"h3\"\r\n              theme={theme}\r\n              data-cy=\"navbar-title-header\"\r\n            >\r\n              {title}\r\n            </StyledTitle>\r\n          )}\r\n          <StyledBoardSwitcher />\r\n        </StyledToolbar>\r\n      </Container>\r\n    </StyledAppBar>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  handleDrawerToggle: func.isRequired\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { CheckCircle, Error, Info, Warning } from '@material-ui/icons';\r\n\r\nconst IconVariant = ({ variant }) => {\r\n  const iconByVariant = {\r\n    success: CheckCircle,\r\n    warning: Warning,\r\n    error: Error,\r\n    info: Info\r\n  };\r\n\r\n  const Icon =\r\n    variant in iconByVariant ? iconByVariant[variant] : iconByVariant['info'];\r\n\r\n  return <Icon />;\r\n};\r\n\r\nexport default IconVariant;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { mapVariantToColor } from './helpers';\r\n\r\nimport { SnackbarContent } from '@material-ui/core';\r\n\r\nexport const StyledSnackbarContent = styled(({ theme, variant, ...other }) => (\r\n  <SnackbarContent {...other} />\r\n))`\r\n  background: ${({ theme, variant }) => mapVariantToColor(theme, variant)};\r\n`;\r\n","export const mapVariantToColor = (theme, variant) =>\r\n  theme.palette.snackbarVariant[variant];\r\n","import React from 'react';\r\nimport { func, oneOf, string } from 'prop-types';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { Box } from '@material-ui/core';\r\nimport IconVariant from '../IconVariant';\r\nimport { StyledSnackbarContent } from './styled';\r\n\r\nconst SnackbarVariantContent = ({ message, variant }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledSnackbarContent\r\n      theme={theme}\r\n      variant={variant}\r\n      message={\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconVariant variant={variant} />\r\n          <Box marginLeft={1}>{message}</Box>\r\n        </Box>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nSnackbarVariantContent.propTypes = {\r\n  variant: oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n  message: string,\r\n  onClose: func\r\n};\r\n\r\nexport default SnackbarVariantContent;\r\n","import React, { useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useToggle } from '../hooks';\r\nimport { createGetNotification } from '../selectors';\r\nimport { deleteNotification } from '../actions/actionCreators';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar/index';\r\nimport SnackbarVariantContent from './SnackbarVariantContent';\r\n\r\nconst SnackbarWithVariant = React.memo(\r\n  ({ notificationId, vertical, horizontal, 'data-cy': dataCy }) => {\r\n    const getNotification = useMemo(createGetNotification, []);\r\n    const { type, message, duration } = useSelector(state =>\r\n      getNotification(state, notificationId)\r\n    );\r\n    const dispatch = useDispatch();\r\n    const [isOpened, , closeSnackbar] = useToggle(true);\r\n\r\n    const handleClose = (event, reason) => {\r\n      if (reason !== 'timeout') {\r\n        return;\r\n      }\r\n\r\n      closeSnackbar();\r\n    };\r\n\r\n    const handleExited = () => dispatch(deleteNotification(notificationId));\r\n\r\n    return (\r\n      <Snackbar\r\n        onClose={handleClose}\r\n        onExited={handleExited}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={duration}\r\n        disableWindowBlurListener\r\n        open={isOpened}\r\n        data-cy={dataCy}\r\n      >\r\n        <SnackbarVariantContent variant={type} message={message} />\r\n      </Snackbar>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SnackbarWithVariant;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getAllNotifications } from '../../selectors';\r\n\r\nimport SnackbarWithVariant from '../SnackbarWithVariant';\r\n\r\nconst Notifications = () => {\r\n  const allNotifications = useSelector(getAllNotifications);\r\n\r\n  return allNotifications.map(id => (\r\n    <SnackbarWithVariant\r\n      horizontal=\"center\"\r\n      key={id}\r\n      notificationId={id}\r\n      vertical=\"top\"\r\n      data-cy=\"notification-snackbar\"\r\n    />\r\n  ));\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { saveBoard } from '../actions/thunks';\r\n\r\nimport BoardForm from './BoardForm';\r\n\r\nconst EditBoard = ({ closeDialog, id, ...initialFormValues }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSaveClick = values => {\r\n    dispatch(saveBoard({ id, ...values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <BoardForm\r\n      {...initialFormValues}\r\n      handleSubmit={handleSaveClick}\r\n      handleCancel={closeDialog}\r\n      boardId={id}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditBoard;\r\n","import React, { forwardRef } from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { Card, CardActions } from '@material-ui/core';\r\n\r\nexport const StyledCard = styled(\r\n  forwardRef(({ isLoggedIn, isDragging, isOver, theme, ...other }, ref) => (\r\n    <Card {...other} ref={ref} />\r\n  ))\r\n)`\r\n  background-color: ${({ theme }) => theme.palette.background.board.card}};\r\n  box-shadow: none;\r\n  cursor: ${({ isLoggedIn }) => (isLoggedIn ? 'move' : 'default')};\r\n  position: relative;\r\n\r\n  ${({ isDragging, isOver, theme }) =>\r\n    isDragging &&\r\n    `\r\n    &::before {\r\n      background-color: ${theme.palette.background.board.dragged};\r\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\r\n      border-radius: inherit;\r\n      content: '';\r\n      display: block;\r\n      height: 100%;\r\n      position: absolute;\r\n      z-index: 2;\r\n      opacity: ${isDragging ? 1 : 0};\r\n      width: 100%;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const StyledCardActions = styled(CardActions)`\r\n  justify-content: flex-end;\r\n  z-index: 1;\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport { object } from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { deleteBoardWithWidgets } from '../../actions/thunks';\r\nimport { reorderBoard } from '../../actions/thunks';\r\nimport { ItemTypes } from '../../constants';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport { Delete, Edit } from '@material-ui/icons';\r\nimport AppDialog from '../AppDialog';\r\nimport EditBoard from '../EditBoard';\r\nimport { StyledCard, StyledCardActions } from './styled';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst BoardCard = ({ boardData, index, className }) => {\r\n  const { autoSwitch, columns, id, switchInterval, title } = boardData;\r\n  const [open, openDialog, handleDialogClose] = useToggle();\r\n  const [\r\n    confirmationDialogOpened,\r\n    openConfirmationDialog,\r\n    closeConfirmationDialog\r\n  ] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const ref = useRef(null);\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.BOARD, id, index },\r\n    canDrag: isAuthenticated,\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.BOARD,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const { id: sourceId, index: sourceIndex } = item;\r\n      const targetIndex = index;\r\n\r\n      if (sourceIndex === targetIndex) {\r\n        return;\r\n      }\r\n\r\n      const { top, bottom } = ref.current.getBoundingClientRect();\r\n      const dropTargetMiddleY = bottom - (bottom - top) / 2;\r\n      const { y: dragSourceMouseY } = monitor.getClientOffset();\r\n\r\n      const hasPointerPassedMiddle =\r\n        (sourceIndex < targetIndex && dragSourceMouseY >= dropTargetMiddleY) ||\r\n        (sourceIndex > targetIndex && dragSourceMouseY <= dropTargetMiddleY);\r\n\r\n      if (!hasPointerPassedMiddle) {\r\n        return;\r\n      }\r\n\r\n      dispatch(reorderBoard(sourceId, targetIndex));\r\n      item.index = targetIndex;\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      dropResult: monitor.getSourceClientOffset()\r\n    })\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  const handleBoardClick = boardId => () => {\r\n    navigate(boardId);\r\n  };\r\n\r\n  const handleEditClick = event => {\r\n    event.stopPropagation();\r\n    openDialog();\r\n  };\r\n\r\n  const handleDeleteClick = event => {\r\n    event.stopPropagation();\r\n    openConfirmationDialog();\r\n  };\r\n\r\n  const deleteBoard = () => {\r\n    dispatch(deleteBoardWithWidgets(id));\r\n    closeConfirmationDialog();\r\n  };\r\n\r\n  return (\r\n    <div className={className} data-cy=\"board-card\">\r\n      <StyledCard\r\n        onClick={handleBoardClick(id)}\r\n        theme={theme}\r\n        isLoggedIn={isAuthenticated}\r\n        isDragging={isDragging}\r\n        isOver={isOver}\r\n        ref={ref}\r\n      >\r\n        <CardHeader\r\n          title={title}\r\n          titleTypographyProps={{\r\n            component: 'h3',\r\n            variant: 'subtitle2',\r\n            color: 'textPrimary'\r\n          }}\r\n          data-cy=\"board-card-header\"\r\n        />\r\n        <CardContent></CardContent>\r\n        {isAuthenticated && (\r\n          <StyledCardActions>\r\n            <IconButton\r\n              onClick={handleEditClick}\r\n              aria-label=\"edit\"\r\n              size=\"small\"\r\n              data-cy=\"board-card-edit-button\"\r\n            >\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleDeleteClick}\r\n              aria-label=\"delete\"\r\n              size=\"small\"\r\n              data-cy=\"board-card-delete-button\"\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </StyledCardActions>\r\n        )}\r\n      </StyledCard>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={open}\r\n        title={`Edit ${title}`}\r\n        data-cy=\"board-card-edit-dialog\"\r\n      >\r\n        <EditBoard\r\n          closeDialog={handleDialogClose}\r\n          autoSwitch={autoSwitch}\r\n          columns={columns}\r\n          id={id}\r\n          switchInterval={switchInterval}\r\n          title={title}\r\n        />\r\n      </AppDialog>\r\n      <ConfirmationDialog\r\n        open={confirmationDialogOpened}\r\n        title={`Delete ${title}`}\r\n        content={`Are you sure you want to delete ${title}?`}\r\n        handleOk={deleteBoard}\r\n        labelOk=\"Delete\"\r\n        handleCancel={closeConfirmationDialog}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nBoardCard.propTypes = {\r\n  boardData: object.isRequired\r\n};\r\n\r\nexport default BoardCard;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport BoardCard from '../BoardCard';\r\n\r\nexport const StyledBoardCard = styled(BoardCard)`\r\n  margin-bottom: 32px;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport { StyledBoardCard } from './styled';\r\n\r\nconst BoardList = ({ className }) => {\r\n  const boards = useSelector(({ boards }) => {\r\n    const { boardsById, allBoards } = boards;\r\n\r\n    return allBoards.map(boardId => boardsById[boardId]);\r\n  });\r\n\r\n  return (\r\n    <Box className={className}>\r\n      {boards.map((boardData, index) => (\r\n        <StyledBoardCard\r\n          boardData={boardData}\r\n          key={boardData.id}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n","import React from 'react';\r\n\r\nimport logo from '../assets/images/cogBoard-white.png';\r\n\r\nconst Logo = ({ className }) => (\r\n  <img className={className} src={logo} alt=\"Cogboard logo\" />\r\n);\r\n\r\nexport default Logo;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { Box, Fab } from '@material-ui/core';\r\nimport BoardList from '../BoardList';\r\nimport Logo from '../Logo';\r\n\r\nexport const StyledActions = styled(Box)`\r\n  bottom: 50px;\r\n  position: fixed;\r\n  right: 50px;\r\n  z-index: 10000;\r\n`;\r\n\r\nexport const StyledSaveFab = styled(Fab)`\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport const StyledBoardList = styled(BoardList)`\r\n  padding: 32px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledMain = styled.main`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 110px;\r\n`;\r\n\r\nexport const StyledLogo = styled(Logo)`\r\n  width: 40%;\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nexport const StyledDrawerContainer = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 32px;\r\n  width: 250px;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Router } from '@reach/router';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { saveData } from '../../actions/thunks';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { Container, Drawer, Fab } from '@material-ui/core';\r\nimport { Add, Save } from '@material-ui/icons';\r\nimport AppDialog from '../AppDialog';\r\nimport AddWidget from '../AddWidget';\r\nimport BoardIndex from '../BoardIndex';\r\nimport Board from '../Board';\r\nimport NavBar from '../NavBar';\r\nimport AddBoard from '../AddBoard';\r\nimport Notifications from '../Notifications';\r\nimport {\r\n  StyledActions,\r\n  StyledBoardList,\r\n  StyledDrawerContainer,\r\n  StyledLogo,\r\n  StyledMain,\r\n  StyledSaveFab\r\n} from './styled';\r\n\r\nconst MainTemplate = () => {\r\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\r\n  const isDataChanged = useSelector(({ app }) => app.isDataChanged);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [drawerOpened, setDrawerOpened] = useState(false);\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSaveDataClick = () => {\r\n    dispatch(saveData());\r\n  };\r\n\r\n  const handleAddWidgetClick = () => {\r\n    openDialog(true);\r\n  };\r\n\r\n  const handleDrawerToggle = opened => event => {\r\n    const { type, key } = event;\r\n\r\n    if (type === 'keydown' && (key === 'Tab' || key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setDrawerOpened(opened);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar handleDrawerToggle={handleDrawerToggle} />\r\n      <Drawer onClose={handleDrawerToggle(false)} open={drawerOpened}>\r\n        <StyledDrawerContainer\r\n          onClick={handleDrawerToggle(false)}\r\n          onKeyDown={handleDrawerToggle(false)}\r\n          role=\"presentation\"\r\n        >\r\n          <StyledLogo />\r\n          <AddBoard />\r\n          <StyledBoardList />\r\n        </StyledDrawerContainer>\r\n      </Drawer>\r\n      <StyledMain>\r\n        <Container maxWidth=\"xl\">\r\n          <Router>\r\n            <BoardIndex path=\"/\" />\r\n            <Board path=\"/:boardId\" />\r\n          </Router>\r\n          <StyledActions>\r\n            {isAuthenticated && isDataChanged && (\r\n              <StyledSaveFab\r\n                onClick={handleSaveDataClick}\r\n                aria-label=\"Save Data\"\r\n                color=\"secondary\"\r\n                data-cy=\"main-template-save-data-button\"\r\n              >\r\n                <Save />\r\n              </StyledSaveFab>\r\n            )}\r\n            {isAuthenticated && currentBoardId && (\r\n              <Fab\r\n                onClick={handleAddWidgetClick}\r\n                aria-label=\"Add Widget\"\r\n                color=\"primary\"\r\n                data-cy=\"main-template-add-widget-button\"\r\n              >\r\n                <Add />\r\n              </Fab>\r\n            )}\r\n          </StyledActions>\r\n        </Container>\r\n      </StyledMain>\r\n      <Notifications />\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title=\"Add new widget\"\r\n        data-cy=\"main-template-add-widget-dialog\"\r\n      >\r\n        <AddWidget closeDialog={handleDialogClose} />\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;\r\n","import React from 'react';\r\n\r\nimport ErrorPage from './ErrorPage';\r\n\r\nconst ServerErrorPage = props => (\r\n  <ErrorPage\r\n    title=\"Interal Server Error\"\r\n    tip=\"Ooops... Something gone wrong. For more details check server's logs.\"\r\n  />\r\n);\r\n\r\nexport default ServerErrorPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { Router } from '@reach/router';\r\n\r\nimport { fetchInitialData } from './actions/thunks';\r\nimport {\r\n  updateWidget,\r\n  saveDataSuccess,\r\n  loginSuccess\r\n} from './actions/actionCreators';\r\nimport { theme } from './theme';\r\n\r\nimport MainTemplate from './components/MainTemplate';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { isAuthenticated } from './utils/auth';\r\nimport ServerErrorPage from './components/ServerErrorPage';\r\n\r\nfunction App() {\r\n  const appInitialized = useSelector(({ app }) => app.initialized);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      dispatch(loginSuccess());\r\n    }\r\n\r\n    dispatch(fetchInitialData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (appInitialized) {\r\n      const socket = new WebSocket(\r\n        `ws://${window.location.hostname}:${process.env.REACT_APP_WS_PORT}`\r\n      );\r\n      const handleMessageReceive = ({ data: dataJson }) => {\r\n        const { eventType, ...data } = JSON.parse(dataJson);\r\n\r\n        if (eventType === 'widget-update') {\r\n          dispatch(updateWidget(data));\r\n        } else if (eventType === 'notification-config-save') {\r\n          dispatch(saveDataSuccess());\r\n        }\r\n      };\r\n\r\n      socket.addEventListener('message', handleMessageReceive);\r\n\r\n      return () => {\r\n        socket.removeEventListener('message', handleMessageReceive);\r\n      };\r\n    }\r\n  }, [appInitialized, dispatch]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <ServerErrorPage path=\"error-page\" />\r\n          {appInitialized && <MainTemplate path=\"/*\" />}\r\n        </Router>\r\n      </DndProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore() {\r\n  const middlewares = [thunkMiddleware];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewareEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n\r\n  const store = createStore(rootReducer, composedEnhancers);\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}