{"version":3,"sources":["assets/images/cogBoard-blue.png","reducers/app/initialized.js","actions/types.js","reducers/app/dataFetching.js","reducers/app/isDataChanged.js","reducers/app/isDataSaving.js","reducers/app/loginErrorMessage.js","reducers/app/isAuthenticated.js","reducers/app/logoutReasonMessage.js","reducers/app/index.js","reducers/ui/currentBoard.js","reducers/ui/index.js","reducers/helpers.js","reducers/boards/boardsById.js","reducers/boards/allBoards.js","reducers/boards/index.js","reducers/widgets/widgetsById.js","reducers/widgets/allWidgets.js","reducers/widgets/index.js","reducers/notifications/notificationsById.js","reducers/notifications/allNotifications.js","reducers/notifications/index.js","reducers/index.js","actions/helpers.js","helpers/index.js","constants/index.js","actions/actionCreators.js","utils/auth.js","actions/thunks.js","theme.js","hooks/index.js","selectors/index.js","components/AppDialog.js","components/widgets/types/DefaultWidget.js","components/IframeEmbed.js","components/styled/index.js","components/widgets/types/ExampleWidget.js","components/widgets/types/JenkinsJobWidget.js","components/widgets/types/SonarQubeWidget.js","components/Loader/styled.js","components/Loader/index.js","components/widgets/types/ServiceCheckWidget.js","components/widgets/types/TextWidget/styled.js","components/widgets/types/TextWidget/index.js","components/widgets/types/BambooDeploymentWidget.js","components/widgets/types/BambooPlanWidget.js","components/widgets/types/WorldClockWidget/helpers.js","components/widgets/types/WorldClockWidget/styled.js","components/widgets/types/WorldClockWidget/index.js","components/widgets/types/CheckboxWidget/helpers.js","components/StatusIcon.js","components/widgets/types/CheckboxWidget/index.js","components/widgets/types/AemHealthcheckWidget/index.js","components/widgets/index.js","components/widgets/types/IframeEmbedWidget/index.js","components/widgets/types/IframeEmbedWidget/helpers.js","components/widgets/dialogFields/helpers.js","components/DropdownField.js","components/widgets/dialogFields/EndpointInput.js","components/TabPanel.js","components/ValidationMessages.js","components/CancelButton.js","components/WidgetForm/styled.js","components/widgets/dialogFields/NumberInput.js","components/widgets/dialogFields/TextInput.js","components/widgets/dialogFields/SonarQubeMetricsInput.js","components/widgets/dialogFields/DisplayValueSelect.js","components/widgets/dialogFields/MultilineTextInput.js","components/widgets/dialogFields/CheckboxInput.js","components/widgets/dialogFields/AemHealthcheckInput.js","components/widgets/dialogFields/conditionallyHidden.js","components/widgets/dialogFields/SwitchInput.js","components/widgets/dialogFields/styled.js","components/widgets/dialogFields/index.js","components/validation/index.js","components/WidgetForm/validators.js","components/DynamicForm/index.js","components/DynamicForm/helpers.js","components/WidgetTypeForm/index.js","components/WidgetForm/index.js","components/AddWidget.js","components/Widget/styled.js","components/ErrorMessage.js","components/WidgetContent.js","components/LastUpdate/styled.js","components/LastUpdate/index.js","components/Widget/helpers.js","components/EditWidget.js","components/MoreMenu.js","components/ConfirmationDialog/styled.js","components/ConfirmationDialog/index.js","components/Widget/index.js","components/WidgetList.js","components/ErrorPage/styled.js","components/ErrorPage/index.js","components/NotFound.js","components/BoardForm/styled.js","components/BoardForm/index.js","components/AddBoard.js","components/NoBoards.js","components/Board/styled.js","components/Board/helpers.js","components/Board/index.js","components/BoardIndex.js","components/BoardSwitcher/styled.js","components/BoardSwitcher/index.js","components/BoardSwitcher/hooks.js","components/BoardSwitcher/helpers.js","components/UserLogin/index.js","components/UserLogin/helpers.js","components/NavBar.js","components/IconVariant.js","components/SnackbarVariantContent/styled.js","components/SnackbarVariantContent/helpers.js","components/SnackbarVariantContent/index.js","components/SnackbarWithVariant.js","components/Notifications/index.js","components/EditBoard.js","components/BoardCard/styled.js","components/BoardCard/index.js","components/BoardList/styled.js","components/BoardList/index.js","components/Logo.js","components/MainTemplate/styled.js","components/MainTemplate/index.js","components/ServerErrorPage.js","App.js","serviceWorker.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","initialized","state","arguments","length","undefined","type","dataFetching","isDataChanged","isDataSaving","loginErrorMessage","_ref","payload","isAuthenticated","logoutReasonMessage","app","combineReducers","currentBoard","action","boardId","ui","reorderItems","items","sourceId","targetIndex","withoutSource","filter","itemId","concat","Object","toConsumableArray","slice","boardsById","boards","objectSpread","receiveData","_ref2","entries","reduce","newState","_ref3","_ref4","slicedToArray","boardProps","initBoardProps","_ref5","id","defineProperty","addBoard","_ref6","other","objectWithoutProperties","board","editBoard","_ref7","rest","map","_toPropertyKey","deleteBoard","_ref8","widgets","addWidget","_ref9","widgetId","deleteWidget","_ref10","sortedWidgets","sortWidgets","allBoards","reorderBoards","widgetsById","widget","isUpdating","requestUpdate","content","prevContent","updateWidget","editWidget","widgetsById_toPropertyKey","allWidgets","widgetIds","includes","deleteMultipleWidgets","notificationsById","assoc","pushNotification","dissoc","deleteNotification","allNotifications","append","without","notifications","rootReducer","prefix","getSize","factor","theme","spacing","getColor","variant","palette","main","getBackgroundColor","background","splitPropsGroupName","propName","split","capitalize","_ref11","toArray","firstLetter","toUpperCase","join","parseYupErrors","errors","result","inner","forEach","error","path","message","push","hasError","URL","TEXT_SIZES","display","value","REQUEST_METHODS","ItemTypes","AEM_HEALTH_CHECKS","inactiveBundles","asyncIndexHealthCheck","codeCacheHealthCheck","DiskSpaceHealthCheck","logErrorHealthCheck","ObservationQueueLengthHealthCheck","resourceSearchPathErrorHealthCheck","requestsStatus","queriesStatus","queryTraversalLimitsBundle","securitychecks","slingJobs","slingDiscoveryOakSynchronizedClocks","systemchecks","ALL_SONARQUBE_METRICS","INITIAL_BOARD_PROPS","autoSwitch","switchInterval","validationMessages","name","max","min","NOTIFICATIONS","userRole","duration","reason","loginSuccess","clearLoginErrorMessage","data","editData","saveDataSuccess","setCurrentBoard","notification","v4","hasToken","getToken","getUserRole","decode","localStorage","getItem","token","expTimestamp","exp","Date","now","isTokenExpired","checkResponseStatus","response","status","statusText","Promise","resolve","navigate","reject","Error","fetchData","url","method","postConfig","body","JSON","stringify","headers","Content-Type","fetch","then","json","createWidgetId","allIds","intRegex","RegExp","_sort","sort","a","b","Number","match","lastId","intId","replace","mapFormValuesToWidgetData","values","columns","goNewLine","rows","config","withAuthentication","actionCallback","_len","args","Array","_key","dispatch","logout","apply","withDataChanged","_len2","_key2","fetchInitialData","console","login","credentials","setItem","setToken","getState","removeItem","makeWidgetUpdaterThunk","beforeUpdateActionCreator","widgetDataCreator","widgetData","_mapDataToState","title","disabled","generalData","prop","serverData","mapDataToState","addNewWidget","currentBoardId","saveWidget","removeWidget","reorderWidgets","reorderBoard","addNewBoard","saveBoard","deleteBoardWithWidgets","_getState3","firstBoardId","setWidgetState","saveData","_getState","createMuiTheme","primary","secondary","default","paper","card","dragged","UNKNOWN","OK","IN_PROGRESS","UNSTABLE","ERROR_CONNECTION","ERROR_CONFIGURATION","ERROR","FAIL","snackbarVariant","info","blue","success","green","warning","amber","red","shape","borderRadius","typography","h3","fontWeight","letterSpacing","useToggle","initialState","_useState","useState","_useState2","isOpened","setOpened","useFormData","_useState3","_useState4","setValues","_config$onChange","onChange","_config$initialSchema","initialSchema","_useState5","submited","_useState6","setStatus","_useState7","_useState8","validationSchema","setValidationSchema","_useState9","_useState10","setErrors","setFieldValue","fieldName","fieldValue","newValues","_splitPropsGroupName","_splitPropsGroupName2","groupName","groupValues","validateField","fieldsValues","validateAt","abortEarly","errorsTmp","catch","handleChange","updaterFn","arg","event","_event$target","target","valueType","checkbox","checked","number","withValidation","func","preventDefault","validate","stripUnknown","getNotifications","getBoardsById","getNotificationId","_","notificationId","getIsAuthenticated","createSelector","getCurrentBoardId","getBoard","getBoardTitle","getSwitchInterval","getSwitcherBoards","getNotificationsById","createGetNotification","getAllNotifications","getBoards","StyledDialog","styled_base_browser_esm","props","react_default","createElement","Dialog","assign","classes","styles","StyledDialogContent","DialogContent","AppDialog","children","handleDialogClose","open","disableBackdropClick","stopEventPropagation","stopPropagation","onClick","onClose","onKeyDown","aria-labelledby","PaperProps","data-cy","DialogTitle","defaultProps","DefaultWidget","IframeEmbed","iframe","StyledTypography","Typography","FullWidthButtonOutlined","Button","fullWidth","WidgetButton","WidgetIconButton","IconButton","Caption","paragraph","CaptionWithPointer","StyledFieldset","FormControl","StyledIframe","components_IframeEmbed","frameBorder","allowFullScreen","height","StyledFormControlForDropdown","StyledTitle","StyledFormControl","StyledPopoverText","ExampleWidget","serverTime","ts","toLocaleString","styled_Caption","JenkinsJobWidget","branch","displayName","timestamp","dur","Fragment","href","SonarQubeWidget","metrics","version","date","parse","metric","val","key","StyledCircularProgress","CircularProgress","Loader","text","ServiceCheckWidget","statusCode","statusMessage","expectedStatusCode","expectedResponseBody","anchorEl","setAnchorEl","errorStatus","statusCodeMessage","bodyMessage","popoverOpen","Boolean","components_Loader","size","currentTarget","Popover","anchorOrigin","vertical","horizontal","TypographyVariant","CenterWrapper","StyledPre","RotatedStyledPre","OverflowingText","component","ModifiedWidth","componentWidth","SetWidth","TruncatedText","isVertical","parentDimensions","TruncatedPre","ModifiedPre","TextWidget","textSize","targetRef","useRef","centerWrapperDimensions","useSize","ref","TextWidget_TruncatedText","BambooDeploymentWidget","releaseName","lifeCycleState","deploymentState","BambooPlanWidget","getDateTime","timezone","format","moment","tz","GMT_TIMEZONES","allTimezones","names","duplicatedTimezones","gmtTimezones","parts","parseInt","c","splice","guess","getGmtTimezones","DATE_FORMATS","TIME_FORMATS","TimePre","DatePre","WorldClockWidget","timeZoneId","dateFormat","timeFormat","displayDate","displayTime","initTime","time","setTime","callback","delay","savedCallback","useEffect","current","setInterval","clearInterval","useInterval","getNextStatus","statusArray","statusIndex","findIndex","element","nextStatusIndex","StatusIcon","iconComponents","Check","Close","IndeterminateCheckBoxOutlined","IconComponent","fontSize","CheckboxWidget","useSelector","useDispatch","aria-label","aria-checked","components_StatusIcon","AemHealthcheckWidget","healthChecks","Link","widgetTypes","dialogFields","showUpdateTime","validationConstraints","SchedulePeriod","SonarQubeMetricsInput","minArrayLength","Text","IframeEmbedWidget","iframeUrl","styled_StyledIframe","startsWith","AemHealthcheckInput","transformMinValueToHalf","prevValue","Math","floor","ceil","DropdownField","label","dropdownItems","itemsUrl","dataCy","initialLoaded","options","setOptions","loaded","setLoaded","init","Authorization","InputLabel","shrink","htmlFor","Select","input","Input","SelectDisplayProps","EndpointInput","components_DropdownField","endpoints","MenuItem","TabPanel","index","role","hidden","ValidationMessages","className","messages","others","CancelButton","handleCancelClick","color","StyledTabPanel","StyledTabs","Tabs","StyledValidationMessages","StyledCancelButton","NumberInput","step","TextField","inputProps","InputLabelProps","margin","FormHelperTextProps","helperText","TextInput","inputId","useTheme","multiple","renderValue","Checkbox","ListItemText","FormHelperText","DisplayValueSelect","item","MultilineTextInput","multiline","StyledCheckbox","CheckboxInput","FormControlLabel","control","conditionallyHidden","Component","conditionField","condition","SwitchInput","checkboxValue","Switch","StyledNumberInput","WidgetTypeField","sortedWidgetTypes","obj","asc","keyA","keyB","localeCompare","newObj","sortByKey","parseWidgetTypes","validator","string","required","vm","TitleField","initialValue","trim","UniqueTitleField","test","uniqueTitleTestCreator","ColumnField","ColumnFieldSm","valueUpdater","RowFieldSm","NewLineField","boolean","DisabledField","AutoSwitchField","SwitchInterval","when","is","otherwise","notRequired","EndpointField","Path","IFrameURL","IdString","IdNumber","Key","_ref8$minArrayLength","array","ensure","of","_ref9$minArrayLength","StatusCode","lessThan","moreThan","TimeZoneId","DateFormat","TimeFormat","DisplayDate","DisplayTime","RequestBody","ResponseBody","TextSize","RequestMethod","TextOrientation","createValidationSchema","fields","constraints","_Array$prototype","validators","prototype","schema","newSchema","_dialogFields$fieldNa","constraint","groupSchema","object","params","exclusive","every","createWidgetValidationSchema","widgetType","dialogFieldNames","allFields","widgetConstraints","allConstraints","DynamicForm","rootName","createField","field","_dialogFields$field","DialogField","_dialogFields$field$i","dialogFieldProps","valueRef","createValueRef","toLowerCase","groupedFields","Box","justifyContent","WidgetTypeForm","components_DynamicForm","WidgetForm","handleSubmit","handleCancel","initialFormValues","boardColumns","generalFields","_useFormData","tabValue","setTabValue","hasDialogFields","onSubmit","noValidate","newValue","Tab","components_WidgetTypeForm","AddWidget","closeDialog","components_WidgetForm","StyledCard","forwardRef","isLoggedIn","isDragging","isOver","Card","mapStatusToColor","hover","propTypes","isRequired","bool","StyledCardHeader","CardHeader","StyledCardContent","CardContent","ErrorMessage","errorMessage","errorCause","WidgetContent","WidgetType","LastUpdate","lastUpdateTime","styled_StyledTypography","align","gutterBottom","EditWidget","widgetTypeData","MoreMenu","handleMoreMenuClose","aria-controls","aria-haspopup","MoreVert","Menu","keepMounted","MenuList","StyledButtonBox","ConfirmationDialog","handleOk","labelOk","labelCancel","components_AppDialog","core","autoFocus","styled_StyledCancelButton","Widget","shallowEqual","_widgetData$config","_useToggle","_useToggle2","confirmationDialogOpened","openConfirmationDialog","closeConfirmationDialog","_useToggle3","_useToggle4","dialogOpened","openDialog","_useDrag","useDrag","canDrag","collect","monitor","_useDrag2","drag","_useDrop","useDrop","accept","sourceIndex","_ref$current$getBound","getBoundingClientRect","left","right","dropTargetMiddleX","dragSourceMouseX","getClientOffset","x","dropResult","getSourceClientOffset","_useDrop2","drop","handleEditClick","closeMenu","handleDeleteClick","avatar","Warning_default","titleTypographyProps","components_MoreMenu","components_ErrorMessage","components_WidgetContent","components_LastUpdate","renderCardContent","components_EditWidget","components_ConfirmationDialog","WidgetList","components_Widget","StyledLink","ErrorPage","tip","homeLink","to","NotFound","components_ErrorPage","BoardForm","formFields","BoardForm_styled_StyledCancelButton","AddBoard","Add","components_BoardForm","NoBoards","components_AddBoard","StyledContainer","BaseNoData","StyledNotFound","StyledNoBoards","Board","allBoardsLength","components_WidgetList","IndexBoard","_useSelector","components_Board","StyledTimer","BoardSwitcher","_useBoardSwitching","switcherBoards","hasBoardsToSwitch","boardIndex","indexOf","isPlaying","setIsPlaying","timeElapsed","setTimeElapsed","_getPrevAndNextIndex","currentIndex","lastIndex","getPrevAndNextIndex","_getPrevAndNextIndex2","prevBoardIndex","nextBoardIndex","prevBoardTitle","nextBoardTitle","isDisable","switchBoard","useCallback","direction","currentBoardIndex","next","prev","interval","prevState","handleBoardsSwitch","handlePlayToggle","handleResetTimeElapsed","useBoardSwitching","timeLeft","previousSwitchInterval","usePrevious","timeInSec","seconds","minutes","leadingZero","formatTime","Tooltip","placement","edge","SkipPrevious","Pause","PlayArrow","SkipNext","UserLogin","errorMsg","handleLoginButtonClick","usernameField","document","getElementById","passwordField","username","password","getCredentials","handleLoginOnEnterPress","AccountCircle","PowerSettingsNew","onKeyPress","StyledBoardSwitcher","StyledAppBar","AppBar","StyledToolbar","Toolbar","NavBar","handleDrawerToggle","noBoardsFound","position","Container","maxWidth","disableGutters","DashboardRounded","components_UserLogin","IconVariant","iconByVariant","CheckCircle","Warning","Info","Icon","StyledSnackbarContent","SnackbarContent","mapVariantToColor","SnackbarVariantContent","alignItems","components_IconVariant","marginLeft","SnackbarWithVariant","React","memo","getNotification","useMemo","closeSnackbar","Snackbar_default","onExited","autoHideDuration","disableWindowBlurListener","components_SnackbarVariantContent","Notifications","components_SnackbarWithVariant","EditBoard","StyledCardActions","CardActions","BoardCard","boardData","top","bottom","dropTargetMiddleY","dragSourceMouseY","y","styled_StyledCard","Edit","Delete","components_EditBoard","StyledBoardCard","BoardList","Logo","src","logo","alt","StyledActions","StyledSaveFab","Fab","StyledBoardList","StyledMain","StyledLogo","StyledDrawerContainer","StyledDrawer","Drawer","MainTemplate","drawerOpened","setDrawerOpened","opened","components_NavBar","router_es","BoardIndex","Save","components_Notifications","components_AddWidget","ServerErrorPage","App","appInitialized","socket","WebSocket","window","location","hostname","process","handleMessageReceive","dataJson","_JSON$parse","eventType","addEventListener","removeEventListener","ThemeProvider","esm","backend","HTML5Backend","CssBaseline","components_ServerErrorPage","components_MainTemplate","store","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","composeWithDevTools","createStore","configureStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9851eab9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cogBoard-blue.cad3d2e0.png\";","import { RECEIVE_DATA } from '../../actions/types';\r\n\r\nconst initialized = (state = false, { type }) => {\r\n  return type === RECEIVE_DATA ? true : state;\r\n};\r\n\r\nexport default initialized;\r\n","export const INIT_BOARD_PROPS = 'INIT_BOARD_PROPS';\r\nexport const REQUEST_DATA = 'REQUEST_DATA';\r\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\r\nexport const REQUEST_UPDATE = 'REQUEST_UPDATE';\r\nexport const UPDATE_WIDGET = 'UPDATE_WIDGET';\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const EDIT_BOARD = 'EDIT_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const REORDER_BOARDS = 'REORDER_BOARDS';\r\nexport const SET_CURRENT_BOARD = 'SET_CURRENT_BOARD';\r\nexport const ADD_WIDGET = 'ADD_WIDGET';\r\nexport const EDIT_WIDGET = 'EDIT_WIDGET';\r\nexport const DELETE_WIDGET = 'DELETE_WIDGET';\r\nexport const DELETE_MULTIPLE_WIDGETS = 'DELETE_MULTIPLE_WIDGETS';\r\nexport const SORT_WIDGETS = 'SORT_WIDGETS';\r\nexport const DATA_CHANGED = 'DATA_CHANGED';\r\nexport const SAVE_DATA_START = 'SAVE_DATA_START';\r\nexport const SAVE_DATA_SUCCESS = 'SAVE_DATA_SUCCESS';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const CLEAR_LOGIN_ERROR_MESSAGE = 'CLEAR_LOGIN_ERROR_MESSAGE';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const PUSH_NOTIFICATION = 'PUSH_NOTIFICATION';\r\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\r\nexport const SET_LOGOUT_REASON_MESSAGE = 'SET_LOGOUT_REASON_MESSAGE';\r\n","import { REQUEST_DATA } from '../../actions/types';\r\n\r\nconst dataFetching = (state = false, { type }) => {\r\n  return type === REQUEST_DATA ? true : state;\r\n};\r\n\r\nexport default dataFetching;\r\n","import { DATA_CHANGED, SAVE_DATA_SUCCESS } from '../../actions/types';\r\n\r\nconst isDataChanged = (state = false, { type }) => {\r\n  switch (type) {\r\n    case DATA_CHANGED:\r\n      return true;\r\n    case SAVE_DATA_SUCCESS:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isDataChanged;\r\n","import { SAVE_DATA_START, SAVE_DATA_SUCCESS } from '../../actions/types';\r\n\r\nconst isDataSaving = (state = false, { type }) => {\r\n  switch (type) {\r\n    case SAVE_DATA_START:\r\n      return true;\r\n    case SAVE_DATA_SUCCESS:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isDataSaving;\r\n","import {\r\n  LOGIN_FAILURE,\r\n  LOGIN_SUCCESS,\r\n  CLEAR_LOGIN_ERROR_MESSAGE,\r\n  LOGOUT\r\n} from '../../actions/types';\r\n\r\nconst loginErrorMessage = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case LOGIN_FAILURE:\r\n      return payload;\r\n    case LOGIN_SUCCESS:\r\n    case CLEAR_LOGIN_ERROR_MESSAGE:\r\n    case LOGOUT:\r\n      return '';\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginErrorMessage;\r\n","import { LOGIN_SUCCESS, LOGOUT } from '../../actions/types';\r\n\r\nconst isAuthenticated = (state = false, { type }) => {\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return true;\r\n    case LOGOUT:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default isAuthenticated;\r\n","import { SET_LOGOUT_REASON_MESSAGE, LOGOUT } from '../../actions/types';\r\n\r\nconst logoutReasonMessage = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case SET_LOGOUT_REASON_MESSAGE:\r\n      return payload;\r\n    case LOGOUT:\r\n      return '';\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default logoutReasonMessage;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport initialized from './initialized';\r\nimport dataFetching from './dataFetching';\r\nimport isDataChanged from './isDataChanged';\r\nimport isDataSaving from './isDataSaving';\r\nimport loginErrorMessage from './loginErrorMessage';\r\nimport isAuthenticated from './isAuthenticated';\r\nimport logoutReasonMessage from './logoutReasonMessage';\r\n\r\nconst app = combineReducers({\r\n  initialized,\r\n  dataFetching,\r\n  isDataChanged,\r\n  isDataSaving,\r\n  loginErrorMessage,\r\n  isAuthenticated,\r\n  logoutReasonMessage\r\n});\r\n\r\nexport default app;\r\n","import { SET_CURRENT_BOARD } from '../../actions/types';\r\n\r\nconst currentBoard = (state = null, action) => {\r\n  const { type, payload: boardId } = action;\r\n\r\n  switch (type) {\r\n    case SET_CURRENT_BOARD:\r\n      return boardId;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default currentBoard;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport currentBoard from './currentBoard';\r\n\r\nconst ui = combineReducers({\r\n  currentBoard\r\n});\r\n\r\nexport default ui;\r\n","export const reorderItems = (items, sourceId, targetIndex) => {\r\n  const withoutSource = items.filter(itemId => itemId !== sourceId);\r\n  const sortedItems = [\r\n    ...withoutSource.slice(0, targetIndex),\r\n    sourceId,\r\n    ...withoutSource.slice(targetIndex)\r\n  ];\r\n\r\n  return sortedItems;\r\n};\r\n","import {\r\n  RECEIVE_DATA,\r\n  ADD_BOARD,\r\n  EDIT_BOARD,\r\n  DELETE_BOARD,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET,\r\n  SORT_WIDGETS,\r\n  INIT_BOARD_PROPS\r\n} from '../../actions/types';\r\n\r\nimport { reorderItems } from '../helpers';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const {\r\n    boards: { boardsById }\r\n  } = payload;\r\n\r\n  return { ...state, ...boardsById };\r\n};\r\n\r\nconst initBoardProps = (state, { payload }) => {\r\n  return Object.entries(state).reduce((newState, [boardId, boardProps]) => {\r\n    newState[boardId] = { ...payload, ...boardProps };\r\n\r\n    return newState;\r\n  }, {});\r\n};\r\n\r\nconst addBoard = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return { ...state, [id]: payload };\r\n};\r\n\r\nconst editBoard = (state, { payload }) => {\r\n  const { id, ...other } = payload;\r\n  const board = state[id];\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { ...board, ...other }\r\n  };\r\n};\r\n\r\nconst deleteBoard = (state, { payload: id }) => {\r\n  const { [id]: deletedBoard, ...rest } = state;\r\n\r\n  return { ...rest };\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: [...widgets, id]\r\n    }\r\n  };\r\n};\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: widgets.filter(widgetId => widgetId !== id)\r\n    }\r\n  };\r\n};\r\n\r\nconst sortWidgets = (state, { payload }) => {\r\n  const { sourceId, targetIndex, boardId } = payload;\r\n  const board = state[boardId];\r\n  const { widgets } = board;\r\n  const sortedWidgets = reorderItems(widgets, sourceId, targetIndex);\r\n\r\n  return {\r\n    ...state,\r\n    [boardId]: {\r\n      ...board,\r\n      widgets: sortedWidgets\r\n    }\r\n  };\r\n};\r\n\r\nconst boardsById = (state = {}, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case INIT_BOARD_PROPS:\r\n      return initBoardProps(state, action);\r\n    case ADD_BOARD:\r\n      return addBoard(state, action);\r\n    case EDIT_BOARD:\r\n      return editBoard(state, action);\r\n    case DELETE_BOARD:\r\n      return deleteBoard(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    case SORT_WIDGETS:\r\n      return sortWidgets(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default boardsById;\r\n","import {\r\n  RECEIVE_DATA,\r\n  DELETE_BOARD,\r\n  ADD_BOARD,\r\n  REORDER_BOARDS\r\n} from '../../actions/types';\r\nimport { reorderItems } from '../helpers';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const {\r\n    boards: { allBoards }\r\n  } = payload;\r\n\r\n  return [...state, ...allBoards];\r\n};\r\n\r\nconst addBoard = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return [...state, id];\r\n};\r\n\r\nconst deleteBoard = (state, { payload: id }) =>\r\n  state.filter(boardId => boardId !== id);\r\n\r\nconst reorderBoards = (state, { payload }) => {\r\n  const { sourceId, targetIndex } = payload;\r\n  const boards = [...state];\r\n  const sortedBoards = reorderItems(boards, sourceId, targetIndex);\r\n\r\n  return sortedBoards;\r\n};\r\n\r\nconst allBoards = (state = [], action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case ADD_BOARD:\r\n      return addBoard(state, action);\r\n    case DELETE_BOARD:\r\n      return deleteBoard(state, action);\r\n    case REORDER_BOARDS:\r\n      return reorderBoards(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allBoards;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport boardsById from './boardsById';\r\nimport allBoards from './allBoards';\r\n\r\nconst boards = combineReducers({\r\n  boardsById,\r\n  allBoards\r\n});\r\n\r\nexport default boards;\r\n","import {\r\n  RECEIVE_DATA,\r\n  REQUEST_UPDATE,\r\n  UPDATE_WIDGET,\r\n  EDIT_WIDGET,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET\r\n} from '../../actions/types';\r\n\r\nconst requestUpdate = (state, { payload: id }) => {\r\n  const widget = state[id];\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { ...widget, isUpdating: true }\r\n  };\r\n};\r\n\r\nconst receiveData = (state, action) => {\r\n  const { payload } = action;\r\n  const {\r\n    widgets: { widgetsById }\r\n  } = payload;\r\n\r\n  return { ...state, ...widgetsById };\r\n};\r\n\r\nconst updateWidget = (state, { payload }) => {\r\n  const { id, content, ...other } = payload;\r\n  const widget = state[id];\r\n  const prevContent = widget.content;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: {\r\n      ...widget,\r\n      ...other,\r\n      content: { ...prevContent, ...content },\r\n      isUpdating: false\r\n    }\r\n  };\r\n};\r\n\r\nconst editWidget = (state, { payload }) => {\r\n  const { id, content, ...other } = payload;\r\n  const widget = state[id];\r\n  const prevContent = widget.content;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: {\r\n      ...widget,\r\n      ...other,\r\n      content: { ...prevContent, ...content }\r\n    }\r\n  };\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id, boardId, ...other } = payload;\r\n\r\n  return {\r\n    ...state,\r\n    [id]: { id, ...other }\r\n  };\r\n};\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n  const { [id]: widgetId, ...rest } = state;\r\n\r\n  return rest;\r\n};\r\n\r\nconst widgetsById = (state = {}, action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case REQUEST_UPDATE:\r\n      return requestUpdate(state, action);\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case UPDATE_WIDGET:\r\n      return updateWidget(state, action);\r\n    case EDIT_WIDGET:\r\n      return editWidget(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default widgetsById;\r\n","import {\r\n  RECEIVE_DATA,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET,\r\n  DELETE_MULTIPLE_WIDGETS\r\n} from '../../actions/types';\r\n\r\nconst receiveData = (state, { payload }) => {\r\n  const {\r\n    widgets: { allWidgets }\r\n  } = payload;\r\n\r\n  return [...state, ...allWidgets];\r\n};\r\n\r\nconst addWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return [...state, id];\r\n};\r\n\r\nconst deleteWidget = (state, { payload }) => {\r\n  const { id } = payload;\r\n\r\n  return state.filter(widgetId => widgetId !== id);\r\n};\r\n\r\nconst deleteMultipleWidgets = (state, { payload }) => {\r\n  const { widgetIds } = payload;\r\n\r\n  return state.filter(widgetId => !widgetIds.includes(widgetId));\r\n};\r\n\r\nconst allWidgets = (state = [], action) => {\r\n  const { type } = action;\r\n\r\n  switch (type) {\r\n    case RECEIVE_DATA:\r\n      return receiveData(state, action);\r\n    case ADD_WIDGET:\r\n      return addWidget(state, action);\r\n    case DELETE_WIDGET:\r\n      return deleteWidget(state, action);\r\n    case DELETE_MULTIPLE_WIDGETS:\r\n      return deleteMultipleWidgets(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allWidgets;\r\n","import { combineReducers } from 'redux';\n\nimport widgetsById from './widgetsById';\nimport allWidgets from './allWidgets';\n\nconst widgets = combineReducers({\n  widgetsById,\n  allWidgets\n});\n\nexport default widgets;\n","import { PUSH_NOTIFICATION, DELETE_NOTIFICATION } from '../../actions/types';\r\nimport { assoc, dissoc } from 'ramda';\r\n\r\nconst pushNotification = (state, payload) => {\r\n  const { id } = payload;\r\n\r\n  return assoc(id, payload, state);\r\n};\r\n\r\nconst deleteNotification = (state, payload) => {\r\n  const id = payload;\r\n\r\n  return dissoc(id, state);\r\n};\r\n\r\nconst notificationsById = (state = {}, { type, payload }) => {\r\n  switch (type) {\r\n    case PUSH_NOTIFICATION:\r\n      return pushNotification(state, payload);\r\n    case DELETE_NOTIFICATION:\r\n      return deleteNotification(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notificationsById;\r\n","import { append, without } from 'ramda';\r\n\r\nimport { PUSH_NOTIFICATION, DELETE_NOTIFICATION } from '../../actions/types';\r\n\r\nconst pushNotification = (state, { id }) => append(id, state);\r\n\r\nconst deleteNotification = (state, id) => without([id], state);\r\n\r\nconst allNotifications = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case PUSH_NOTIFICATION:\r\n      return pushNotification(state, payload);\r\n    case DELETE_NOTIFICATION:\r\n      return deleteNotification(state, payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allNotifications;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport notificationsById from './notificationsById';\r\nimport allNotifications from './allNotifications';\r\n\r\nconst notifications = combineReducers({\r\n  notificationsById,\r\n  allNotifications\r\n});\r\n\r\nexport default notifications;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport app from './app';\r\nimport ui from './ui';\r\nimport boards from './boards';\r\nimport widgets from './widgets';\r\nimport notifications from './notifications';\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n  ui,\r\n  boards,\r\n  widgets,\r\n  notifications\r\n});\r\n\r\nexport default rootReducer;\r\n","import { dataChanged, setLogoutReasonMessage } from './actionCreators';\r\nimport { logout } from './thunks';\r\nimport { isAuthenticated } from '../utils/auth';\r\nimport { navigate } from '@reach/router';\r\n\r\nconst checkResponseStatus = response => {\r\n  const { status, statusText } = response;\r\n\r\n  if (status >= 200 && status < 300) {\r\n    return Promise.resolve(response);\r\n  } else if (status >= 500) {\r\n    navigate('/error-page');\r\n    return Promise.reject(new Error(statusText));\r\n  } else {\r\n    return Promise.reject(new Error(statusText));\r\n  }\r\n};\r\n\r\nexport const fetchData = (url, method = 'GET', data = {}, token = '') => {\r\n  const postConfig = {\r\n    method: 'POST',\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n  if (token) {\r\n    postConfig.headers['Authorization'] = token;\r\n  }\r\n  const init = method !== 'GET' ? postConfig : {};\r\n\r\n  return fetch(url, init)\r\n    .then(checkResponseStatus)\r\n    .then(response => response.json());\r\n};\r\n\r\nconst makeIdCreator = prefix => allIds => {\r\n  const intRegex = new RegExp(/[0-9]\\d*$/, 'g');\r\n  const [lastId] = [...allIds].sort(\r\n    (a, b) => Number(b.match(intRegex)) - Number(a.match(intRegex))\r\n  );\r\n\r\n  if (lastId) {\r\n    const intId = Number(lastId.match(intRegex));\r\n\r\n    return lastId.replace(intRegex, intId + 1);\r\n  } else {\r\n    return `${prefix}1`;\r\n  }\r\n};\r\n\r\nconst createWidgetId = makeIdCreator('widget');\r\n\r\nconst mapFormValuesToWidgetData = values => {\r\n  const { columns, goNewLine, rows, ...other } = values;\r\n\r\n  return {\r\n    ...other,\r\n    config: {\r\n      columns,\r\n      goNewLine,\r\n      rows\r\n    }\r\n  };\r\n};\r\n\r\nexport const createNewWidgetData = ({\r\n  values,\r\n  allWidgets,\r\n  currentBoardId\r\n}) => ({\r\n  boardId: currentBoardId,\r\n  id: createWidgetId(allWidgets),\r\n  status: 'UNKNOWN',\r\n  ...mapFormValuesToWidgetData(values)\r\n});\r\n\r\nexport const createEditWidgetData = ({ id, values }) => ({\r\n  id,\r\n  ...mapFormValuesToWidgetData(values)\r\n});\r\n\r\nexport const mapDataToState = data => {\r\n  const { id, title, content, type, disabled, config, ...other } = data;\r\n\r\n  const newWidgetProps = ['status', 'boardId'];\r\n  const generalData = { id, title, config, type, disabled, content };\r\n\r\n  newWidgetProps.forEach(prop => {\r\n    if (data[prop]) {\r\n      generalData[prop] = data[prop];\r\n    }\r\n  });\r\n\r\n  return {\r\n    generalData,\r\n    serverData: { id, type, ...other }\r\n  };\r\n};\r\n\r\nexport const withAuthentication = actionCallback => (...args) => dispatch => {\r\n  if (!isAuthenticated()) {\r\n    dispatch(setLogoutReasonMessage('session expired'));\r\n    dispatch(logout());\r\n\r\n    return;\r\n  }\r\n\r\n  dispatch(actionCallback.apply(null, args));\r\n};\r\n\r\nexport const withDataChanged = actionCallback => (...args) => dispatch => {\r\n  dispatch(actionCallback.apply(null, args));\r\n  dispatch(dataChanged());\r\n};\r\n","export const getSize = factor => ({ theme }) => `${theme.spacing(factor)}px`;\r\n\r\nexport const getColor = variant => ({ theme }) => theme.palette[variant].main;\r\n\r\nexport const getBackgroundColor = variant => ({ theme }) =>\r\n  theme.palette.background[variant];\r\n\r\nexport const splitPropsGroupName = propName => {\r\n  return propName.includes('.') ? propName.split('.') : [undefined, propName];\r\n};\r\n\r\nexport const sortByKey = (obj, key, asc = true) =>\r\n  Object.entries(obj)\r\n    .sort(([, { [key]: keyA }], [, { [key]: keyB }]) =>\r\n      asc ? keyA.localeCompare(keyB) : keyB.localeCompare(keyA)\r\n    )\r\n    .reduce((newObj, [key, value]) => {\r\n      newObj[key] = value;\r\n\r\n      return newObj;\r\n    }, {});\r\n\r\nexport const capitalize = ([firstLetter, ...rest]) =>\r\n  [firstLetter.toUpperCase(), ...rest].join('');\r\n\r\nexport const parseYupErrors = errors => {\r\n  let result = {};\r\n  errors.inner.forEach(error => {\r\n    const { path, message } = error;\r\n\r\n    if (path in result) {\r\n      result[path].push(message);\r\n    } else {\r\n      result[path] = [message];\r\n    }\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport const trimLeadingZeros = inputValue => String(parseInt(inputValue));\r\n\r\nexport const hasError = error => error !== undefined;\r\n","import { capitalize } from '../helpers';\r\n\r\nexport const URL = {\r\n  LOAD_DATA: '/api/config',\r\n  SAVE_DATA: '/api/config/save',\r\n  UPDATE_WIDGET: '/api/widget/update',\r\n  DELETE_WIDGET: '/api/widget/delete',\r\n  LOGIN: '/api/login'\r\n};\r\nexport const COLUMN_MULTIPLIER = 2;\r\nexport const ROW_MULTIPLIER = 2;\r\nexport const BOARD_COLUMNS_MIN = 4;\r\nexport const BOARD_COLUMNS_DEFAULT = 8;\r\nexport const BOARD_COLUMNS_MAX = 20;\r\nexport const BOARD_TITLE_LENGTH_LIMIT = 50;\r\nexport const SWITCH_INTERVAL_MIN = 3;\r\n\r\nexport const WIDGET_COLUMNS_MIN = 0.5;\r\nexport const WIDGET_ROWS_MIN = 0.5;\r\nexport const WIDGET_ROWS_MAX = 4;\r\n\r\nexport const WIDGET_TITLE_LENGTH_LIMIT = 25;\r\n\r\nexport const TEXT_SIZES = [\r\n  {\r\n    display: 'XXL',\r\n    value: 'h2'\r\n  },\r\n  {\r\n    display: 'XL',\r\n    value: 'h3'\r\n  },\r\n  {\r\n    display: 'L',\r\n    value: 'h4'\r\n  },\r\n  {\r\n    display: 'M',\r\n    value: 'h5'\r\n  },\r\n  {\r\n    display: 'S',\r\n    value: 'h6'\r\n  },\r\n  {\r\n    display: 'XS',\r\n    value: 'subtitle1'\r\n  },\r\n  {\r\n    display: 'XXS',\r\n    value: 'subtitle2'\r\n  }\r\n];\r\n\r\nexport const REQUEST_METHODS = [\r\n  {\r\n    display: 'GET',\r\n    value: 'get'\r\n  },\r\n  {\r\n    display: 'PUT',\r\n    value: 'put'\r\n  },\r\n  {\r\n    display: 'POST',\r\n    value: 'post'\r\n  },\r\n  {\r\n    display: 'DELETE',\r\n    value: 'delete'\r\n  }\r\n];\r\n\r\nexport const ItemTypes = {\r\n  WIDGET: 'widget',\r\n  BOARD: 'board'\r\n};\r\n\r\nexport const AEM_HEALTH_CHECKS = {\r\n  inactiveBundles: 'Active Bundles',\r\n  asyncIndexHealthCheck: 'Async Index Health Check',\r\n  codeCacheHealthCheck: 'Code Cache Health Check',\r\n  DiskSpaceHealthCheck: 'Disk Space',\r\n  logErrorHealthCheck: 'Log Errors',\r\n  ObservationQueueLengthHealthCheck: 'Observation Queue Length',\r\n  resourceSearchPathErrorHealthCheck: 'Resource Search Path Errors',\r\n  requestsStatus: 'Request Performance',\r\n  queriesStatus: 'Query Performance',\r\n  queryTraversalLimitsBundle: 'Query Traversal Limits',\r\n  securitychecks: 'Security Checks',\r\n  slingJobs: 'Sling Jobs',\r\n  slingDiscoveryOakSynchronizedClocks: 'Synchronized Clocks',\r\n  systemchecks: 'System Maintenance'\r\n};\r\n\r\nexport const ALL_SONARQUBE_METRICS = [\r\n  'blocker_violations',\r\n  'critical_violations',\r\n  'major_violations',\r\n  'minor_violations',\r\n  'info_violations',\r\n  'bugs',\r\n  'code_smells',\r\n  'vulnerabilities'\r\n];\r\n\r\n// props will be added to old configs on app init\r\n\r\nexport const INITIAL_BOARD_PROPS = {\r\n  autoSwitch: false,\r\n  switchInterval: 0\r\n};\r\n\r\nexport const validationMessages = {\r\n  STRING_LENGTH: (name, max) =>\r\n    `${name} length must be less or equal to ${max}.`,\r\n  FIELD_REQUIRED: () => 'This field is required',\r\n  NUMBER_MIN: (name, min) => `${name} number cannot be less than ${min}.`,\r\n  NUMBER_MAX: (name, max) => `${name} number cannot be more than ${max}.`,\r\n  INVALID_URL: () => 'Invalid URL',\r\n  FIELD_MIN_ITEMS: () => 'This field must have at least 1 item.',\r\n  UNIQUE_FIELD: () => 'This field must be unique.'\r\n};\r\nexport const NOTIFICATIONS = {\r\n  LOGIN: userRole => ({\r\n    type: 'success',\r\n    message: `Logged in as ${userRole}`,\r\n    duration: 3000\r\n  }),\r\n  LOGOUT: (userRole, reason = '') => ({\r\n    type: 'info',\r\n    message: `${capitalize(userRole)} logged out${\r\n      reason ? ' - ' : ''\r\n    }${reason}`,\r\n    duration: 3000\r\n  })\r\n};\r\n","import { v4 } from 'uuid';\r\nimport {\r\n  REQUEST_DATA,\r\n  RECEIVE_DATA,\r\n  REQUEST_UPDATE,\r\n  ADD_BOARD,\r\n  EDIT_BOARD,\r\n  DELETE_BOARD,\r\n  SET_CURRENT_BOARD,\r\n  UPDATE_WIDGET,\r\n  EDIT_WIDGET,\r\n  ADD_WIDGET,\r\n  DELETE_WIDGET,\r\n  DELETE_MULTIPLE_WIDGETS,\r\n  SORT_WIDGETS,\r\n  REORDER_BOARDS,\r\n  DATA_CHANGED,\r\n  SAVE_DATA_START,\r\n  SAVE_DATA_SUCCESS,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILURE,\r\n  CLEAR_LOGIN_ERROR_MESSAGE,\r\n  LOGOUT,\r\n  INIT_BOARD_PROPS,\r\n  PUSH_NOTIFICATION,\r\n  DELETE_NOTIFICATION,\r\n  SET_LOGOUT_REASON_MESSAGE\r\n} from './types';\r\nimport { INITIAL_BOARD_PROPS } from '../constants';\r\n\r\nexport const requestData = () => ({\r\n  type: REQUEST_DATA\r\n});\r\n\r\nexport const loginSuccess = () => ({\r\n  type: LOGIN_SUCCESS\r\n});\r\n\r\nexport const loginFailure = data => ({\r\n  type: LOGIN_FAILURE,\r\n  payload: data\r\n});\r\n\r\nexport const clearLoginErrorMessage = () => ({\r\n  type: CLEAR_LOGIN_ERROR_MESSAGE\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: LOGOUT\r\n});\r\n\r\nexport const receiveData = state => ({\r\n  type: RECEIVE_DATA,\r\n  payload: state\r\n});\r\n\r\nexport const requestUpdate = id => ({\r\n  type: REQUEST_UPDATE,\r\n  payload: id\r\n});\r\n\r\nexport const updateWidget = data => ({\r\n  type: UPDATE_WIDGET,\r\n  payload: data\r\n});\r\n\r\nexport const addBoard = data => ({\r\n  type: ADD_BOARD,\r\n  payload: {\r\n    id: `board-${v4()}`,\r\n    theme: 'default',\r\n    widgets: [],\r\n    ...data\r\n  }\r\n});\r\n\r\nexport const deleteBoard = id => ({\r\n  type: DELETE_BOARD,\r\n  payload: id\r\n});\r\n\r\nexport const editBoard = editData => ({\r\n  type: EDIT_BOARD,\r\n  payload: editData\r\n});\r\n\r\nexport const reorderBoards = (sourceId, targetIndex) => ({\r\n  type: REORDER_BOARDS,\r\n  payload: { sourceId, targetIndex }\r\n});\r\n\r\nexport const editWidget = editData => ({\r\n  type: EDIT_WIDGET,\r\n  payload: editData\r\n});\r\n\r\nexport const addWidget = widgetData => ({\r\n  type: ADD_WIDGET,\r\n  payload: widgetData\r\n});\r\n\r\nexport const deleteWidget = (id, boardId) => ({\r\n  type: DELETE_WIDGET,\r\n  payload: { id, boardId }\r\n});\r\n\r\nexport const deleteMultipleWidgets = (widgetIds, boardId = '') => ({\r\n  type: DELETE_MULTIPLE_WIDGETS,\r\n  payload: { widgetIds, boardId }\r\n});\r\n\r\nexport const sortWidgets = payload => ({\r\n  type: SORT_WIDGETS,\r\n  payload\r\n});\r\n\r\nexport const dataChanged = () => ({\r\n  type: DATA_CHANGED\r\n});\r\n\r\nexport const saveDataStart = () => ({\r\n  type: SAVE_DATA_START\r\n});\r\n\r\nexport const saveDataSuccess = () => ({\r\n  type: SAVE_DATA_SUCCESS\r\n});\r\n\r\nexport const setCurrentBoard = id => ({\r\n  type: SET_CURRENT_BOARD,\r\n  payload: id\r\n});\r\n\r\nexport const initBoardProps = () => ({\r\n  type: INIT_BOARD_PROPS,\r\n  payload: { ...INITIAL_BOARD_PROPS }\r\n});\r\n\r\nexport const pushNotification = notification => ({\r\n  type: PUSH_NOTIFICATION,\r\n  payload: {\r\n    id: v4(),\r\n    ...notification\r\n  }\r\n});\r\n\r\nexport const deleteNotification = id => ({\r\n  type: DELETE_NOTIFICATION,\r\n  payload: id\r\n});\r\n\r\nexport const setLogoutReasonMessage = reason => ({\r\n  type: SET_LOGOUT_REASON_MESSAGE,\r\n  payload: reason\r\n});\r\n","import decode from 'jwt-decode';\r\n\r\nconst tokenName = 'token';\r\n\r\nconst hasToken = () => !!getToken();\r\n\r\nconst isTokenExpired = token => {\r\n  const expTimestamp = decode(token).exp * 1000;\r\n\r\n  return Date.now() > expTimestamp;\r\n};\r\n\r\nexport const getUserRole = () =>\r\n  hasToken() ? decode(getToken()).name : undefined;\r\n\r\nexport const getToken = () => localStorage.getItem(tokenName);\r\n\r\nexport const setToken = token => localStorage.setItem(tokenName, token);\r\n\r\nexport const removeToken = () => localStorage.removeItem(tokenName);\r\n\r\nexport const isAuthenticated = () => hasToken() && !isTokenExpired(getToken());\r\n","import { navigate } from '@reach/router';\r\n\r\nimport {\r\n  requestData,\r\n  receiveData,\r\n  requestUpdate,\r\n  addBoard,\r\n  editBoard,\r\n  deleteBoard,\r\n  reorderBoards,\r\n  setCurrentBoard,\r\n  updateWidget,\r\n  addWidget,\r\n  editWidget,\r\n  deleteMultipleWidgets,\r\n  sortWidgets,\r\n  dataChanged,\r\n  saveDataStart,\r\n  deleteWidget,\r\n  loginSuccess,\r\n  loginFailure,\r\n  logout as logoutUser,\r\n  initBoardProps,\r\n  pushNotification\r\n} from './actionCreators';\r\nimport {\r\n  fetchData,\r\n  createNewWidgetData,\r\n  createEditWidgetData,\r\n  mapDataToState,\r\n  withAuthentication,\r\n  withDataChanged\r\n} from './helpers';\r\nimport { URL, NOTIFICATIONS } from '../constants';\r\nimport { setToken, removeToken, getToken, getUserRole } from '../utils/auth';\r\n\r\nexport const fetchInitialData = () => dispatch => {\r\n  dispatch(requestData());\r\n\r\n  return fetchData(URL.LOAD_DATA).then(data => {\r\n    dispatch(receiveData(data));\r\n    dispatch(initBoardProps());\r\n  }, console.error);\r\n};\r\n\r\nexport const saveDataThunk = () => (dispatch, getState) => {\r\n  const { boards, widgets } = getState();\r\n  const data = { boards, widgets };\r\n  const token = getToken();\r\n\r\n  return fetchData(URL.SAVE_DATA, 'POST', data, token).then(\r\n    () => dispatch(saveDataStart()),\r\n    console.error\r\n  );\r\n};\r\n\r\nexport const login = credentials => dispatch => {\r\n  return fetchData(URL.LOGIN, 'POST', credentials).then(\r\n    ({ token }) => {\r\n      setToken(token);\r\n      dispatch(loginSuccess());\r\n      dispatch(pushNotification(NOTIFICATIONS.LOGIN(getUserRole())));\r\n    },\r\n    ({ message }) => dispatch(loginFailure(message))\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  const userRole = getUserRole();\r\n  const {\r\n    app: { logoutReasonMessage }\r\n  } = getState();\r\n\r\n  removeToken();\r\n\r\n  dispatch(logoutUser());\r\n  dispatch(\r\n    pushNotification(NOTIFICATIONS.LOGOUT(userRole, logoutReasonMessage))\r\n  );\r\n};\r\n\r\nconst deleteBoardWithWidgetsThunk = id => (dispatch, getState) => {\r\n  const { ui, boards } = getState();\r\n  const { widgets } = boards.boardsById[id];\r\n  const { currentBoard } = ui;\r\n\r\n  dispatch(deleteBoard(id));\r\n\r\n  const [firstBoardId] = getState().boards.allBoards;\r\n\r\n  if (id === currentBoard) {\r\n    dispatch(setCurrentBoard(firstBoardId || null));\r\n    navigate(firstBoardId || '/');\r\n  }\r\n\r\n  dispatch(deleteMultipleWidgets(widgets));\r\n};\r\n\r\nconst makeWidgetUpdaterThunk = (\r\n  beforeUpdateActionCreator,\r\n  widgetDataCreator\r\n) => data => (dispatch, getState) => {\r\n  const allWidgets = getState().widgets.allWidgets;\r\n  const token = getToken();\r\n  const widgetData = widgetDataCreator({ ...data, allWidgets });\r\n  const { id } = widgetData;\r\n  const { generalData, serverData } = mapDataToState(widgetData);\r\n\r\n  dispatch(beforeUpdateActionCreator(generalData));\r\n  dispatch(dataChanged());\r\n  dispatch(requestUpdate(id));\r\n\r\n  return fetchData(URL.UPDATE_WIDGET, 'POST', serverData, token).then(\r\n    () => dispatch(updateWidget(serverData)),\r\n    console.error\r\n  );\r\n};\r\n\r\nconst removeWidgetThunk = id => (dispatch, getState) => {\r\n  const { currentBoard: boardId } = getState().ui;\r\n  const token = getToken();\r\n\r\n  return fetchData(URL.DELETE_WIDGET, 'POST', { id }, token).then(\r\n    () => dispatch(deleteWidget(id, boardId)),\r\n    console.error\r\n  );\r\n};\r\n\r\nconst reorderWidgetsThunk = (sourceId, targetIndex) => (dispatch, getState) => {\r\n  const { currentBoard: boardId } = getState().ui;\r\n\r\n  dispatch(sortWidgets({ sourceId, targetIndex, boardId }));\r\n};\r\n\r\nexport const addNewWidget = withAuthentication(\r\n  makeWidgetUpdaterThunk(addWidget, createNewWidgetData)\r\n);\r\nexport const saveWidget = withAuthentication(\r\n  makeWidgetUpdaterThunk(editWidget, createEditWidgetData)\r\n);\r\nexport const removeWidget = withAuthentication(\r\n  withDataChanged(removeWidgetThunk)\r\n);\r\nexport const reorderWidgets = withDataChanged(reorderWidgetsThunk);\r\nexport const reorderBoard = withDataChanged(reorderBoards);\r\nexport const addNewBoard = withDataChanged(addBoard);\r\nexport const saveBoard = withDataChanged(editBoard);\r\nexport const deleteBoardWithWidgets = withDataChanged(\r\n  deleteBoardWithWidgetsThunk\r\n);\r\nexport const setWidgetState = withDataChanged(editWidget);\r\nexport const saveData = withAuthentication(saveDataThunk);\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport { amber, blue, green, red } from '@material-ui/core/colors/index';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    primary: {\r\n      main: '#198cbd'\r\n    },\r\n    secondary: {\r\n      main: '#1c2630'\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n      paper: '#1c2630',\r\n      board: {\r\n        card: '#198cbd',\r\n        dragged: '#bbdefb'\r\n      }\r\n    },\r\n    status: {\r\n      UNKNOWN: '#26243e',\r\n      OK: '#019430',\r\n      IN_PROGRESS: '#198cbd',\r\n      UNSTABLE: '#ff5219',\r\n      ERROR_CONNECTION: '#e1312f',\r\n      ERROR_CONFIGURATION: '#e1312f',\r\n      ERROR: '#e1312f',\r\n      FAIL: '#e1312f'\r\n    },\r\n    snackbarVariant: {\r\n      info: blue[100],\r\n      success: green[300],\r\n      warning: amber[700],\r\n      error: red[800]\r\n    }\r\n  },\r\n  shape: {\r\n    borderRadius: 0\r\n  },\r\n  typography: {\r\n    h3: {\r\n      fontWeight: 500,\r\n      letterSpacing: 2\r\n    }\r\n  }\r\n});\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nimport { splitPropsGroupName, parseYupErrors } from '../helpers';\r\n\r\nexport const useToggle = (initialState = false) => {\r\n  const [isOpened, setOpened] = useState(initialState);\r\n\r\n  const handleOpen = () => setOpened(true);\r\n  const handleClose = () => setOpened(false);\r\n\r\n  return [isOpened, handleOpen, handleClose];\r\n};\r\n\r\nexport const useFormData = (data, config = {}) => {\r\n  const [values, setValues] = useState(data);\r\n  const { onChange = null, initialSchema = null } = config;\r\n  const [status, setStatus] = useState({\r\n    submited: false,\r\n    onChange: onChange\r\n  });\r\n  const [validationSchema, setValidationSchema] = useState(initialSchema);\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (fieldName, updaterFn = arg => arg) => event => {\r\n    const {\r\n      target: { type, value, checked }\r\n    } = event;\r\n    const valueType = {\r\n      checkbox: checked,\r\n      number: Number(value)\r\n    };\r\n    const fieldValue = valueType[type] !== undefined ? valueType[type] : value;\r\n\r\n    setFieldValue(fieldName, updaterFn(fieldValue));\r\n  };\r\n\r\n  const setFieldValue = (fieldName, fieldValue) => {\r\n    const [groupName, propName] = splitPropsGroupName(fieldName);\r\n    let newValues;\r\n\r\n    if (groupName) {\r\n      const groupValues = values[groupName];\r\n\r\n      newValues = {\r\n        ...values,\r\n        [groupName]: { ...groupValues, [propName]: fieldValue }\r\n      };\r\n    } else {\r\n      newValues = { ...values, [propName]: fieldValue };\r\n    }\r\n\r\n    validateField(fieldName, newValues);\r\n\r\n    setValues(newValues);\r\n  };\r\n\r\n  const validateField = (fieldName, fieldsValues) => {\r\n    if (status.submited || status.onChange) {\r\n      validationSchema\r\n        .validateAt(fieldName, fieldsValues, { abortEarly: false })\r\n        .then(() => {\r\n          if (fieldName in errors) {\r\n            const errorsTmp = { ...errors };\r\n\r\n            delete errorsTmp[fieldName];\r\n            setErrors(errorsTmp);\r\n          }\r\n        })\r\n        .catch(error => setErrors({ ...errors, ...parseYupErrors(error) }));\r\n    }\r\n  };\r\n\r\n  const withValidation = func => event => {\r\n    event.preventDefault();\r\n    setStatus({ ...status, submited: true });\r\n\r\n    if (validationSchema) {\r\n      validationSchema\r\n        .validate(values, { abortEarly: false, stripUnknown: true })\r\n        .then(value => func(value))\r\n        .catch(errors => setErrors(parseYupErrors(errors)));\r\n    } else {\r\n      func(values);\r\n    }\r\n  };\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    withValidation,\r\n    errors,\r\n    validationSchema,\r\n    setValidationSchema\r\n  };\r\n};\r\n\r\nexport function useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n","import { createSelector } from 'reselect';\r\n\r\nconst getApp = ({ app }) => app;\r\n\r\nconst getUi = ({ ui }) => ui;\r\n\r\nconst getNotifications = ({ notifications }) => notifications;\r\n\r\nconst getBoardsById = ({ boards }) => boards.boardsById;\r\n\r\nconst getAllBoards = ({ boards }) => boards.allBoards;\r\n\r\nconst getBoardId = (_, boardId) => boardId;\r\n\r\nconst getNotificationId = (_, notificationId) => notificationId;\r\n\r\nexport const getIsAuthenticated = createSelector(\r\n  [getApp],\r\n  ({ isAuthenticated }) => isAuthenticated\r\n);\r\n\r\nexport const getCurrentBoardId = createSelector(\r\n  [getUi],\r\n  ({ currentBoard }) => currentBoard\r\n);\r\n\r\nconst getBoard = createSelector(\r\n  [getBoardsById, getBoardId],\r\n  (boardsById, boardId) => boardsById[boardId]\r\n);\r\n\r\nexport const getBoardTitle = createSelector(\r\n  [getBoard],\r\n  board => board && board.title\r\n);\r\n\r\nexport const getSwitchInterval = createSelector(\r\n  [getBoard],\r\n  board => board && board.switchInterval\r\n);\r\n\r\nexport const getSwitcherBoards = createSelector(\r\n  [getAllBoards, getBoardsById],\r\n  (allBoards, boardsById) =>\r\n    allBoards.filter(boardId => boardsById[boardId].autoSwitch)\r\n);\r\n\r\nexport const getNotificationsById = createSelector(\r\n  [getNotifications],\r\n  ({ notificationsById }) => notificationsById\r\n);\r\n\r\nexport const createGetNotification = () =>\r\n  createSelector(\r\n    [getNotificationsById, getNotificationId],\r\n    (notificationsById, notificationId) => notificationsById[notificationId]\r\n  );\r\n\r\nexport const getAllNotifications = createSelector(\r\n  [getNotifications],\r\n  ({ allNotifications }) => allNotifications\r\n);\r\n\r\nexport const getBoards = createSelector(\r\n  [getBoardsById],\r\n  boardsById => Object.values(boardsById)\r\n);\r\n","import React from 'react';\r\nimport { bool, element, func, string } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { Dialog, DialogContent, DialogTitle } from '@material-ui/core';\r\n\r\nconst StyledDialog = styled(props => (\r\n  <Dialog classes={{ paper: 'paper' }} {...props} />\r\n))`\r\n  .paper {\r\n    padding: 15px;\r\n  }\r\n`;\r\n\r\nconst StyledDialogContent = styled(DialogContent)`\r\n  padding-bottom: 16px;\r\n`;\r\n\r\nconst AppDialog = props => {\r\n  const {\r\n    children,\r\n    handleDialogClose,\r\n    open,\r\n    title,\r\n    disableBackdropClick\r\n  } = props;\r\n\r\n  const stopEventPropagation = event => event.stopPropagation();\r\n\r\n  return (\r\n    <StyledDialog\r\n      disableBackdropClick={disableBackdropClick}\r\n      onClick={stopEventPropagation}\r\n      onClose={handleDialogClose}\r\n      onKeyDown={stopEventPropagation}\r\n      aria-labelledby=\"app-dialog-title\"\r\n      open={open}\r\n      PaperProps={{ 'data-cy': props['data-cy'] }}\r\n    >\r\n      <DialogTitle id=\"app-dialog-title\" data-cy=\"app-dialog-title\">\r\n        {title}\r\n      </DialogTitle>\r\n      <StyledDialogContent data-cy=\"app-dialog-content\">\r\n        {children}\r\n      </StyledDialogContent>\r\n    </StyledDialog>\r\n  );\r\n};\r\n\r\nAppDialog.propTypes = {\r\n  handleDialogClose: func.isRequired,\r\n  children: element.isRequired,\r\n  open: bool.isRequired,\r\n  title: string\r\n};\r\n\r\nAppDialog.defaultProps = {\r\n  title: ''\r\n};\r\n\r\nexport default AppDialog;\r\n","const DefaultWidget = () => {\r\n  return null;\r\n};\r\n\r\nexport default DefaultWidget;\r\n","import React from 'react';\r\nimport Iframe from 'react-iframe';\r\nimport { string } from 'prop-types';\r\n\r\nconst IframeEmbed = props => {\r\n  const { url } = props;\r\n\r\n  return <Iframe {...props} url={url} />;\r\n};\r\n\r\nIframeEmbed.propTypes = {\r\n  url: string.isRequired\r\n};\r\n\r\nexport default IframeEmbed;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { getSize, getColor } from '../../helpers';\r\n\r\nimport { Button, FormControl, Typography, IconButton } from '@material-ui/core';\r\nimport IframeEmbed from '../IframeEmbed';\r\n\r\nconst StyledTypography = styled(Typography)`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst FullWidthButtonOutlined = props => (\r\n  <Button {...props} fullWidth variant=\"outlined\" target=\"_blank\" />\r\n);\r\n\r\nexport const WidgetButton = styled(FullWidthButtonOutlined)`\r\n  margin-top: auto;\r\n`;\r\n\r\nexport const WidgetIconButton = styled(IconButton)`\r\n  border-radius: 0;\r\n  height: 100%;\r\n  left: 0;\r\n  padding: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 100%;\r\n`;\r\n\r\nexport const Caption = props => (\r\n  <StyledTypography {...props} variant=\"caption\" paragraph />\r\n);\r\n\r\nexport const CaptionWithPointer = styled(Caption)`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StyledFieldset = styled(FormControl)`\r\n  display: flex;\r\n  margin-bottom: 32px;\r\n  min-width: 300px;\r\n`;\r\n\r\nexport const StyledIframe = props => (\r\n  <IframeEmbed {...props} frameBorder={0} allowFullScreen height=\"100%\" />\r\n);\r\n\r\nexport const StyledFormControlForDropdown = styled(FormControl)`\r\n  display: flex;\r\n  margin-bottom: 12px;\r\n  min-width: 300px;\r\n`;\r\n\r\nexport const StyledTitle = styled(Typography)`\r\n  align-self: center;\r\n  flex-grow: 1;\r\n  font-size: ${getSize(3)};\r\n  margin-left: 1rem;\r\n  margin-top: 1rem;\r\n  overflow: hidden;\r\n  padding-right: 2rem;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  color: ${getColor('secondary')};\r\n\r\n  &::after {\r\n    background-color: ${getColor('primary')};\r\n    content: '';\r\n    display: block;\r\n    height: 2px;\r\n    margin-top: ${getSize(2)};\r\n    margin-left: 3px;\r\n    width: ${getSize(10)};\r\n  }\r\n`;\r\n\r\nexport const StyledFormControl = styled(FormControl)`\r\n  margin: ${getSize(1)};\r\n  min-width: 120px;\r\n  max-width: 300px;\r\n`;\r\n\r\nexport const StyledPopoverText = styled(Typography)`\r\n  background: #fff;\r\n  color: #000;\r\n  padding: 1rem;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Caption } from '../../styled';\r\n\r\nconst ExampleWidget = ({ serverTime }) => {\r\n  const ts = serverTime ? new Date(serverTime).toLocaleString() : '';\r\n\r\n  return <Caption>{ts}</Caption>;\r\n};\r\n\r\nexport default ExampleWidget;\r\n","import React from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Caption, WidgetButton } from '../../styled';\r\n\r\nconst JenkinsJobWidget = ({\r\n  branch,\r\n  displayName,\r\n  duration,\r\n  timestamp,\r\n  url\r\n}) => {\r\n  const ts = timestamp ? new Date(timestamp).toLocaleString() : '';\r\n  const dur = duration ? `${duration / 1000} [s]` : '';\r\n\r\n  return (\r\n    <>\r\n      <Caption>{ts}</Caption>\r\n      <Caption>Duration: {dur}</Caption>\r\n      <Caption>{branch}</Caption>\r\n      <WidgetButton href={url}>{displayName}</WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nJenkinsJobWidget.propTypes = {\r\n  duration: number.isRequired,\r\n  displayName: string.isRequired,\r\n  url: string.isRequired,\r\n  timestamp: number.isRequired,\r\n  branch: string\r\n};\r\n\r\nJenkinsJobWidget.defaultProps = {\r\n  branch: 'unknown'\r\n};\r\n\r\nexport default JenkinsJobWidget;\r\n","import React from 'react';\r\nimport { number, string, object } from 'prop-types';\r\n\r\nimport { Caption, WidgetButton } from '../../styled';\r\n\r\nconst SonarQubeWidget = props => {\r\n  const { metrics, id, url, version, date } = props;\r\n  const ts = date ? new Date(Date.parse(date)).toLocaleString() : '';\r\n\r\n  return (\r\n    <>\r\n      <Caption>{ts}</Caption>\r\n      <Caption>Version: {version}</Caption>\r\n      {Object.entries(metrics).map(([metric, val]) => (\r\n        <Caption key={metric}>\r\n          {metric.replace('_', ' ')}: {val}\r\n        </Caption>\r\n      ))}\r\n      <WidgetButton href={url}>#{id}</WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nSonarQubeWidget.propTypes = {\r\n  metrics: object,\r\n  id: number.isRequired,\r\n  url: string.isRequired,\r\n  version: string,\r\n  date: string\r\n};\r\n\r\nSonarQubeWidget.defaultProps = {\r\n  metrics: {},\r\n  version: '-',\r\n  date: ''\r\n};\r\n\r\nexport default SonarQubeWidget;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nexport const StyledCircularProgress = styled(CircularProgress)`\r\n  margin-left: 8px;\r\n`;\r\n","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\nimport { StyledCircularProgress } from './styled';\n\nconst Loader = ({ text, ...other }) => (\n  <>\n    <Typography variant=\"caption\">{text}</Typography>\n    <StyledCircularProgress {...other} />\n  </>\n);\n\nexport default Loader;\n","import React, { useState } from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Popover } from '@material-ui/core';\r\nimport {\r\n  Caption,\r\n  CaptionWithPointer,\r\n  WidgetButton,\r\n  StyledPopoverText\r\n} from '../../styled';\r\nimport Loader from '../../Loader';\r\n\r\nconst ServiceCheckWidget = props => {\r\n  const {\r\n    statusCode,\r\n    statusMessage,\r\n    expectedStatusCode,\r\n    body,\r\n    expectedResponseBody,\r\n    url\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const errorStatus = expectedStatusCode !== statusCode;\r\n  const statusCodeMessage = errorStatus\r\n    ? `${expectedStatusCode} expected, got ${statusCode}`\r\n    : statusCode;\r\n  const bodyMessage = !expectedResponseBody\r\n    ? 'OK'\r\n    : body.includes(expectedResponseBody)\r\n    ? 'MATCH'\r\n    : 'NO MATCH';\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handlePopoverClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const popoverOpen = Boolean(anchorEl);\r\n\r\n  return (\r\n    <>\r\n      {errorStatus && <Caption>{statusMessage}</Caption>}\r\n      <Caption>\r\n        <WidgetButton href={url}>\r\n          {!statusCode ? (\r\n            <Loader text=\"Pending update\" size={20} />\r\n          ) : (\r\n            statusCodeMessage\r\n          )}\r\n        </WidgetButton>\r\n      </Caption>\r\n      <CaptionWithPointer title={body} onClick={handleClick}>\r\n        Response: {bodyMessage}\r\n      </CaptionWithPointer>\r\n      <Popover\r\n        open={popoverOpen}\r\n        onClose={handlePopoverClose}\r\n        anchorEl={anchorEl}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left'\r\n        }}\r\n      >\r\n        <StyledPopoverText>{body}</StyledPopoverText>\r\n      </Popover>\r\n    </>\r\n  );\r\n};\r\n\r\nServiceCheckWidget.propTypes = {\r\n  statusCode: number,\r\n  statusMessage: string,\r\n  timestamp: number,\r\n  expectedStatusCode: number,\r\n  body: string,\r\n  expectedResponseBody: string\r\n};\r\n\r\nServiceCheckWidget.defaultProps = {\r\n  statusCode: 0,\r\n  statusMessage: '',\r\n  expectedStatusCode: 200,\r\n  body: '',\r\n  expectedResponseBody: '',\r\n  timestamp: 0\r\n};\r\n\r\nexport default ServiceCheckWidget;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const TypographyVariant = styled(Typography)`\r\n  height: 100%;\r\n`;\r\n\r\nexport const CenterWrapper = styled.div`\r\n  height: 100%;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledPre = styled.pre`\r\n  font-family: inherit;\r\n`;\r\n\r\nexport const RotatedStyledPre = styled(StyledPre)`\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nexport const OverflowingText = component => styled(component)`\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport const SetWidth = (component, componentWidth) => styled(component)`\r\n  min-width: ${componentWidth}px;\r\n  max-width: ${componentWidth}px;\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport { useSize } from 'react-hook-size';\r\nimport { bool, string } from 'prop-types';\r\n\r\nimport {\r\n  TypographyVariant,\r\n  CenterWrapper,\r\n  StyledPre,\r\n  RotatedStyledPre,\r\n  OverflowingText,\r\n  SetWidth\r\n} from './styled';\r\n\r\nexport const ModifiedWidth = (component, height) => {\r\n  if (height) {\r\n    return SetWidth(component, height);\r\n  }\r\n\r\n  return component;\r\n};\r\n\r\nconst TruncatedText = ({ isVertical, parentDimensions, children }) => {\r\n  let TruncatedPre = null;\r\n\r\n  if (isVertical && parentDimensions !== null) {\r\n    const { height } = parentDimensions;\r\n    const ModifiedPre = ModifiedWidth(RotatedStyledPre, height);\r\n    TruncatedPre = OverflowingText(ModifiedPre);\r\n  } else {\r\n    TruncatedPre = OverflowingText(StyledPre);\r\n  }\r\n\r\n  return <TruncatedPre>{children}</TruncatedPre>;\r\n};\r\n\r\nconst TextWidget = ({ text, textSize, isVertical }) => {\r\n  const targetRef = useRef();\r\n  const centerWrapperDimensions = useSize(targetRef);\r\n\r\n  return (\r\n    <TypographyVariant variant={textSize}>\r\n      <CenterWrapper ref={targetRef}>\r\n        <TruncatedText\r\n          isVertical={isVertical}\r\n          parentDimensions={centerWrapperDimensions}\r\n        >\r\n          {text}\r\n        </TruncatedText>\r\n      </CenterWrapper>\r\n    </TypographyVariant>\r\n  );\r\n};\r\n\r\nTextWidget.propTypes = {\r\n  text: string.isRequired,\r\n  textSize: string.isRequired,\r\n  isVertical: bool.isRequired\r\n};\r\n\r\nexport default TextWidget;\r\n","import React from 'react';\r\nimport { string } from 'prop-types';\r\nimport { Caption, WidgetButton } from '../../styled';\r\n\r\nconst BambooDeploymentWidget = ({\r\n  url,\r\n  releaseName,\r\n  lifeCycleState,\r\n  deploymentState\r\n}) => {\r\n  return (\r\n    <>\r\n      <Caption>Deployment state: {deploymentState}</Caption>\r\n      <Caption>Lifecycle state: {lifeCycleState}</Caption>\r\n      <WidgetButton href={url}>{releaseName}</WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nBambooDeploymentWidget.propTypes = {\r\n  url: string.isRequired,\r\n  releaseName: string.isRequired,\r\n  lifeCycleState: string.isRequired,\r\n  deploymentState: string.isRequired\r\n};\r\n\r\nexport default BambooDeploymentWidget;\r\n","import React from 'react';\r\nimport { string, number } from 'prop-types';\r\n\r\nimport { Caption, WidgetButton } from '../../styled';\r\n\r\nconst BambooPlanWidget = ({ url, number, lifeCycleState }) => {\r\n  return (\r\n    <>\r\n      <Caption>State: {lifeCycleState}</Caption>\r\n      <WidgetButton href={url}>#{number}</WidgetButton>\r\n    </>\r\n  );\r\n};\r\n\r\nBambooPlanWidget.propTypes = {\r\n  url: string.isRequired,\r\n  number: number.isRequired,\r\n  lifeCycleState: string.isRequired\r\n};\r\n\r\nexport default BambooPlanWidget;\r\n","import moment from 'moment-timezone';\r\n\r\nexport const getDateTime = (timezone, format) => {\r\n  return moment.tz(new Date(), timezone).format(format);\r\n};\r\n\r\nconst getGmtTimezones = () => {\r\n  const allTimezones = moment.tz.names();\r\n  const duplicatedTimezones = ['Etc/GMT', 'Etc/GMT+0', 'Etc/GMT0'];\r\n\r\n  const gmtSort = (a, b) => {\r\n    const parts = {\r\n      a: a.split('T'),\r\n      b: b.split('T')\r\n    };\r\n    return parseInt(parts.b[1]) - parseInt(parts.a[1]);\r\n  };\r\n\r\n  const gmtTimezones = allTimezones\r\n    .filter(\r\n      timezone =>\r\n        timezone.includes('Etc/GMT') && !duplicatedTimezones.includes(timezone)\r\n    )\r\n    .sort(gmtSort)\r\n    .map(timezone => {\r\n      const displayName = timezone\r\n        .replace('Etc/', '')\r\n        .replace(/[+-]/g, c => (c === '+' ? '-' : '+')); //swap '+' sign with '-' sign to preserve correct time\r\n      return {\r\n        display: displayName,\r\n        value: timezone\r\n      };\r\n    });\r\n\r\n  gmtTimezones.splice(0, 0, {\r\n    display: 'Current time zone',\r\n    value: moment.tz.guess()\r\n  });\r\n\r\n  return gmtTimezones;\r\n};\r\n\r\nexport const GMT_TIMEZONES = getGmtTimezones();\r\n\r\nexport const DATE_FORMATS = [\r\n  {\r\n    display: '29/08/2019',\r\n    value: 'DD/MM/YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29/08/2019',\r\n    value: 'dddd, DD/MM/YYYY'\r\n  },\r\n  {\r\n    display: '29 Aug 2019',\r\n    value: 'DD MMM YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29 Aug 2019',\r\n    value: 'dddd, DD MMM YYYY'\r\n  },\r\n  {\r\n    display: '29th August 2019',\r\n    value: 'Do MMMM YYYY'\r\n  },\r\n  {\r\n    display: 'Friday, 29th August 2019',\r\n    value: 'dddd, Do MMMM YYYY'\r\n  }\r\n];\r\n\r\nexport const TIME_FORMATS = [\r\n  {\r\n    display: '12-hour (AM/PM)',\r\n    value: 'h:mm:ss a'\r\n  },\r\n  {\r\n    display: '24-hour',\r\n    value: 'HH:mm:ss'\r\n  }\r\n];\r\n","import styled from '@emotion/styled/macro';\r\n\r\nexport const TimePre = styled.pre`\r\n  font-weight: bold;\r\n  font-family: inherit;\r\n  font-size: 180%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const DatePre = styled.pre`\r\n  font-family: inherit;\r\n  margin: 0.25em 0 auto;\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { string } from 'prop-types';\r\n\r\nimport { useInterval } from '../../../../hooks';\r\nimport { getDateTime } from './helpers';\r\n\r\nimport { Typography } from '@material-ui/core';\r\nimport { DatePre, TimePre } from './styled';\r\n\r\nconst WorldClockWidget = props => {\r\n  const {\r\n    timeZoneId,\r\n    dateFormat,\r\n    timeFormat,\r\n    displayDate,\r\n    displayTime,\r\n    textSize\r\n  } = props;\r\n\r\n  const date = getDateTime(timeZoneId, dateFormat);\r\n\r\n  const initTime = getDateTime(timeZoneId, timeFormat);\r\n  const [time, setTime] = useState(initTime);\r\n\r\n  useInterval(() => {\r\n    setTime(getDateTime(timeZoneId, timeFormat));\r\n  }, 1000);\r\n\r\n  return (\r\n    <Typography variant={textSize}>\r\n      {displayTime && <TimePre>{time}</TimePre>}\r\n      {displayDate && <DatePre>{date}</DatePre>}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nWorldClockWidget.propTypes = {\r\n  timeZoneId: string.isRequired,\r\n  dateFormat: string.isRequired,\r\n  timeFormat: string.isRequired,\r\n  textSize: string\r\n};\r\n\r\nWorldClockWidget.defaultProps = {\r\n  textSize: 'h5'\r\n};\r\n\r\nexport default WorldClockWidget;\r\n","const getNextStatus = status => {\r\n  const statusArray = ['OK', 'FAIL', 'UNKNOWN'];\r\n  const statusIndex = statusArray.findIndex(element => element === status);\r\n\r\n  let nextStatusIndex = 0;\r\n\r\n  if (statusIndex !== -1) {\r\n    nextStatusIndex =\r\n      statusIndex < statusArray.length - 1 ? statusIndex + 1 : 0;\r\n  } else {\r\n    nextStatusIndex = statusArray.findIndex(element => element === 'UNKNOWN');\r\n  }\r\n\r\n  return statusArray[nextStatusIndex];\r\n};\r\n\r\nexport default getNextStatus;\r\n","import React from 'react';\r\nimport {\r\n  Check,\r\n  Close,\r\n  IndeterminateCheckBoxOutlined\r\n} from '@material-ui/icons';\r\n\r\nconst StatusIcon = ({ status, size }) => {\r\n  const iconComponents = {\r\n    OK: Check,\r\n    FAIL: Close,\r\n    UNKNOWN: IndeterminateCheckBoxOutlined\r\n  };\r\n\r\n  const IconComponent =\r\n    status in iconComponents\r\n      ? iconComponents[status]\r\n      : iconComponents['UNKNOWN'];\r\n\r\n  return <IconComponent fontSize={size} />;\r\n};\r\n\r\nexport default StatusIcon;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { setWidgetState } from '../../../../actions/thunks';\r\nimport getNextStatus from './helpers';\r\n\r\nimport { WidgetIconButton } from '../../../styled';\r\nimport StatusIcon from '../../../StatusIcon';\r\n\r\nconst CheckboxWidget = props => {\r\n  const { id } = props;\r\n  const { status } = useSelector(({ widgets }) => widgets.widgetsById[id]);\r\n  const dispatch = useDispatch();\r\n\r\n  const ariaCheckedStatusMap = {\r\n    OK: true,\r\n    FAIL: false,\r\n    UNKNOWN: 'mixed'\r\n  };\r\n\r\n  const handleChangeStatus = () => {\r\n    dispatch(\r\n      setWidgetState({\r\n        id,\r\n        status: getNextStatus(status)\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <WidgetIconButton\r\n      aria-label=\"Toggle status\"\r\n      aria-checked={ariaCheckedStatusMap[status]}\r\n      data-cy=\"checkbox\"\r\n      onClick={handleChangeStatus}\r\n    >\r\n      <StatusIcon size=\"large\" status={status} />\r\n    </WidgetIconButton>\r\n  );\r\n};\r\n\r\nexport default CheckboxWidget;\r\n","import React from 'react';\r\nimport { object } from 'prop-types';\r\n\r\nimport { Link } from '@material-ui/core';\r\nimport { Caption } from '../../../styled';\r\n\r\nimport { AEM_HEALTH_CHECKS } from '../../../../constants';\r\n\r\nconst AemHealthcheckWidget = ({ healthChecks }) => {\r\n  return (\r\n    <>\r\n      {Object.entries(healthChecks).map(([name, data]) => (\r\n        <Link href={data['url']} target=\"_blank\">\r\n          <Caption key={name}>\r\n            {AEM_HEALTH_CHECKS[name]}: {data['status']}\r\n          </Caption>\r\n        </Link>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nAemHealthcheckWidget.propTypes = {\r\n  healthChecks: object\r\n};\r\n\r\nAemHealthcheckWidget.defaultProps = {\r\n  healthChecks: {}\r\n};\r\n\r\nexport default AemHealthcheckWidget;\r\n","import DefaultWidget from './types/DefaultWidget';\r\nimport ExampleWidget from './types/ExampleWidget';\r\nimport JenkinsJobWidget from './types/JenkinsJobWidget';\r\nimport SonarQubeWidget from './types/SonarQubeWidget';\r\nimport ServiceCheckWidget from './types/ServiceCheckWidget';\r\nimport TextWidget from './types/TextWidget';\r\nimport BambooDeploymentWidget from './types/BambooDeploymentWidget';\r\nimport BambooPlanWidget from './types/BambooPlanWidget';\r\nimport WorldClockWidget from './types/WorldClockWidget';\r\nimport CheckboxWidget from './types/CheckboxWidget';\r\nimport AemHealthcheckWidget from './types/AemHealthcheckWidget';\r\nimport IframeEmbedWidget from './types/IframeEmbedWidget';\r\n\r\nconst widgetTypes = {\r\n  DefaultWidget: {\r\n    name: 'Default',\r\n    component: DefaultWidget\r\n  },\r\n  ExampleWidget: {\r\n    name: 'Example',\r\n    component: ExampleWidget,\r\n    dialogFields: ['SchedulePeriod'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  JenkinsJobWidget: {\r\n    name: 'Jenkins Job',\r\n    component: JenkinsJobWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'Path'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  SonarQubeWidget: {\r\n    name: 'SonarQube',\r\n    component: SonarQubeWidget,\r\n    dialogFields: [\r\n      'EndpointField',\r\n      'SchedulePeriod',\r\n      'Key',\r\n      'IdNumber',\r\n      'SonarQubeMetricsInput'\r\n    ],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 },\r\n      SonarQubeMetricsInput: { minArrayLength: 1 }\r\n    }\r\n  },\r\n  ServiceCheckWidget: {\r\n    name: 'Service Check',\r\n    component: ServiceCheckWidget,\r\n    dialogFields: [\r\n      'SchedulePeriod',\r\n      'RequestMethod',\r\n      'EndpointField',\r\n      'Path',\r\n      'RequestBody',\r\n      'ResponseBody',\r\n      'StatusCode'\r\n    ],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  TextWidget: {\r\n    name: 'Text',\r\n    component: TextWidget,\r\n    dialogFields: ['Text', 'TextSize', 'TextOrientation'],\r\n    validationConstraints: {\r\n      Text: { max: 240 }\r\n    }\r\n  },\r\n  BambooPlanWidget: {\r\n    name: 'Bamboo Plan',\r\n    component: BambooPlanWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'IdString'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  BambooDeploymentWidget: {\r\n    name: 'Bamboo Deployment',\r\n    component: BambooDeploymentWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'IdString'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 }\r\n    }\r\n  },\r\n  WorldClockWidget: {\r\n    name: 'World Clock',\r\n    component: WorldClockWidget,\r\n    dialogFields: [\r\n      'TimeZoneId',\r\n      'DateFormat',\r\n      'TimeFormat',\r\n      'DisplayDate',\r\n      'DisplayTime',\r\n      'TextSize'\r\n    ]\r\n  },\r\n  IframeEmbedWidget: {\r\n    name: 'Iframe Embed',\r\n    component: IframeEmbedWidget,\r\n    dialogFields: ['IFrameURL']\r\n  },\r\n  CheckboxWidget: {\r\n    name: 'Checkbox',\r\n    component: CheckboxWidget,\r\n    showUpdateTime: true\r\n  },\r\n  AemHealthcheckWidget: {\r\n    name: 'AEM Healthcheck',\r\n    component: AemHealthcheckWidget,\r\n    dialogFields: ['EndpointField', 'SchedulePeriod', 'AemHealthcheckInput'],\r\n    showUpdateTime: true,\r\n    validationConstraints: {\r\n      SchedulePeriod: { min: 3 },\r\n      AemHealthcheckInput: { minArrayLength: 1 }\r\n    }\r\n  }\r\n};\r\n\r\nexport default widgetTypes;\r\n","import React from 'react';\r\nimport { string } from 'prop-types';\r\n\r\nimport { attachHttp } from './helpers';\r\n\r\nimport { StyledIframe } from '../../../styled';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst IframeEmbedWidget = ({ iframeUrl }) => {\r\n  if (iframeUrl) {\r\n    return <StyledIframe url={attachHttp(iframeUrl)} />;\r\n  } else {\r\n    return <Typography variant=\"h5\">URL is blank</Typography>;\r\n  }\r\n};\r\n\r\nIframeEmbedWidget.propTypes = {\r\n  iframeUrl: string.isRequired\r\n};\r\n\r\nexport default IframeEmbedWidget;\r\n","const HTTP = 'http://';\r\nconst WWW = 'www';\r\n\r\nexport const attachHttp = url => {\r\n  if (url.startsWith(WWW)) {\r\n    return HTTP + url;\r\n  }\r\n  return url;\r\n};\r\n","import { sortByKey } from '../../../helpers';\r\n\r\nexport const parseWidgetTypes = widgetTypes => {\r\n  const sortedWidgetTypes = sortByKey(widgetTypes, 'name');\r\n\r\n  return Object.entries(sortedWidgetTypes).reduce((obj, [type, { name }]) => {\r\n    return [\r\n      ...obj,\r\n      {\r\n        display: name,\r\n        value: type\r\n      }\r\n    ];\r\n  }, []);\r\n};\r\n\r\nexport const transformMinValueToHalf = () => {\r\n  let prevValue;\r\n\r\n  return value => {\r\n    if (value < 1) {\r\n      return (prevValue = 0.5);\r\n    }\r\n\r\n    if (prevValue === 0.5) {\r\n      return (prevValue = 1);\r\n    }\r\n\r\n    return (prevValue =\r\n      value < prevValue ? Math.floor(value) : Math.ceil(value));\r\n  };\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { FormControl, InputLabel, Input, Select } from '@material-ui/core';\r\nimport { getToken } from '../utils/auth';\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nconst DropdownField = props => {\r\n  const {\r\n    onChange,\r\n    id,\r\n    label,\r\n    value,\r\n    name,\r\n    children,\r\n    dropdownItems,\r\n    itemsUrl,\r\n    dataCy,\r\n    ...other\r\n  } = props;\r\n  const initialLoaded = !itemsUrl;\r\n  const [options, setOptions] = useState(dropdownItems);\r\n  const [loaded, setLoaded] = useState(initialLoaded);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  useEffect(() => {\r\n    if (itemsUrl) {\r\n      const init = isAuthenticated\r\n        ? {\r\n            headers: {\r\n              Authorization: getToken()\r\n            }\r\n          }\r\n        : undefined;\r\n\r\n      fetch(itemsUrl, init)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setOptions(data);\r\n          setLoaded(true);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n  }, [itemsUrl, isAuthenticated]);\r\n\r\n  return (\r\n    <FormControl>\r\n      <InputLabel shrink htmlFor={id}>\r\n        {label}\r\n      </InputLabel>\r\n      <Select\r\n        onChange={onChange}\r\n        value={value}\r\n        input={<Input name={name} id={id} />}\r\n        name={name}\r\n        SelectDisplayProps={other}\r\n        data-cy={dataCy}\r\n      >\r\n        {loaded && children(options)}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nDropdownField.defaultProps = {\r\n  value: ''\r\n};\r\n\r\nexport default DropdownField;\r\n","import React from 'react';\r\nimport { string } from 'prop-types';\r\n\r\nimport { MenuItem } from '@material-ui/core';\r\nimport DropdownField from '../../DropdownField';\r\n\r\nconst EndpointInput = props => {\r\n  return (\r\n    <DropdownField {...props}>\r\n      {endpoints =>\r\n        endpoints.map(({ id, label }) => (\r\n          <MenuItem key={id} value={id}>\r\n            {label}\r\n          </MenuItem>\r\n        ))\r\n      }\r\n    </DropdownField>\r\n  );\r\n};\r\n\r\nEndpointInput.propTypes = {\r\n  value: string.isRequired\r\n};\r\n\r\nexport default EndpointInput;\r\n","import React from 'react';\r\nimport { node, any } from 'prop-types';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst TabPanel = ({ children, value, index, ...other }) => {\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      {...other}\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nTabPanel.propTypes = {\r\n  children: node,\r\n  index: any.isRequired,\r\n  value: any.isRequired\r\n};\r\n\r\nexport default TabPanel;\r\n","import React from 'react';\r\n\r\nconst ValidationMessages = ({ className, messages, ...others }) => (\r\n  <>\r\n    {messages !== undefined && (\r\n      <ul className={className} {...others}>\r\n        {messages.map((message, index) => (\r\n          <li key={index}>{message}</li>\r\n        ))}\r\n      </ul>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default ValidationMessages;\r\n","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst CancelButton = ({ handleCancelClick, className, ...other }) => (\r\n  <Button\r\n    onClick={handleCancelClick}\r\n    className={className}\r\n    variant=\"contained\"\r\n    color=\"secondary\"\r\n    {...other}\r\n  >\r\n    Cancel\r\n  </Button>\r\n);\r\n\r\nexport default CancelButton;\r\n","import styled from '@emotion/styled/macro';\r\nimport { TextField, Tabs } from '@material-ui/core';\r\nimport TabPanel from '../TabPanel';\r\nimport ValidationMessages from '../ValidationMessages';\r\nimport CancelButton from '../CancelButton';\r\n\r\nexport const StyledNumberField = styled(TextField)`\r\n  flex-basis: calc(50% - 18px);\r\n`;\r\n\r\nexport const StyledTabPanel = styled(TabPanel)`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const StyledTabs = styled(Tabs)`\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const StyledValidationMessages = styled(ValidationMessages)`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nexport const StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst NumberInput = ({ min, step, error, dataCy, ...other }) => {\r\n  return (\r\n    <TextField\r\n      type=\"number\"\r\n      inputProps={{ min, step, 'data-cy': dataCy }}\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NumberInput;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst TextInput = ({ error, dataCy, values, ...other }) => {\r\n  return (\r\n    <TextField\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      inputProps={{ 'data-cy': dataCy }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { ALL_SONARQUBE_METRICS } from '../../../constants';\r\n\r\nimport {\r\n  Input,\r\n  InputLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n  ListItemText,\r\n  Select,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\n\r\nimport { StyledFormControl } from './../../styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst SonarQubeMetricsInput = ({ onChange, value, error, dataCy }) => {\r\n  const inputId = 'sonarqube-metrics-input';\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledFormControl error={hasError(error)} theme={theme}>\r\n      <InputLabel htmlFor={inputId}>Metrics</InputLabel>\r\n      <Select\r\n        multiple\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input id={inputId} />}\r\n        renderValue={value => `${value.length} selected`}\r\n        data-cy={dataCy}\r\n      >\r\n        {ALL_SONARQUBE_METRICS.map(name => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={value.includes(name)} />\r\n            <ListItemText primary={name} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {hasError(error) && <FormHelperText>{error}</FormHelperText>}\r\n    </StyledFormControl>\r\n  );\r\n};\r\n\r\nexport default SonarQubeMetricsInput;\r\n","import React from 'react';\r\nimport { MenuItem } from '@material-ui/core';\r\n\r\nimport DropdownField from '../../DropdownField';\r\nimport { StyledFormControlForDropdown } from '../../styled';\r\n\r\n/**\r\n * Displays dropdown field using passed array of objects with the following properties: display, value.\r\n * Example: [\r\n *  {\r\n *      display: \"name1\"\r\n *      value: \"value1\"\r\n *  },\r\n *  {\r\n *      display: \"name2\"\r\n *      value: \"value2\"\r\n *  }\r\n * ]\r\n */\r\nconst DisplayValueSelect = props => {\r\n  return (\r\n    <StyledFormControlForDropdown>\r\n      <DropdownField {...props}>\r\n        {items =>\r\n          items.map(item => (\r\n            <MenuItem key={item.value} value={item.value}>\r\n              {item.display}\r\n            </MenuItem>\r\n          ))\r\n        }\r\n      </DropdownField>\r\n    </StyledFormControlForDropdown>\r\n  );\r\n};\r\n\r\nexport default DisplayValueSelect;\r\n","import React from 'react';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { StyledValidationMessages } from '../../WidgetForm/styled';\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst MultilineTextInput = ({ error, dataCy, values, ...other }) => {\r\n  return (\r\n    <TextField\r\n      InputLabelProps={{\r\n        shrink: true\r\n      }}\r\n      margin=\"normal\"\r\n      multiline={true}\r\n      error={hasError(error)}\r\n      FormHelperTextProps={{ component: 'div' }}\r\n      helperText={\r\n        <StyledValidationMessages\r\n          messages={error}\r\n          data-cy={`${dataCy}-error`}\r\n        />\r\n      }\r\n      inputProps={{ 'data-cy': dataCy }}\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default MultilineTextInput;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { getColor } from '../../../helpers';\r\n\r\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\r\n\r\nexport const StyledCheckbox = styled(Checkbox)`\r\n  color: ${getColor('primary')};\r\n`;\r\n\r\nconst CheckboxInput = ({ value, onChange, dataCy, ...other }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <StyledCheckbox\r\n          color=\"primary\"\r\n          checked={value}\r\n          onChange={onChange}\r\n          data-cy={dataCy}\r\n          theme={theme}\r\n        />\r\n      }\r\n      {...other}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CheckboxInput;\r\n","import React from 'react';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { AEM_HEALTH_CHECKS } from '../../../constants';\r\n\r\nimport {\r\n  Input,\r\n  InputLabel,\r\n  Checkbox,\r\n  MenuItem,\r\n  ListItemText,\r\n  Select,\r\n  FormHelperText\r\n} from '@material-ui/core';\r\nimport { StyledFormControl } from './../../styled';\r\n\r\nimport { hasError } from '../../../helpers';\r\n\r\nconst AemHealthcheckInput = ({ onChange, value, error, dataCy }) => {\r\n  const theme = useTheme();\r\n  const inputId = 'aemhealthcheck-metrics-input';\r\n\r\n  return (\r\n    <StyledFormControl error={hasError(error)} theme={theme}>\r\n      <InputLabel htmlFor={inputId}>Health Checks</InputLabel>\r\n      <Select\r\n        multiple\r\n        value={value}\r\n        onChange={onChange}\r\n        input={<Input id={inputId} />}\r\n        renderValue={value => `${value.length} selected`}\r\n        data-cy={dataCy}\r\n      >\r\n        {Object.entries(AEM_HEALTH_CHECKS).map(([name, label]) => (\r\n          <MenuItem key={name} value={name}>\r\n            <Checkbox checked={value.includes(name)} />\r\n            <ListItemText primary={label} />\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n      {hasError(error) && (\r\n        <FormHelperText data-cy={`${dataCy}-error`}>{error}</FormHelperText>\r\n      )}\r\n    </StyledFormControl>\r\n  );\r\n};\r\n\r\nexport default AemHealthcheckInput;\r\n","import React from 'react';\r\nimport { elementType, func, string } from 'prop-types';\r\n\r\nconst conditionallyHidden = (Component, conditionField, condition) => ({\r\n  values,\r\n  ...other\r\n}) => {\r\n  if (values[conditionField] === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return condition(values[conditionField]) ? (\r\n    <Component values={values} {...other} />\r\n  ) : null;\r\n};\r\n\r\nconditionallyHidden.propTypes = {\r\n  Component: elementType,\r\n  condition: func,\r\n  conditionField: string\r\n};\r\n\r\nexport default conditionallyHidden;\r\n","import React from 'react';\r\n\r\nimport { FormControlLabel, FormControl, Switch } from '@material-ui/core';\r\n\r\nconst SwitchInput = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  checkboxValue,\r\n  dataCy,\r\n  ...other\r\n}) => {\r\n  return (\r\n    <FormControl margin=\"normal\">\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={value}\r\n            onChange={onChange}\r\n            color=\"primary\"\r\n            value={checkboxValue}\r\n            inputProps={{ 'data-cy': dataCy }}\r\n            {...other}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SwitchInput;\r\n","import styled from '@emotion/styled/macro';\r\nimport NumberInput from './NumberInput';\r\n\r\nexport const StyledNumberInput = styled(NumberInput)`\r\n  flex-basis: calc(50% - 18px);\r\n`;\r\n","import { string, number, boolean, array } from 'yup';\r\n\r\nimport {\r\n  DATE_FORMATS,\r\n  GMT_TIMEZONES,\r\n  TIME_FORMATS\r\n} from '../types/WorldClockWidget/helpers';\r\nimport { parseWidgetTypes, transformMinValueToHalf } from './helpers';\r\nimport {\r\n  REQUEST_METHODS,\r\n  TEXT_SIZES,\r\n  validationMessages as vm\r\n} from '../../../constants';\r\nimport { uniqueTitleTestCreator } from '../../validation';\r\nimport widgetTypes from '../../widgets';\r\n\r\nimport EndpointInput from './EndpointInput';\r\nimport NumberInput from './NumberInput';\r\nimport TextInput from './TextInput';\r\nimport SonarQubeMetricsInput from './SonarQubeMetricsInput';\r\nimport DisplayValueSelect from './DisplayValueSelect';\r\nimport MultilineTextInput from './MultilineTextInput';\r\nimport CheckboxInput from './CheckboxInput';\r\nimport AemHealthcheckInput from './AemHealthcheckInput';\r\nimport conditionallyHidden from './conditionallyHidden';\r\nimport SwitchInput from './SwitchInput';\r\nimport { StyledNumberInput } from './styled';\r\n\r\nconst dialogFields = {\r\n  WidgetTypeField: {\r\n    component: DisplayValueSelect,\r\n    name: 'type',\r\n    label: 'Type',\r\n    dropdownItems: parseWidgetTypes(widgetTypes),\r\n    validator: () => string().required(vm.FIELD_REQUIRED())\r\n  },\r\n  TitleField: {\r\n    component: TextInput,\r\n    name: 'title',\r\n    label: 'Title',\r\n    initialValue: 'Title',\r\n    validator: ({ max }) =>\r\n      string()\r\n        .trim()\r\n        .max(max, vm.STRING_LENGTH('Title', max))\r\n  },\r\n  UniqueTitleField: {\r\n    component: TextInput,\r\n    name: 'title',\r\n    label: 'Title',\r\n    initialValue: 'Title',\r\n    validator: ({ max, boardId, boards }) =>\r\n      string()\r\n        .trim()\r\n        .max(max, vm.STRING_LENGTH('Title', max))\r\n        .test(uniqueTitleTestCreator(boardId, boards))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  ColumnField: {\r\n    component: NumberInput,\r\n    name: 'columns',\r\n    label: 'Columns',\r\n    initialValue: 1,\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Columns', min))\r\n        .max(max, vm.NUMBER_MAX('Columns', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  ColumnFieldSm: {\r\n    component: StyledNumberInput,\r\n    name: 'columns',\r\n    label: 'Columns',\r\n    initialValue: 1,\r\n    valueUpdater: transformMinValueToHalf(),\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Columns', min))\r\n        .max(max, vm.NUMBER_MAX('Columns', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  RowFieldSm: {\r\n    component: StyledNumberInput,\r\n    name: 'rows',\r\n    label: 'Rows',\r\n    initialValue: 1,\r\n    valueUpdater: transformMinValueToHalf(),\r\n    validator: ({ min, max }) =>\r\n      number()\r\n        .min(min, vm.NUMBER_MIN('Rows', min))\r\n        .max(max, vm.NUMBER_MAX('Rows', max))\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  NewLineField: {\r\n    component: SwitchInput,\r\n    name: 'goNewLine',\r\n    label: 'Go to new line',\r\n    checkboxValue: 'goNewLine',\r\n    validator: () => boolean()\r\n  },\r\n  DisabledField: {\r\n    component: SwitchInput,\r\n    name: 'disabled',\r\n    label: 'Disabled',\r\n    checkboxValue: 'disabled',\r\n    validator: () => boolean()\r\n  },\r\n  AutoSwitchField: {\r\n    component: SwitchInput,\r\n    name: 'autoSwitch',\r\n    label: 'Auto Switch',\r\n    checkboxValue: 'autoSwitch',\r\n    validator: () => boolean()\r\n  },\r\n  SwitchInterval: {\r\n    component: conditionallyHidden(NumberInput, 'autoSwitch', value => value),\r\n    name: 'switchInterval',\r\n    label: 'Switch Interval [sec]',\r\n    validator: ({ min }) =>\r\n      number().when('autoSwitch', {\r\n        is: true,\r\n        then: number()\r\n          .min(min, vm.NUMBER_MIN('Switch interval', min))\r\n          .required(),\r\n        otherwise: number().notRequired()\r\n      })\r\n  },\r\n  EndpointField: {\r\n    component: EndpointInput,\r\n    name: 'endpoint',\r\n    label: 'Endpoint',\r\n    itemsUrl: '/api/endpoints',\r\n    validator: () => string()\r\n  },\r\n  SchedulePeriod: {\r\n    component: NumberInput,\r\n    name: 'schedulePeriod',\r\n    label: 'Schedule Period [sec] (if 0 will run once)',\r\n    min: 0,\r\n    step: 10,\r\n    initialValue: 120,\r\n    validator: ({ min }) =>\r\n      number().min(min, vm.NUMBER_MIN('Schedule period', min))\r\n  },\r\n  Path: {\r\n    component: TextInput,\r\n    name: 'path',\r\n    label: 'Path',\r\n    validator: () => string()\r\n  },\r\n  URL: {\r\n    component: TextInput,\r\n    name: 'url',\r\n    label: 'URL',\r\n    validator: () => string().url(vm.INVALID_URL())\r\n  },\r\n  IFrameURL: {\r\n    component: TextInput,\r\n    name: 'iframeUrl',\r\n    label: 'URL',\r\n    validator: () => string().url(vm.INVALID_URL())\r\n  },\r\n  IdString: {\r\n    component: TextInput,\r\n    name: 'idString',\r\n    label: 'ID',\r\n    validator: () => string()\r\n  },\r\n  IdNumber: {\r\n    component: NumberInput,\r\n    name: 'idNumber',\r\n    label: 'ID',\r\n    step: 1,\r\n    validator: () => number()\r\n  },\r\n  Key: {\r\n    component: TextInput,\r\n    name: 'keyString',\r\n    label: 'Key',\r\n    validator: () => string()\r\n  },\r\n  SonarQubeMetricsInput: {\r\n    component: SonarQubeMetricsInput,\r\n    name: 'selectedMetrics',\r\n    initialValue: [\r\n      'blocker_violations',\r\n      'critical_violations',\r\n      'major_violations',\r\n      'minor_violations'\r\n    ],\r\n    validator: ({ minArrayLength = 0 }) =>\r\n      array()\r\n        .ensure()\r\n        .min(minArrayLength, vm.FIELD_MIN_ITEMS())\r\n        .of(string())\r\n  },\r\n  AemHealthcheckInput: {\r\n    component: AemHealthcheckInput,\r\n    name: 'selectedHealthChecks',\r\n    initialValue: [\r\n      'slingJobs',\r\n      'systemchecks',\r\n      'inactiveBundles',\r\n      'DiskSpaceHealthCheck'\r\n    ],\r\n    validator: ({ minArrayLength = 0 }) =>\r\n      array()\r\n        .ensure()\r\n        .min(minArrayLength, vm.FIELD_MIN_ITEMS())\r\n        .of(string())\r\n  },\r\n  StatusCode: {\r\n    component: NumberInput,\r\n    name: 'expectedStatusCode',\r\n    label: 'Expected Status Code',\r\n    min: 0,\r\n    step: 1,\r\n    initialValue: 200,\r\n    validator: () =>\r\n      number()\r\n        .lessThan(600)\r\n        .moreThan(99)\r\n        .required(vm.FIELD_REQUIRED())\r\n  },\r\n  TimeZoneId: {\r\n    component: DisplayValueSelect,\r\n    name: 'timeZoneId',\r\n    label: 'Timezone',\r\n    dropdownItems: GMT_TIMEZONES,\r\n    initialValue: GMT_TIMEZONES[0].value,\r\n    validator: () => string()\r\n  },\r\n  DateFormat: {\r\n    component: DisplayValueSelect,\r\n    name: 'dateFormat',\r\n    label: 'Date Format',\r\n    dropdownItems: DATE_FORMATS,\r\n    initialValue: DATE_FORMATS[1].value,\r\n    validator: () => string()\r\n  },\r\n  TimeFormat: {\r\n    component: DisplayValueSelect,\r\n    name: 'timeFormat',\r\n    label: 'Time Format',\r\n    dropdownItems: TIME_FORMATS,\r\n    initialValue: TIME_FORMATS[1].value,\r\n    validator: () => string()\r\n  },\r\n  DisplayDate: {\r\n    component: CheckboxInput,\r\n    name: 'displayDate',\r\n    label: 'Display date',\r\n    initialValue: true,\r\n    validator: () => boolean()\r\n  },\r\n  DisplayTime: {\r\n    component: CheckboxInput,\r\n    name: 'displayTime',\r\n    label: 'Display time',\r\n    initialValue: true,\r\n    validator: () => boolean()\r\n  },\r\n  Text: {\r\n    component: MultilineTextInput,\r\n    name: 'text',\r\n    label: 'Text',\r\n    validator: () => string()\r\n  },\r\n  RequestBody: {\r\n    component: MultilineTextInput,\r\n    name: 'body',\r\n    label: 'Request Body (Json format or empty)',\r\n    validator: () => string()\r\n  },\r\n  ResponseBody: {\r\n    component: MultilineTextInput,\r\n    name: 'expectedResponseBody',\r\n    label: 'Response Body Fragment',\r\n    validator: () => string()\r\n  },\r\n  TextSize: {\r\n    component: DisplayValueSelect,\r\n    name: 'textSize',\r\n    label: 'Text Size',\r\n    dropdownItems: TEXT_SIZES,\r\n    initialValue: TEXT_SIZES[3].value,\r\n    validator: () => string()\r\n  },\r\n  RequestMethod: {\r\n    component: DisplayValueSelect,\r\n    name: 'requestMethod',\r\n    label: 'Request Method',\r\n    dropdownItems: REQUEST_METHODS,\r\n    initialValue: REQUEST_METHODS[0].value,\r\n    validator: () => string()\r\n  },\r\n  TextOrientation: {\r\n    component: CheckboxInput,\r\n    name: 'isVertical',\r\n    label: 'Vertical Text',\r\n    initialValue: false,\r\n    validator: () => boolean()\r\n  }\r\n};\r\n\r\nexport default dialogFields;\r\n","import { object } from 'yup';\r\n\r\nimport { splitPropsGroupName } from '../../helpers';\r\n\r\nimport dialogFields from '../widgets/dialogFields';\r\nimport { validationMessages as vm } from '../../constants';\r\n\r\nexport const createValidationSchema = (fields, constraints) => {\r\n  const validators = Array.prototype\r\n    .concat(...fields)\r\n    .reduce((schema, fieldName) => {\r\n      const { name, validator } = dialogFields[fieldName];\r\n      const [groupName, propName] = splitPropsGroupName(name);\r\n      const constraint =\r\n        constraints[fieldName] !== undefined ? constraints[fieldName] : {};\r\n      let newSchema;\r\n\r\n      if (groupName) {\r\n        const groupSchema =\r\n          schema[groupName] !== undefined ? schema[groupName] : object({});\r\n\r\n        newSchema = {\r\n          ...schema,\r\n          [groupName]: groupSchema.shape({ [propName]: validator(constraint) })\r\n        };\r\n      } else {\r\n        newSchema = { ...schema, [propName]: validator(constraint) };\r\n      }\r\n\r\n      return newSchema;\r\n    }, {});\r\n\r\n  const newValidationSchema = object().shape(validators);\r\n\r\n  return newValidationSchema;\r\n};\r\n\r\nexport const uniqueTitleTestCreator = (boardId, boards) => ({\r\n  name: 'uniqueTitle',\r\n  params: { boards, boardId },\r\n  message: vm.UNIQUE_FIELD(),\r\n  exclusive: true,\r\n  test: title =>\r\n    boards.every(board => board.title !== title || board.id === boardId)\r\n});\r\n","import { createValidationSchema } from '../validation';\r\n\r\nimport widgetTypes from '../widgets';\r\n\r\nexport const createWidgetValidationSchema = (\r\n  type,\r\n  fields,\r\n  constraints = {}\r\n) => {\r\n  const widgetType = widgetTypes[type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const allFields = [...fields, ...dialogFieldNames];\r\n  const widgetConstraints =\r\n    widgetType && widgetType.validationConstraints\r\n      ? widgetType.validationConstraints\r\n      : {};\r\n\r\n  const allConstraints = { ...widgetConstraints, ...constraints };\r\n\r\n  return createValidationSchema(allFields, allConstraints);\r\n};\r\n","import React from 'react';\r\n\r\nimport { camelToKebab, createValueRef } from './helpers';\r\n\r\nimport { StyledFieldset } from '../styled';\r\nimport { Box } from '@material-ui/core';\r\nimport dialogFields from '../widgets/dialogFields';\r\n\r\nconst DynamicForm = ({ values, fields, handleChange, errors, rootName }) => {\r\n  const createField = field => {\r\n    const {\r\n      component: DialogField,\r\n      name,\r\n      initialValue = '',\r\n      valueUpdater,\r\n      validator,\r\n      ...dialogFieldProps\r\n    } = dialogFields[field];\r\n\r\n    const valueRef = createValueRef(values, initialValue, name);\r\n\r\n    return (\r\n      <DialogField\r\n        key={name}\r\n        values={values}\r\n        value={valueRef}\r\n        onChange={handleChange(name, valueUpdater)}\r\n        error={errors[name]}\r\n        dataCy={`${rootName}-${camelToKebab(name)}-input`}\r\n        {...dialogFieldProps}\r\n      />\r\n    );\r\n  };\r\n\r\n  const createGroupedFields = groupedFields => {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        {groupedFields.map(field => {\r\n          return createField(field);\r\n        })}\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledFieldset component=\"fieldset\">\r\n        {fields.map(field => {\r\n          if (typeof field === 'string') {\r\n            return createField(field);\r\n          } else {\r\n            return createGroupedFields(field);\r\n          }\r\n        })}\r\n      </StyledFieldset>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DynamicForm;\r\n","import { splitPropsGroupName } from '../../helpers';\r\n\r\nexport const camelToKebab = string =>\r\n  string.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase();\r\n\r\nexport const createValueRef = (values, initialValue, name) => {\r\n  const [groupName, propName] = splitPropsGroupName(name);\r\n\r\n  if (groupName) {\r\n    if (!values[groupName]) {\r\n      values[groupName] = {};\r\n    }\r\n\r\n    if (values[groupName][propName] === undefined) {\r\n      values[groupName][propName] = initialValue;\r\n    }\r\n\r\n    return values[groupName][propName];\r\n  }\r\n\r\n  if (values[propName] === undefined) {\r\n    values[propName] = initialValue;\r\n  }\r\n\r\n  return values[propName];\r\n};\r\n","import React from 'react';\r\nimport { func, object, string } from 'prop-types';\r\n\r\nimport widgetTypes from '../widgets';\r\n\r\nimport DynamicForm from '../DynamicForm';\r\n\r\nconst WidgetTypeForm = ({ values, type, handleChange, errors, ...other }) => {\r\n  const widgetType = widgetTypes[type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const hasDialogFields = dialogFieldNames.length !== 0;\r\n\r\n  return (\r\n    hasDialogFields && (\r\n      <DynamicForm\r\n        values={values}\r\n        handleChange={handleChange}\r\n        fields={dialogFieldNames}\r\n        errors={errors}\r\n        {...other}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nWidgetTypeForm.propTypes = {\r\n  handleChange: func.isRequired,\r\n  type: string.isRequired,\r\n  values: object.isRequired\r\n};\r\n\r\nexport default WidgetTypeForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { string, number, bool } from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport widgetTypes from '../widgets';\r\nimport { useFormData } from '../../hooks';\r\n\r\nimport { createWidgetValidationSchema } from './validators';\r\nimport {\r\n  WIDGET_TITLE_LENGTH_LIMIT,\r\n  WIDGET_COLUMNS_MIN,\r\n  WIDGET_ROWS_MIN,\r\n  WIDGET_ROWS_MAX\r\n} from '../../constants';\r\n\r\nimport { Tab, Button } from '@material-ui/core';\r\nimport DynamicForm from '../DynamicForm';\r\nimport WidgetTypeForm from '../WidgetTypeForm';\r\nimport { StyledTabPanel, StyledTabs, StyledCancelButton } from './styled';\r\n\r\nconst WidgetForm = ({ handleSubmit, handleCancel, ...initialFormValues }) => {\r\n  const boardColumns = useSelector(\r\n    ({ ui, boards }) => boards.boardsById[ui.currentBoard].columns\r\n  );\r\n\r\n  const generalFields = [\r\n    'WidgetTypeField',\r\n    'TitleField',\r\n    ['ColumnFieldSm', 'RowFieldSm'],\r\n    'NewLineField',\r\n    'DisabledField'\r\n  ];\r\n  const constraints = {\r\n    TitleField: { max: WIDGET_TITLE_LENGTH_LIMIT },\r\n    ColumnFieldSm: { min: WIDGET_COLUMNS_MIN, max: boardColumns },\r\n    RowFieldSm: { min: WIDGET_ROWS_MIN, max: WIDGET_ROWS_MAX }\r\n  };\r\n\r\n  const {\r\n    values,\r\n    handleChange,\r\n    withValidation,\r\n    errors,\r\n    setValidationSchema\r\n  } = useFormData(initialFormValues, {\r\n    initialSchema: createWidgetValidationSchema(\r\n      initialFormValues.type,\r\n      generalFields,\r\n      constraints\r\n    ),\r\n    onChange: true\r\n  });\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const widgetType = widgetTypes[values.type];\r\n  const dialogFieldNames =\r\n    widgetType && widgetType.dialogFields ? widgetType.dialogFields : [];\r\n  const hasDialogFields = dialogFieldNames.length !== 0;\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const validationSchema = createWidgetValidationSchema(\r\n      values.type,\r\n      generalFields,\r\n      constraints\r\n    );\r\n    setValidationSchema(validationSchema);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [values.type]);\r\n\r\n  return (\r\n    <form onSubmit={withValidation(handleSubmit)} noValidate=\"novalidate\">\r\n      <StyledTabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        variant=\"fullWidth\"\r\n      >\r\n        <Tab label=\"General\" data-cy=\"widget-form-general-tab\" />\r\n        {hasDialogFields && (\r\n          <Tab label={widgetType.name} data-cy=\"widget-form-dynamic-tab\" />\r\n        )}\r\n      </StyledTabs>\r\n      <StyledTabPanel value={tabValue} index={0}>\r\n        <DynamicForm\r\n          values={values}\r\n          fields={generalFields}\r\n          handleChange={handleChange}\r\n          errors={errors}\r\n          rootName=\"widget-form\"\r\n        />\r\n      </StyledTabPanel>\r\n      {hasDialogFields && (\r\n        <StyledTabPanel value={tabValue} index={1}>\r\n          <WidgetTypeForm\r\n            type={values.type}\r\n            values={values}\r\n            errors={errors}\r\n            handleChange={handleChange}\r\n            rootName=\"widget-form\"\r\n          />\r\n        </StyledTabPanel>\r\n      )}\r\n      <Button\r\n        type=\"submit\"\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        data-cy=\"widget-form-submit-button\"\r\n      >\r\n        Save\r\n      </Button>\r\n      <StyledCancelButton\r\n        handleCancelClick={handleCancel}\r\n        data-cy=\"widget-form-cancel-button\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nWidgetForm.propTypes = {\r\n  disabled: bool,\r\n  columns: number,\r\n  goNewLine: bool,\r\n  rows: number,\r\n  title: string,\r\n  type: string\r\n};\r\n\r\nWidgetForm.defaultProps = {\r\n  disabled: false,\r\n  columns: 1,\r\n  goNewLine: false,\r\n  rows: 1,\r\n  title: '',\r\n  type: 'DefaultWidget'\r\n};\r\n\r\nexport default WidgetForm;\r\n","import React from 'react';\r\nimport { func } from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { addNewWidget } from '../actions/thunks';\r\n\r\nimport WidgetForm from './WidgetForm';\r\n\r\nconst AddWidget = ({ closeDialog }) => {\r\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAddWidget = values => {\r\n    dispatch(addNewWidget({ currentBoardId, values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <WidgetForm handleSubmit={handleAddWidget} handleCancel={closeDialog} />\r\n  );\r\n};\r\n\r\nAddWidget.propTypes = {\r\n  closeDialog: func.isRequired\r\n};\r\n\r\nexport default AddWidget;\r\n","import React, { forwardRef } from 'react';\r\nimport { bool, number, object, string } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { mapStatusToColor } from './helpers';\r\nimport { COLUMN_MULTIPLIER, ROW_MULTIPLIER } from '../../constants';\r\n\r\nimport { Card, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nexport const StyledCard = styled(\r\n  forwardRef(\r\n    (\r\n      {\r\n        status,\r\n        columns,\r\n        goNewLine,\r\n        isLoggedIn,\r\n        isDragging,\r\n        isOver,\r\n        rows,\r\n        theme,\r\n        ...other\r\n      },\r\n      ref\r\n    ) => <Card {...other} ref={ref} />\r\n  )\r\n)`\r\n  background: ${({ isDragging, status, theme }) =>\r\n    !isDragging\r\n      ? mapStatusToColor(status, theme)\r\n      : theme.palette.background.paper};\r\n  box-shadow: none;\r\n  cursor: ${({ isLoggedIn }) => (isLoggedIn ? 'move' : 'default')};\r\n  display: flex;\r\n  flex-direction: column;\r\n  grid-column-start: ${({ goNewLine }) => goNewLine === true && 1};\r\n  grid-column-end: span ${({ columns }) => columns * COLUMN_MULTIPLIER};\r\n  grid-row-end: span ${({ rows }) => rows * ROW_MULTIPLIER};\r\n  position: relative;\r\n\r\n  ${({ isDragging, isOver, theme }) =>\r\n    isDragging &&\r\n    `\r\n    &::before {\r\n      background: ${theme.palette.background.paper};\r\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\r\n      border-radius: inherit;\r\n      content: '';\r\n      display: block;\r\n      height: 100%;\r\n      position: absolute;\r\n      z-index: 2;\r\n      opacity: ${isDragging ? 1 : 0};\r\n      width: 100%;\r\n    }\r\n  `}\r\n`;\r\n\r\nStyledCard.propTypes = {\r\n  columns: number.isRequired,\r\n  goNewLine: bool.isRequired,\r\n  rows: number.isRequired,\r\n  status: string.isRequired,\r\n  theme: object.isRequired\r\n};\r\n\r\nexport const StyledCardHeader = styled(CardHeader)`\r\n  z-index: 1;\r\n`;\r\n\r\nexport const StyledCardContent = styled(CardContent)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const ErrorMessage = ({ errorMessage, errorCause }) => {\r\n  return (\r\n    <>\r\n      <Typography paragraph>{errorMessage}</Typography>\r\n      <Typography variant=\"caption\" paragraph>\r\n        {errorCause}\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from 'react';\r\nimport { object, string } from 'prop-types';\r\n\r\nimport widgetTypes from './widgets';\r\n\r\nconst WidgetContent = ({ id, type, content }) => {\r\n  const notFoundMessage = 'Widget type not found';\r\n  const WidgetType = widgetTypes[type]\r\n    ? widgetTypes[type].component\r\n    : () => notFoundMessage;\r\n\r\n  return <WidgetType id={id} {...content} />;\r\n};\r\n\r\nWidgetContent.propTypes = {\r\n  content: object,\r\n  type: string.isRequired\r\n};\r\n\r\nexport default WidgetContent;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const StyledTypography = styled(Typography)`\r\n  display: flex;\r\n  flex: 1;\r\n  align-items: flex-end;\r\n`;\r\n","import React from 'react';\r\n\r\nimport { StyledTypography } from './styled';\r\n\r\nconst LastUpdate = ({ lastUpdateTime }) => {\r\n  return (\r\n    <StyledTypography\r\n      align=\"left\"\r\n      color=\"textSecondary\"\r\n      variant=\"caption\"\r\n      gutterBottom={false}\r\n    >\r\n      Last update: {lastUpdateTime}\r\n    </StyledTypography>\r\n  );\r\n};\r\n\r\nexport default LastUpdate;\r\n","import React from 'react';\r\n\r\nimport { StyledCardContent } from './styled';\r\nimport ErrorMessage from '../ErrorMessage';\r\nimport WidgetContent from '../WidgetContent';\r\nimport LastUpdate from '../LastUpdate';\r\n\r\nexport const mapStatusToColor = (status, theme) => theme.palette.status[status];\r\n\r\nexport const renderCardContent = (\r\n  content,\r\n  showUpdateTime,\r\n  disabled,\r\n  id,\r\n  type\r\n) => {\r\n  return (\r\n    <StyledCardContent>\r\n      {content && content.errorMessage ? (\r\n        <ErrorMessage {...content} />\r\n      ) : !disabled ? (\r\n        <WidgetContent id={id} type={type} content={content} />\r\n      ) : (\r\n        'Disabled'\r\n      )}\r\n      {showUpdateTime && (\r\n        <LastUpdate lastUpdateTime={new Date().toLocaleString()} />\r\n      )}\r\n    </StyledCardContent>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { func, object, string, bool, number } from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { saveWidget } from '../actions/thunks';\r\n\r\nimport WidgetForm from './WidgetForm';\r\n\r\nconst EditWidget = ({ closeDialog, id, widgetTypeData, ...widgetData }) => {\r\n  const initialFormValues = { ...widgetData, ...widgetTypeData };\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEditWidget = values => {\r\n    dispatch(saveWidget({ id, values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <WidgetForm\r\n      handleSubmit={handleEditWidget}\r\n      handleCancel={closeDialog}\r\n      {...initialFormValues}\r\n    />\r\n  );\r\n};\r\n\r\nEditWidget.propTypes = {\r\n  closeDialog: func.isRequired,\r\n  disabled: bool.isRequired,\r\n  columns: number.isRequired,\r\n  goNewLine: bool.isRequired,\r\n  id: string.isRequired,\r\n  rows: number.isRequired,\r\n  title: string,\r\n  type: string.isRequired,\r\n  widgetTypeData: object.isRequired\r\n};\r\n\r\nexport default EditWidget;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { func } from 'prop-types';\r\n\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport { Menu, MenuList, IconButton } from '@material-ui/core';\r\nimport { MoreVert } from '@material-ui/icons';\r\n\r\nconst MoreMenu = ({ children }) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const handleMoreButtonClick = ({ currentTarget }) =>\r\n    setAnchorEl(currentTarget);\r\n\r\n  const handleMoreMenuClose = () => setAnchorEl(null);\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={handleMoreButtonClick}\r\n        aria-label=\"More\"\r\n        aria-controls=\"more-menu\"\r\n        aria-haspopup=\"true\"\r\n        data-cy=\"more-menu-button\"\r\n      >\r\n        <MoreVert />\r\n      </IconButton>\r\n      <Menu\r\n        onClose={handleMoreMenuClose}\r\n        anchorEl={anchorEl}\r\n        id=\"more-menu\"\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n      >\r\n        <MenuList>{children(handleMoreMenuClose)}</MenuList>\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n\r\nMoreMenu.propTypes = {\r\n  children: func.isRequired\r\n};\r\n\r\nexport default MoreMenu;\r\n","import styled from '@emotion/styled/macro';\r\nimport { Box, Button } from '@material-ui/core';\r\n\r\nexport const StyledCancelButton = styled(Button)`\r\n  margin-left: 1em;\r\n`;\r\n\r\nexport const StyledButtonBox = styled(Box)`\r\n  margin-top: 1em;\r\n`;\r\n","import React from 'react';\r\nimport { func, string } from 'prop-types';\r\n\r\nimport { Button, Typography } from '@material-ui/core/index';\r\nimport AppDialog from '../AppDialog';\r\nimport { StyledButtonBox, StyledCancelButton } from './styled';\r\n\r\nconst ConfirmationDialog = props => {\r\n  const {\r\n    open,\r\n    title,\r\n    content,\r\n    handleOk,\r\n    labelOk,\r\n    handleCancel,\r\n    labelCancel\r\n  } = props;\r\n\r\n  return (\r\n    <AppDialog\r\n      handleDialogClose={handleCancel}\r\n      open={open}\r\n      title={title}\r\n      data-cy=\"confirmation-dialog\"\r\n    >\r\n      <>\r\n        <Typography id=\"confirmation-dialog-content\">{content}</Typography>\r\n        <StyledButtonBox display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button\r\n            onClick={handleOk}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            autoFocus\r\n            data-cy=\"confirmation-dialog-ok\"\r\n          >\r\n            {labelOk}\r\n          </Button>\r\n          {handleCancel && (\r\n            <StyledCancelButton\r\n              onClick={handleCancel}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              data-cy=\"confirmation-dialog-cancel\"\r\n            >\r\n              {labelCancel}\r\n            </StyledCancelButton>\r\n          )}\r\n        </StyledButtonBox>\r\n      </>\r\n    </AppDialog>\r\n  );\r\n};\r\n\r\nConfirmationDialog.propTypes = {\r\n  handleOk: func.isRequired,\r\n  content: string,\r\n  labelOk: string,\r\n  labelCancel: string\r\n};\r\n\r\nConfirmationDialog.defaultProps = {\r\n  content: '',\r\n  labelOk: 'OK',\r\n  labelCancel: 'Cancel'\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import React, { useRef } from 'react';\r\nimport { string } from 'prop-types';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { removeWidget, reorderWidgets } from '../../actions/thunks';\r\nimport widgetTypes from '../widgets';\r\nimport { ItemTypes } from '../../constants';\r\nimport { getIsAuthenticated } from '../../selectors';\r\nimport { renderCardContent } from './helpers';\r\n\r\nimport { MenuItem } from '@material-ui/core';\r\nimport { StyledCard, StyledCardHeader } from './styled';\r\nimport AppDialog from '../AppDialog';\r\nimport EditWidget from '../EditWidget';\r\nimport MoreMenu from '../MoreMenu';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst Widget = ({ id, index }) => {\r\n  const widgetData = useSelector(\r\n    state => state.widgets.widgetsById[id],\r\n    shallowEqual\r\n  );\r\n  const {\r\n    id: widgetId,\r\n    isUpdating,\r\n    disabled,\r\n    type,\r\n    status,\r\n    title,\r\n    content,\r\n    config: { columns, goNewLine, rows },\r\n    ...widgetTypeData\r\n  } = widgetData;\r\n  const showUpdateTime = widgetTypes[type]\r\n    ? widgetTypes[type].showUpdateTime\r\n    : false;\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const [\r\n    confirmationDialogOpened,\r\n    openConfirmationDialog,\r\n    closeConfirmationDialog\r\n  ] = useToggle();\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const ref = useRef(null);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.WIDGET, id, index },\r\n    canDrag: isAuthenticated,\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.WIDGET,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const { id: sourceId, index: sourceIndex } = item;\r\n      const targetIndex = index;\r\n\r\n      if (sourceIndex === targetIndex) {\r\n        return;\r\n      }\r\n\r\n      const { left, right } = ref.current.getBoundingClientRect();\r\n      const dropTargetMiddleX = right - (right - left) / 2;\r\n      const { x: dragSourceMouseX } = monitor.getClientOffset();\r\n\r\n      if (\r\n        (sourceIndex < targetIndex && dragSourceMouseX < dropTargetMiddleX) ||\r\n        (sourceIndex > targetIndex && dragSourceMouseX > dropTargetMiddleX)\r\n      ) {\r\n        return;\r\n      }\r\n\r\n      dispatch(reorderWidgets(sourceId, targetIndex));\r\n      item.index = targetIndex;\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      dropResult: monitor.getSourceClientOffset()\r\n    })\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  const handleEditClick = closeMenu => () => {\r\n    openDialog();\r\n    closeMenu();\r\n  };\r\n\r\n  const handleDeleteClick = closeMenu => () => {\r\n    openConfirmationDialog();\r\n    closeMenu();\r\n  };\r\n\r\n  const deleteWidget = () => {\r\n    dispatch(removeWidget(id));\r\n    closeConfirmationDialog();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledCard\r\n        status={status}\r\n        columns={columns}\r\n        goNewLine={goNewLine}\r\n        rows={rows}\r\n        theme={theme}\r\n        isLoggedIn={isAuthenticated}\r\n        isDragging={isDragging}\r\n        isOver={isOver}\r\n        ref={ref}\r\n      >\r\n        {(isAuthenticated || title !== '') && (\r\n          <StyledCardHeader\r\n            avatar={status === 'ERROR_CONFIGURATION' && <WarningIcon />}\r\n            title={title}\r\n            titleTypographyProps={{\r\n              component: 'h3',\r\n              variant: 'subtitle2',\r\n              color: 'textPrimary'\r\n            }}\r\n            action={\r\n              <MoreMenu>\r\n                {closeMenu => (\r\n                  <>\r\n                    <MenuItem\r\n                      onClick={handleEditClick(closeMenu)}\r\n                      data-cy=\"widget-edit\"\r\n                    >\r\n                      Edit\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleDeleteClick(closeMenu)}\r\n                      data-cy=\"widget-delete\"\r\n                    >\r\n                      Delete\r\n                    </MenuItem>\r\n                  </>\r\n                )}\r\n              </MoreMenu>\r\n            }\r\n          />\r\n        )}\r\n        {renderCardContent(content, showUpdateTime, disabled, id, type)}\r\n      </StyledCard>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title={`Edit ${title}`}\r\n        data-cy=\"widget-edit-dialog\"\r\n      >\r\n        <EditWidget\r\n          closeDialog={handleDialogClose}\r\n          content={content}\r\n          id={id}\r\n          title={title}\r\n          disabled={disabled}\r\n          type={type}\r\n          columns={columns}\r\n          goNewLine={goNewLine}\r\n          rows={rows}\r\n          widgetTypeData={widgetTypeData}\r\n        />\r\n      </AppDialog>\r\n      <ConfirmationDialog\r\n        open={confirmationDialogOpened}\r\n        title={`Delete ${title}`}\r\n        content={`Are you sure you want to delete ${title}?`}\r\n        handleOk={deleteWidget}\r\n        labelOk=\"Delete\"\r\n        handleCancel={closeConfirmationDialog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nWidget.propTypes = {\r\n  id: string.isRequired\r\n};\r\n\r\nexport default Widget;\r\n","import React from 'react';\r\nimport { array } from 'prop-types';\r\n\r\nimport Widget from './Widget';\r\n\r\nconst WidgetList = ({ widgets: widgetIds }) => {\r\n  return widgetIds.map((widgetId, index) => (\r\n    <Widget key={widgetId} id={widgetId} index={index} />\r\n  ));\r\n};\r\n\r\nWidgetList.propTypes = {\r\n  widgets: array.isRequired\r\n};\r\n\r\nexport default WidgetList;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { getColor } from '../../helpers';\r\n\r\nimport { Link } from '@reach/router';\r\n\r\nexport const StyledLink = styled(Link)`\r\n  font-size: 16px;\r\n  color: inherit;\r\n  text-decoration: none;\r\n  border-bottom: 2px solid;\r\n  padding-bottom: 4px;\r\n  border-color: ${getColor('primary')};\r\n`;\r\n","import React from 'react';\r\nimport { string, bool } from 'prop-types';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { StyledLink } from './styled';\r\n\r\nconst ErrorPage = ({ title, tip, homeLink, className }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <h3>{tip}</h3>\r\n\r\n        {homeLink && (\r\n          <p>\r\n            You could go back to the{' '}\r\n            <StyledLink to=\"/\" theme={theme}>\r\n              Home page\r\n            </StyledLink>\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorPage.propTypes = {\r\n  title: string,\r\n  tip: string,\r\n  homeLink: bool\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React from 'react';\r\n\r\nimport ErrorPage from './ErrorPage';\r\n\r\nconst NotFound = ({ className }) => (\r\n  <ErrorPage\r\n    title=\"Page not found\"\r\n    tip=\"Maybe you forget to save a new board?\"\r\n    homeLink\r\n    className={className}\r\n  />\r\n);\r\n\r\nexport default NotFound;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport CancelButton from '../CancelButton';\r\n\r\nexport const StyledCancelButton = styled(CancelButton)`\r\n  margin-left: 20px;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { string, number, bool } from 'prop-types';\r\n\r\nimport { useFormData } from '../../hooks';\r\nimport { getBoards } from '../../selectors';\r\nimport { createValidationSchema } from '../validation';\r\n\r\nimport { Button } from '@material-ui/core';\r\nimport DynamicForm from '../DynamicForm';\r\nimport { StyledCancelButton } from './styled';\r\n\r\nimport {\r\n  BOARD_TITLE_LENGTH_LIMIT,\r\n  BOARD_COLUMNS_MIN,\r\n  BOARD_COLUMNS_MAX,\r\n  SWITCH_INTERVAL_MIN\r\n} from '../../constants';\r\n\r\nconst BoardForm = ({\r\n  handleSubmit,\r\n  handleCancel,\r\n  boardId,\r\n  ...initialFormValues\r\n}) => {\r\n  const boards = useSelector(getBoards);\r\n  const formFields = [\r\n    'UniqueTitleField',\r\n    'ColumnField',\r\n    'AutoSwitchField',\r\n    'SwitchInterval'\r\n  ];\r\n  const constraints = {\r\n    UniqueTitleField: {\r\n      max: BOARD_TITLE_LENGTH_LIMIT,\r\n      boardId: boardId,\r\n      boards: boards\r\n    },\r\n    ColumnField: {\r\n      min: BOARD_COLUMNS_MIN,\r\n      max: BOARD_COLUMNS_MAX\r\n    },\r\n    SwitchInterval: {\r\n      min: SWITCH_INTERVAL_MIN\r\n    }\r\n  };\r\n\r\n  const validationSchema = createValidationSchema(formFields, constraints);\r\n  const { values, handleChange, withValidation, errors } = useFormData(\r\n    initialFormValues,\r\n    { initialSchema: validationSchema, onChange: true }\r\n  );\r\n\r\n  return (\r\n    <form onSubmit={withValidation(handleSubmit)} noValidate=\"novalidate\">\r\n      <DynamicForm\r\n        fields={formFields}\r\n        values={values}\r\n        handleChange={handleChange}\r\n        errors={errors}\r\n        rootName=\"board-form\"\r\n      />\r\n      <Button\r\n        color=\"primary\"\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        data-cy=\"board-form-submit-button\"\r\n      >\r\n        Save\r\n      </Button>\r\n      <StyledCancelButton\r\n        handleCancelClick={handleCancel}\r\n        data-cy=\"board-form-cancel-button\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nBoardForm.propTypes = {\r\n  autoSwitch: bool,\r\n  columns: number,\r\n  switchInterval: number,\r\n  title: string\r\n};\r\n\r\nBoardForm.defaultProps = {\r\n  autoSwitch: true,\r\n  columns: 8,\r\n  switchInterval: 60,\r\n  title: 'Board'\r\n};\r\n\r\nexport default BoardForm;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useToggle } from '../hooks';\r\nimport { addNewBoard } from '../actions/thunks';\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport AppDialog from './AppDialog';\r\nimport BoardForm from './BoardForm';\r\n\r\nconst AddBoard = () => {\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const handleAddBoardClick = event => {\r\n    event.stopPropagation();\r\n    openDialog();\r\n  };\r\n\r\n  const handleAddActionClick = values => {\r\n    dispatch(addNewBoard(values));\r\n    handleDialogClose();\r\n  };\r\n\r\n  if (!isAuthenticated) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={handleAddBoardClick}\r\n        color=\"primary\"\r\n        data-cy=\"add-board-add-button\"\r\n      >\r\n        <Add />\r\n      </IconButton>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title=\"Add new board\"\r\n      >\r\n        <BoardForm\r\n          handleSubmit={handleAddActionClick}\r\n          handleCancel={handleDialogClose}\r\n        />\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddBoard;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getIsAuthenticated } from '../selectors';\r\n\r\nimport AddBoard from './AddBoard';\r\n\r\nconst NoBoards = ({ className }) => {\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div>\r\n        <h1>No boards found</h1>\r\n        {isAuthenticated && <h3>Add first board</h3>}\r\n        <AddBoard />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoBoards;\r\n","import styled from '@emotion/styled/macro';\r\nimport { getColumns } from './helpers';\r\nimport NotFound from '../NotFound';\r\nimport NoBoards from '../NoBoards';\r\n\r\nexport const StyledContainer = styled.div`\r\n  display: grid;\r\n  grid-gap: 10px;\r\n  grid-template-columns: repeat(${getColumns}, 1fr);\r\n  grid-auto-rows: 0.5fr;\r\n`;\r\n\r\nconst BaseNoData = component => styled(component)`\r\n  background: #fff;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n\r\n  > div {\r\n    padding: 0 15px;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const StyledNotFound = styled(BaseNoData(NotFound))`\r\n  background: #211f39;\r\n  z-index: 2000;\r\n`;\r\n\r\nexport const StyledNoBoards = BaseNoData(NoBoards);\r\n","import { COLUMN_MULTIPLIER } from '../../constants';\r\n\r\nexport const getColumns = props => props.columns * COLUMN_MULTIPLIER;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setCurrentBoard } from '../../actions/actionCreators';\r\n\r\nimport WidgetList from '../WidgetList';\r\nimport { StyledContainer, StyledNotFound, StyledNoBoards } from './styled';\r\n\r\nconst Board = ({ boardId, className }) => {\r\n  const currentBoard = useSelector(({ boards }) => boards.boardsById[boardId]);\r\n  const allBoardsLength = useSelector(({ boards }) => boards.allBoards).length;\r\n  const { columns, widgets } = currentBoard || {};\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    boardId && dispatch(setCurrentBoard(boardId));\r\n  }, [dispatch, boardId]);\r\n\r\n  if (allBoardsLength === 0) {\r\n    return <StyledNoBoards />;\r\n  }\r\n\r\n  if (!currentBoard) {\r\n    return <StyledNotFound />;\r\n  }\r\n\r\n  return (\r\n    <StyledContainer className={className} columns={columns}>\r\n      <WidgetList widgets={widgets} />\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Board from './Board';\r\n\r\nconst IndexBoard = () => {\r\n  const [firstBoardId] = useSelector(({ boards }) => boards.allBoards);\r\n\r\n  return <Board boardId={firstBoardId} />;\r\n};\r\n\r\nexport default IndexBoard;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport { getColor } from '../../helpers';\r\n\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport const StyledTimer = styled(Typography)`\r\n  margin-right: 20px;\r\n  color: ${getColor('primary')};\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { useBoardSwitching, usePrevious } from './hooks';\r\nimport { formatTime } from './helpers';\r\n\r\nimport { IconButton, Tooltip } from '@material-ui/core';\r\nimport { SkipPrevious, PlayArrow, SkipNext, Pause } from '@material-ui/icons';\r\nimport { StyledTimer } from './styled';\r\n\r\nconst BoardSwitcher = ({ className }) => {\r\n  const theme = useTheme();\r\n  const {\r\n    handleBoardsSwitch,\r\n    handlePlayToggle,\r\n    handleResetTimeElapsed,\r\n    hasBoardsToSwitch,\r\n    isPlaying,\r\n    isDisable,\r\n    nextBoardTitle,\r\n    prevBoardTitle,\r\n    switchInterval,\r\n    timeElapsed\r\n  } = useBoardSwitching();\r\n  const timeLeft = switchInterval - timeElapsed;\r\n  const previousSwitchInterval = usePrevious(switchInterval);\r\n\r\n  useEffect(() => {\r\n    if (previousSwitchInterval !== switchInterval) {\r\n      handleResetTimeElapsed();\r\n    }\r\n  });\r\n\r\n  if (!hasBoardsToSwitch || isDisable) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      <StyledTimer theme={theme}>{formatTime(timeLeft)}</StyledTimer>\r\n      <Tooltip title={prevBoardTitle} placement=\"bottom-end\">\r\n        <IconButton\r\n          onClick={handleBoardsSwitch('prev')}\r\n          color=\"primary\"\r\n          aria-label=\"Next board\"\r\n          edge=\"start\"\r\n        >\r\n          <SkipPrevious />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <IconButton\r\n        onClick={handlePlayToggle}\r\n        color=\"primary\"\r\n        aria-label=\"Auto switch boards\"\r\n        edge=\"start\"\r\n      >\r\n        {isPlaying ? <Pause /> : <PlayArrow />}\r\n      </IconButton>\r\n      <Tooltip title={nextBoardTitle} placement=\"bottom-end\">\r\n        <IconButton\r\n          onClick={handleBoardsSwitch('next')}\r\n          color=\"primary\"\r\n          aria-label=\"Next board\"\r\n          edge=\"start\"\r\n        >\r\n          <SkipNext />\r\n        </IconButton>\r\n      </Tooltip>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardSwitcher;\r\n","import { useCallback, useEffect, useState, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\n\r\nimport {\r\n  getSwitcherBoards,\r\n  getSwitchInterval,\r\n  getBoardTitle,\r\n  getCurrentBoardId\r\n} from '../../selectors';\r\nimport { getPrevAndNextIndex } from './helpers';\r\n\r\nexport const useBoardSwitching = () => {\r\n  const switcherBoards = useSelector(getSwitcherBoards);\r\n  const currentBoardId = useSelector(getCurrentBoardId);\r\n  const hasBoardsToSwitch = switcherBoards.length > 1;\r\n  const boardIndex = switcherBoards.includes(currentBoardId)\r\n    ? switcherBoards.indexOf(currentBoardId)\r\n    : 0;\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [prevBoardIndex, nextBoardIndex] = getPrevAndNextIndex(\r\n    switcherBoards,\r\n    boardIndex\r\n  );\r\n  const switchInterval = useSelector(state =>\r\n    getSwitchInterval(state, switcherBoards[boardIndex])\r\n  );\r\n  const prevBoardTitle = useSelector(state =>\r\n    getBoardTitle(state, switcherBoards[prevBoardIndex])\r\n  );\r\n  const nextBoardTitle = useSelector(state =>\r\n    getBoardTitle(state, switcherBoards[nextBoardIndex])\r\n  );\r\n  const isDisable = !switcherBoards.includes(currentBoardId);\r\n\r\n  const switchBoard = useCallback(\r\n    direction => {\r\n      const switchDirection = {\r\n        next: nextBoardIndex,\r\n        prev: prevBoardIndex\r\n      };\r\n      const currentBoardIndex = switchDirection[direction];\r\n\r\n      navigate(switcherBoards[currentBoardIndex] || switcherBoards[0]);\r\n    },\r\n    [nextBoardIndex, prevBoardIndex, switcherBoards]\r\n  );\r\n\r\n  const handleBoardsSwitch = direction => () => {\r\n    if (!hasBoardsToSwitch) {\r\n      return;\r\n    }\r\n\r\n    switchBoard(direction);\r\n    setTimeElapsed(0);\r\n    setIsPlaying(false);\r\n  };\r\n\r\n  const handlePlayToggle = () => {\r\n    setIsPlaying(prevState => !prevState);\r\n  };\r\n\r\n  const handleResetTimeElapsed = () => {\r\n    setTimeElapsed(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      const interval = setInterval(() => {\r\n        setTimeElapsed(prevState => prevState + 1);\r\n\r\n        if (timeElapsed >= switchInterval) {\r\n          switchBoard('next');\r\n          setTimeElapsed(0);\r\n        }\r\n      }, 1000);\r\n\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isPlaying, timeElapsed, switchInterval, switchBoard]);\r\n\r\n  return {\r\n    handleBoardsSwitch,\r\n    handlePlayToggle,\r\n    handleResetTimeElapsed,\r\n    hasBoardsToSwitch,\r\n    isPlaying,\r\n    isDisable,\r\n    nextBoardTitle,\r\n    prevBoardTitle,\r\n    switchInterval,\r\n    timeElapsed\r\n  };\r\n};\r\n\r\nexport const usePrevious = value => {\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n\r\n  return ref.current;\r\n};\r\n","export const formatTime = timeInSec => {\r\n  const seconds = timeInSec % 60;\r\n  const minutes = Math.floor(timeInSec / 60);\r\n  const leadingZero = seconds < 10 ? 0 : '';\r\n\r\n  return `${minutes}:${leadingZero}${seconds}`;\r\n};\r\n\r\nexport const getPrevAndNextIndex = (array, currentIndex) => {\r\n  const lastIndex = array.length - 1;\r\n  const nextIndex = currentIndex < lastIndex ? currentIndex + 1 : 0;\r\n  const prevIndex = currentIndex > 0 ? currentIndex - 1 : lastIndex;\r\n\r\n  return [prevIndex, nextIndex];\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { login, logout } from '../../actions/thunks';\r\nimport { clearLoginErrorMessage } from '../../actions/actionCreators';\r\nimport { getIsAuthenticated } from '../../selectors';\r\nimport { getCredentials } from './helpers';\r\n\r\nimport { Button, IconButton, TextField, Typography } from '@material-ui/core';\r\nimport { AccountCircle, PowerSettingsNew } from '@material-ui/icons';\r\nimport AppDialog from './../AppDialog';\r\nimport { StyledFieldset } from '../styled';\r\n\r\nconst UserLogin = () => {\r\n  const dispatch = useDispatch();\r\n  const errorMsg = useSelector(({ app }) => app.loginErrorMessage);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      handleDialogClose();\r\n    }\r\n  }, [isAuthenticated, handleDialogClose]);\r\n\r\n  const handleLoginButtonClick = () => {\r\n    const credentials = getCredentials();\r\n    dispatch(login(credentials));\r\n  };\r\n\r\n  const handleLoginOnEnterPress = event => {\r\n    if (event.key === 'Enter') {\r\n      handleLoginButtonClick();\r\n    }\r\n  };\r\n\r\n  const handleLoginDialogOpen = () => {\r\n    openDialog(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  function closeDialog() {\r\n    handleDialogClose();\r\n    dispatch(clearLoginErrorMessage());\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!isAuthenticated && (\r\n        <IconButton\r\n          onClick={handleLoginDialogOpen}\r\n          aria-label=\"Login\"\r\n          color=\"inherit\"\r\n          edge=\"start\"\r\n          data-cy=\"user-login-login-icon\"\r\n        >\r\n          <AccountCircle color=\"primary\" />\r\n        </IconButton>\r\n      )}\r\n      {isAuthenticated && (\r\n        <IconButton\r\n          onClick={handleLogout}\r\n          aria-label=\"Logout\"\r\n          color=\"inherit\"\r\n          edge=\"start\"\r\n          data-cy=\"user-login-logout-icon\"\r\n        >\r\n          <PowerSettingsNew color=\"primary\" />\r\n        </IconButton>\r\n      )}\r\n      <AppDialog\r\n        handleDialogClose={closeDialog}\r\n        open={dialogOpened}\r\n        title=\"User Login\"\r\n      >\r\n        <StyledFieldset component=\"fieldset\">\r\n          {errorMsg && (\r\n            <Typography color=\"error\" data-cy=\"user-login-error-messages\">\r\n              {errorMsg}\r\n            </Typography>\r\n          )}\r\n          <TextField\r\n            autoFocus\r\n            id=\"username\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            label=\"Username\"\r\n            margin=\"normal\"\r\n            onKeyPress={handleLoginOnEnterPress}\r\n            inputProps={{ 'data-cy': 'user-login-username-input' }}\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            onKeyPress={handleLoginOnEnterPress}\r\n            inputProps={{ 'data-cy': 'user-login-password-input' }}\r\n          />\r\n          <Button\r\n            color=\"primary\"\r\n            onClick={handleLoginButtonClick}\r\n            variant=\"contained\"\r\n            data-cy=\"user-login-submit-button\"\r\n          >\r\n            Login\r\n          </Button>\r\n        </StyledFieldset>\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","export const getCredentials = () => {\r\n  const usernameField = document.getElementById('username');\r\n  const passwordField = document.getElementById('password');\r\n  return {\r\n    username: usernameField ? usernameField.value : '',\r\n    password: passwordField ? passwordField.value : ''\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { func } from 'prop-types';\r\nimport styled from '@emotion/styled/macro';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport { getSize, getBackgroundColor } from '../helpers';\r\n\r\nimport { AppBar, Container, Toolbar, IconButton } from '@material-ui/core';\r\nimport { DashboardRounded } from '@material-ui/icons';\r\nimport { StyledTitle } from './styled';\r\n\r\nimport BoardSwitcher from './BoardSwitcher';\r\nimport UserLogin from './UserLogin';\r\n\r\nconst StyledBoardSwitcher = styled(BoardSwitcher)`\r\n  align-items: center;\r\n  display: flex;\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StyledAppBar = styled(AppBar)`\r\n  background-color: ${getBackgroundColor('default')};\r\n  box-shadow: none;\r\n`;\r\n\r\nconst StyledToolbar = styled(Toolbar)`\r\n  min-height: ${getSize(10)};\r\n`;\r\n\r\nconst NavBar = ({ handleDrawerToggle }) => {\r\n  const theme = useTheme();\r\n  const noBoardsFound =\r\n    useSelector(({ boards }) => boards.allBoards).length === 0;\r\n  const title = useSelector(({ ui, boards }) =>\r\n    ui.currentBoard && boards.boardsById[ui.currentBoard]\r\n      ? boards.boardsById[ui.currentBoard].title\r\n      : ''\r\n  );\r\n\r\n  return (\r\n    <StyledAppBar position=\"fixed\" theme={theme}>\r\n      <Container maxWidth=\"xl\">\r\n        <StyledToolbar disableGutters theme={theme}>\r\n          <IconButton\r\n            onClick={handleDrawerToggle(true)}\r\n            aria-label=\"Open boards drawer\"\r\n            color=\"inherit\"\r\n            edge=\"start\"\r\n            data-cy=\"navbar-show-drawer-button\"\r\n          >\r\n            <DashboardRounded color=\"primary\" />\r\n          </IconButton>\r\n          <UserLogin />\r\n          {!noBoardsFound && (\r\n            <StyledTitle\r\n              component=\"h2\"\r\n              variant=\"h3\"\r\n              theme={theme}\r\n              data-cy=\"navbar-title-header\"\r\n            >\r\n              {title}\r\n            </StyledTitle>\r\n          )}\r\n          <StyledBoardSwitcher />\r\n        </StyledToolbar>\r\n      </Container>\r\n    </StyledAppBar>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  handleDrawerToggle: func.isRequired\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { CheckCircle, Error, Info, Warning } from '@material-ui/icons';\r\n\r\nconst IconVariant = ({ variant }) => {\r\n  const iconByVariant = {\r\n    success: CheckCircle,\r\n    warning: Warning,\r\n    error: Error,\r\n    info: Info\r\n  };\r\n\r\n  const Icon =\r\n    variant in iconByVariant ? iconByVariant[variant] : iconByVariant['info'];\r\n\r\n  return <Icon />;\r\n};\r\n\r\nexport default IconVariant;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { mapVariantToColor } from './helpers';\r\n\r\nimport { SnackbarContent } from '@material-ui/core';\r\n\r\nexport const StyledSnackbarContent = styled(({ theme, variant, ...other }) => (\r\n  <SnackbarContent {...other} />\r\n))`\r\n  background: ${({ theme, variant }) => mapVariantToColor(theme, variant)};\r\n`;\r\n","export const mapVariantToColor = (theme, variant) =>\r\n  theme.palette.snackbarVariant[variant];\r\n","import React from 'react';\r\nimport { func, oneOf, string } from 'prop-types';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { Box } from '@material-ui/core';\r\nimport IconVariant from '../IconVariant';\r\nimport { StyledSnackbarContent } from './styled';\r\n\r\nconst SnackbarVariantContent = ({ message, variant }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledSnackbarContent\r\n      theme={theme}\r\n      variant={variant}\r\n      message={\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconVariant variant={variant} />\r\n          <Box marginLeft={1}>{message}</Box>\r\n        </Box>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nSnackbarVariantContent.propTypes = {\r\n  variant: oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n  message: string,\r\n  onClose: func\r\n};\r\n\r\nexport default SnackbarVariantContent;\r\n","import React, { useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useToggle } from '../hooks';\r\nimport { createGetNotification } from '../selectors';\r\nimport { deleteNotification } from '../actions/actionCreators';\r\n\r\nimport Snackbar from '@material-ui/core/Snackbar/index';\r\nimport SnackbarVariantContent from './SnackbarVariantContent';\r\n\r\nconst SnackbarWithVariant = React.memo(\r\n  ({ notificationId, vertical, horizontal, 'data-cy': dataCy }) => {\r\n    const getNotification = useMemo(createGetNotification, []);\r\n    const { type, message, duration } = useSelector(state =>\r\n      getNotification(state, notificationId)\r\n    );\r\n    const dispatch = useDispatch();\r\n    const [isOpened, , closeSnackbar] = useToggle(true);\r\n\r\n    const handleClose = (event, reason) => {\r\n      if (reason !== 'timeout') {\r\n        return;\r\n      }\r\n\r\n      closeSnackbar();\r\n    };\r\n\r\n    const handleExited = () => dispatch(deleteNotification(notificationId));\r\n\r\n    return (\r\n      <Snackbar\r\n        onClose={handleClose}\r\n        onExited={handleExited}\r\n        anchorOrigin={{ vertical, horizontal }}\r\n        autoHideDuration={duration}\r\n        disableWindowBlurListener\r\n        open={isOpened}\r\n        data-cy={dataCy}\r\n      >\r\n        <SnackbarVariantContent variant={type} message={message} />\r\n      </Snackbar>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SnackbarWithVariant;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { getAllNotifications } from '../../selectors';\r\n\r\nimport SnackbarWithVariant from '../SnackbarWithVariant';\r\n\r\nconst Notifications = () => {\r\n  const allNotifications = useSelector(getAllNotifications);\r\n\r\n  return allNotifications.map(id => (\r\n    <SnackbarWithVariant\r\n      horizontal=\"center\"\r\n      key={id}\r\n      notificationId={id}\r\n      vertical=\"top\"\r\n      data-cy=\"notification-snackbar\"\r\n    />\r\n  ));\r\n};\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { saveBoard } from '../actions/thunks';\r\n\r\nimport BoardForm from './BoardForm';\r\n\r\nconst EditBoard = ({ closeDialog, id, ...initialFormValues }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSaveClick = values => {\r\n    dispatch(saveBoard({ id, ...values }));\r\n    closeDialog();\r\n  };\r\n\r\n  return (\r\n    <BoardForm\r\n      {...initialFormValues}\r\n      handleSubmit={handleSaveClick}\r\n      handleCancel={closeDialog}\r\n      boardId={id}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditBoard;\r\n","import React, { forwardRef } from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { Card, CardActions } from '@material-ui/core';\r\n\r\nexport const StyledCard = styled(\r\n  forwardRef(({ isLoggedIn, isDragging, isOver, theme, ...other }, ref) => (\r\n    <Card {...other} ref={ref} />\r\n  ))\r\n)`\r\n  background-color: ${({ theme }) => theme.palette.background.board.card}};\r\n  box-shadow: none;\r\n  cursor: ${({ isLoggedIn }) => (isLoggedIn ? 'move' : 'default')};\r\n  position: relative;\r\n\r\n  ${({ isDragging, isOver, theme }) =>\r\n    isDragging &&\r\n    `\r\n    &::before {\r\n      background-color: ${theme.palette.background.board.dragged};\r\n      border: ${isOver && `1px dashed ${theme.palette.action.hover}`};\r\n      border-radius: inherit;\r\n      content: '';\r\n      display: block;\r\n      height: 100%;\r\n      position: absolute;\r\n      z-index: 2;\r\n      opacity: ${isDragging ? 1 : 0};\r\n      width: 100%;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const StyledCardActions = styled(CardActions)`\r\n  justify-content: flex-end;\r\n  z-index: 1;\r\n`;\r\n","import React, { useRef } from 'react';\r\nimport { object } from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { navigate } from '@reach/router';\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { deleteBoardWithWidgets } from '../../actions/thunks';\r\nimport { reorderBoard } from '../../actions/thunks';\r\nimport { ItemTypes } from '../../constants';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { CardHeader, CardContent, IconButton } from '@material-ui/core';\r\nimport { Delete, Edit } from '@material-ui/icons';\r\nimport AppDialog from '../AppDialog';\r\nimport EditBoard from '../EditBoard';\r\nimport { StyledCard, StyledCardActions } from './styled';\r\nimport ConfirmationDialog from '../ConfirmationDialog';\r\n\r\nconst BoardCard = ({ boardData, index, className }) => {\r\n  const { autoSwitch, columns, id, switchInterval, title } = boardData;\r\n  const [open, openDialog, handleDialogClose] = useToggle();\r\n  const [\r\n    confirmationDialogOpened,\r\n    openConfirmationDialog,\r\n    closeConfirmationDialog\r\n  ] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n\r\n  const ref = useRef(null);\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { type: ItemTypes.BOARD, id, index },\r\n    canDrag: isAuthenticated,\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const [{ isOver }, drop] = useDrop({\r\n    accept: ItemTypes.BOARD,\r\n    hover(item, monitor) {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n\r\n      const { id: sourceId, index: sourceIndex } = item;\r\n      const targetIndex = index;\r\n\r\n      if (sourceIndex === targetIndex) {\r\n        return;\r\n      }\r\n\r\n      const { top, bottom } = ref.current.getBoundingClientRect();\r\n      const dropTargetMiddleY = bottom - (bottom - top) / 2;\r\n      const { y: dragSourceMouseY } = monitor.getClientOffset();\r\n\r\n      const hasPointerPassedMiddle =\r\n        (sourceIndex < targetIndex && dragSourceMouseY >= dropTargetMiddleY) ||\r\n        (sourceIndex > targetIndex && dragSourceMouseY <= dropTargetMiddleY);\r\n\r\n      if (!hasPointerPassedMiddle) {\r\n        return;\r\n      }\r\n\r\n      dispatch(reorderBoard(sourceId, targetIndex));\r\n      item.index = targetIndex;\r\n    },\r\n    collect: monitor => ({\r\n      isOver: monitor.isOver(),\r\n      dropResult: monitor.getSourceClientOffset()\r\n    })\r\n  });\r\n\r\n  drag(drop(ref));\r\n\r\n  const handleBoardClick = boardId => () => {\r\n    navigate(boardId);\r\n  };\r\n\r\n  const handleEditClick = event => {\r\n    event.stopPropagation();\r\n    openDialog();\r\n  };\r\n\r\n  const handleDeleteClick = event => {\r\n    event.stopPropagation();\r\n    openConfirmationDialog();\r\n  };\r\n\r\n  const deleteBoard = () => {\r\n    dispatch(deleteBoardWithWidgets(id));\r\n    closeConfirmationDialog();\r\n  };\r\n\r\n  return (\r\n    <div className={className} data-cy=\"board-card\">\r\n      <StyledCard\r\n        onClick={handleBoardClick(id)}\r\n        theme={theme}\r\n        isLoggedIn={isAuthenticated}\r\n        isDragging={isDragging}\r\n        isOver={isOver}\r\n        ref={ref}\r\n      >\r\n        <CardHeader\r\n          title={title}\r\n          titleTypographyProps={{\r\n            component: 'h3',\r\n            variant: 'subtitle2',\r\n            color: 'textPrimary'\r\n          }}\r\n          data-cy=\"board-card-header\"\r\n        />\r\n        <CardContent></CardContent>\r\n        {isAuthenticated && (\r\n          <StyledCardActions>\r\n            <IconButton\r\n              onClick={handleEditClick}\r\n              aria-label=\"edit\"\r\n              size=\"small\"\r\n              data-cy=\"board-card-edit-button\"\r\n            >\r\n              <Edit />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={handleDeleteClick}\r\n              aria-label=\"delete\"\r\n              size=\"small\"\r\n              data-cy=\"board-card-delete-button\"\r\n            >\r\n              <Delete />\r\n            </IconButton>\r\n          </StyledCardActions>\r\n        )}\r\n      </StyledCard>\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={open}\r\n        title={`Edit ${title}`}\r\n        data-cy=\"board-card-edit-dialog\"\r\n      >\r\n        <EditBoard\r\n          closeDialog={handleDialogClose}\r\n          autoSwitch={autoSwitch}\r\n          columns={columns}\r\n          id={id}\r\n          switchInterval={switchInterval}\r\n          title={title}\r\n        />\r\n      </AppDialog>\r\n      <ConfirmationDialog\r\n        open={confirmationDialogOpened}\r\n        title={`Delete ${title}`}\r\n        content={`Are you sure you want to delete ${title}?`}\r\n        handleOk={deleteBoard}\r\n        labelOk=\"Delete\"\r\n        handleCancel={closeConfirmationDialog}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nBoardCard.propTypes = {\r\n  boardData: object.isRequired\r\n};\r\n\r\nexport default BoardCard;\r\n","import styled from '@emotion/styled/macro';\r\n\r\nimport BoardCard from '../BoardCard';\r\n\r\nexport const StyledBoardCard = styled(BoardCard)`\r\n  margin-bottom: 22px;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport { StyledBoardCard } from './styled';\r\n\r\nconst BoardList = ({ className }) => {\r\n  const boards = useSelector(({ boards }) => {\r\n    const { boardsById, allBoards } = boards;\r\n\r\n    return allBoards.map(boardId => boardsById[boardId]);\r\n  });\r\n\r\n  return (\r\n    <Box className={className}>\r\n      {boards.map((boardData, index) => (\r\n        <StyledBoardCard\r\n          boardData={boardData}\r\n          key={boardData.id}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BoardList;\r\n","import React from 'react';\r\n\r\nimport logo from '../assets/images/cogBoard-blue.png';\r\n\r\nconst Logo = ({ className }) => (\r\n  <img className={className} src={logo} alt=\"Cogboard logo\" />\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport styled from '@emotion/styled/macro';\r\n\r\nimport { getBackgroundColor } from '../../helpers';\r\n\r\nimport { Box, Drawer, Fab } from '@material-ui/core';\r\nimport BoardList from '../BoardList';\r\nimport Logo from '../Logo';\r\n\r\nexport const StyledActions = styled(Box)`\r\n  bottom: 50px;\r\n  position: fixed;\r\n  right: 50px;\r\n  z-index: 10000;\r\n`;\r\n\r\nexport const StyledSaveFab = styled(Fab)`\r\n  margin-right: 16px;\r\n`;\r\n\r\nexport const StyledBoardList = styled(BoardList)`\r\n  padding: 32px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const StyledMain = styled.main`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 110px;\r\n`;\r\n\r\nexport const StyledLogo = styled(Logo)`\r\n  width: 40%;\r\n  margin-bottom: 32px;\r\n`;\r\n\r\nexport const StyledDrawerContainer = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 32px;\r\n  width: 250px;\r\n  background: #fff;\r\n`;\r\n\r\nexport const StyledDrawer = styled(props => (\r\n  <Drawer classes={{ paper: 'paper' }} {...props} />\r\n))`\r\n  .paper {\r\n    background: ${getBackgroundColor('default')};\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useTheme } from '@material-ui/styles';\r\n\r\nimport { useToggle } from '../../hooks';\r\nimport { saveData } from '../../actions/thunks';\r\nimport { getIsAuthenticated } from '../../selectors';\r\n\r\nimport { Router } from '@reach/router';\r\nimport { Container, Fab } from '@material-ui/core';\r\nimport { Add, Save } from '@material-ui/icons';\r\nimport AppDialog from '../AppDialog';\r\nimport AddWidget from '../AddWidget';\r\nimport BoardIndex from '../BoardIndex';\r\nimport Board from '../Board';\r\nimport NavBar from '../NavBar';\r\nimport AddBoard from '../AddBoard';\r\nimport Notifications from '../Notifications';\r\nimport {\r\n  StyledActions,\r\n  StyledBoardList,\r\n  StyledDrawer,\r\n  StyledDrawerContainer,\r\n  StyledLogo,\r\n  StyledMain,\r\n  StyledSaveFab\r\n} from './styled';\r\n\r\nconst MainTemplate = () => {\r\n  const currentBoardId = useSelector(({ ui }) => ui.currentBoard);\r\n  const isDataChanged = useSelector(({ app }) => app.isDataChanged);\r\n  const isAuthenticated = useSelector(getIsAuthenticated);\r\n  const [drawerOpened, setDrawerOpened] = useState(false);\r\n  const [dialogOpened, openDialog, handleDialogClose] = useToggle();\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const handleSaveDataClick = () => {\r\n    dispatch(saveData());\r\n  };\r\n\r\n  const handleAddWidgetClick = () => {\r\n    openDialog(true);\r\n  };\r\n\r\n  const handleDrawerToggle = opened => event => {\r\n    const { type, key } = event;\r\n\r\n    if (type === 'keydown' && (key === 'Tab' || key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setDrawerOpened(opened);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavBar handleDrawerToggle={handleDrawerToggle} />\r\n      <StyledDrawer\r\n        onClose={handleDrawerToggle(false)}\r\n        open={drawerOpened}\r\n        theme={theme}\r\n      >\r\n        <StyledDrawerContainer\r\n          onClick={handleDrawerToggle(false)}\r\n          onKeyDown={handleDrawerToggle(false)}\r\n          role=\"presentation\"\r\n        >\r\n          <StyledLogo />\r\n          <AddBoard />\r\n          <StyledBoardList />\r\n        </StyledDrawerContainer>\r\n      </StyledDrawer>\r\n      <StyledMain>\r\n        <Container maxWidth=\"xl\">\r\n          <Router>\r\n            <BoardIndex path=\"/\" />\r\n            <Board path=\"/:boardId\" />\r\n          </Router>\r\n          <StyledActions>\r\n            {isAuthenticated && isDataChanged && (\r\n              <StyledSaveFab\r\n                onClick={handleSaveDataClick}\r\n                aria-label=\"Save Data\"\r\n                color=\"secondary\"\r\n                data-cy=\"main-template-save-data-button\"\r\n              >\r\n                <Save />\r\n              </StyledSaveFab>\r\n            )}\r\n            {isAuthenticated && currentBoardId && (\r\n              <Fab\r\n                onClick={handleAddWidgetClick}\r\n                aria-label=\"Add Widget\"\r\n                color=\"primary\"\r\n                data-cy=\"main-template-add-widget-button\"\r\n              >\r\n                <Add />\r\n              </Fab>\r\n            )}\r\n          </StyledActions>\r\n        </Container>\r\n      </StyledMain>\r\n      <Notifications />\r\n      <AppDialog\r\n        disableBackdropClick={true}\r\n        handleDialogClose={handleDialogClose}\r\n        open={dialogOpened}\r\n        title=\"Add new widget\"\r\n        data-cy=\"main-template-add-widget-dialog\"\r\n      >\r\n        <AddWidget closeDialog={handleDialogClose} />\r\n      </AppDialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainTemplate;\r\n","import React from 'react';\r\n\r\nimport ErrorPage from './ErrorPage';\r\n\r\nconst ServerErrorPage = props => (\r\n  <ErrorPage\r\n    title=\"Interal Server Error\"\r\n    tip=\"Ooops... Something gone wrong. For more details check server's logs.\"\r\n  />\r\n);\r\n\r\nexport default ServerErrorPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { DndProvider } from 'react-dnd';\r\nimport HTML5Backend from 'react-dnd-html5-backend';\r\nimport { Router } from '@reach/router';\r\n\r\nimport { fetchInitialData } from './actions/thunks';\r\nimport {\r\n  updateWidget,\r\n  saveDataSuccess,\r\n  loginSuccess\r\n} from './actions/actionCreators';\r\nimport { theme } from './theme';\r\n\r\nimport MainTemplate from './components/MainTemplate';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { isAuthenticated } from './utils/auth';\r\nimport ServerErrorPage from './components/ServerErrorPage';\r\n\r\nfunction App() {\r\n  const appInitialized = useSelector(({ app }) => app.initialized);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated()) {\r\n      dispatch(loginSuccess());\r\n    }\r\n\r\n    dispatch(fetchInitialData());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (appInitialized) {\r\n      const socket = new WebSocket(\r\n        `ws://${window.location.hostname}:${process.env.REACT_APP_WS_PORT}`\r\n      );\r\n      const handleMessageReceive = ({ data: dataJson }) => {\r\n        const { eventType, ...data } = JSON.parse(dataJson);\r\n\r\n        if (eventType === 'widget-update') {\r\n          dispatch(updateWidget(data));\r\n        } else if (eventType === 'notification-config-save') {\r\n          dispatch(saveDataSuccess());\r\n        }\r\n      };\r\n\r\n      socket.addEventListener('message', handleMessageReceive);\r\n\r\n      return () => {\r\n        socket.removeEventListener('message', handleMessageReceive);\r\n      };\r\n    }\r\n  }, [appInitialized, dispatch]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <ServerErrorPage path=\"error-page\" />\r\n          {appInitialized && <MainTemplate path=\"/*\" />}\r\n        </Router>\r\n      </DndProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './configureStore';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nexport default function configureStore() {\r\n  const middlewares = [thunkMiddleware];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewareEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n\r\n  const store = createStore(rootReducer, composedEnhancers);\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}